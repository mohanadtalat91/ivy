Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/extensions", "data_classes/array/extensions/activations", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions", "data_classes/array/extensions/array_methods", "data_classes/array/extensions/array_methods/diagflat", "data_classes/array/extensions/array_methods/dirichlet", "data_classes/array/extensions/array_methods/exp2", "data_classes/array/extensions/array_methods/flatten", "data_classes/array/extensions/array_methods/flipud", "data_classes/array/extensions/array_methods/float_power", "data_classes/array/extensions/array_methods/fmax", "data_classes/array/extensions/array_methods/fmod", "data_classes/array/extensions/array_methods/heaviside", "data_classes/array/extensions/array_methods/hstack", "data_classes/array/extensions/array_methods/lcm", "data_classes/array/extensions/array_methods/max_pool1d", "data_classes/array/extensions/array_methods/max_pool2d", "data_classes/array/extensions/array_methods/median", "data_classes/array/extensions/array_methods/moveaxis", "data_classes/array/extensions/array_methods/msort", "data_classes/array/extensions/array_methods/pad", "data_classes/array/extensions/array_methods/rot90", "data_classes/array/extensions/array_methods/sinc", "data_classes/array/extensions/array_methods/trapz", "data_classes/array/extensions/array_methods/vstack", "data_classes/array/extensions/conversions", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions", "data_classes/array/extensions/creation", "data_classes/array/extensions/creation/ArrayWithCreationExtensions", "data_classes/array/extensions/data_type", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions", "data_classes/array/extensions/device", "data_classes/array/extensions/device/ArrayWithDeviceExtensions", "data_classes/array/extensions/elementwise", "data_classes/array/extensions/elementwise/ArrayWithElementWiseExtensions", "data_classes/array/extensions/general", "data_classes/array/extensions/general/ArrayWithGeneralExtensions", "data_classes/array/extensions/gradients", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions", "data_classes/array/extensions/image", "data_classes/array/extensions/image/ArrayWithImageExtension", "data_classes/array/extensions/layers", "data_classes/array/extensions/layers/ArrayWithLayersExtensions", "data_classes/array/extensions/linear_algebra", "data_classes/array/extensions/linear_algebra/ArrayWithLinalgExtensions", "data_classes/array/extensions/losses", "data_classes/array/extensions/losses/ArrayWithLossesExtensions", "data_classes/array/extensions/manipulation", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions", "data_classes/array/extensions/norms", "data_classes/array/extensions/norms/ArrayWithNormsExtensions", "data_classes/array/extensions/random", "data_classes/array/extensions/random/ArrayWithRandomExtensions", "data_classes/array/extensions/searching", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions", "data_classes/array/extensions/set", "data_classes/array/extensions/set/ArrayWithSetExtensions", "data_classes/array/extensions/sorting", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions", "data_classes/array/extensions/statistical", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions", "data_classes/array/extensions/utility", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/extensions", "data_classes/container/extensions/activations", "data_classes/container/extensions/activations/ContainerWithActivationExtensions", "data_classes/container/extensions/container_methods", "data_classes/container/extensions/container_methods/diagflat", "data_classes/container/extensions/container_methods/dirichlet", "data_classes/container/extensions/container_methods/exp2", "data_classes/container/extensions/container_methods/flatten", "data_classes/container/extensions/container_methods/flipud", "data_classes/container/extensions/container_methods/float_power", "data_classes/container/extensions/container_methods/fmax", "data_classes/container/extensions/container_methods/fmod", "data_classes/container/extensions/container_methods/hamming_window", "data_classes/container/extensions/container_methods/hann_window", "data_classes/container/extensions/container_methods/heaviside", "data_classes/container/extensions/container_methods/hstack", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/kaiser_window", "data_classes/container/extensions/container_methods/lcm", "data_classes/container/extensions/container_methods/max_pool1d", "data_classes/container/extensions/container_methods/max_pool2d", "data_classes/container/extensions/container_methods/median", "data_classes/container/extensions/container_methods/moveaxis", "data_classes/container/extensions/container_methods/msort", "data_classes/container/extensions/container_methods/pad", "data_classes/container/extensions/container_methods/rot90", "data_classes/container/extensions/container_methods/sinc", "data_classes/container/extensions/container_methods/static_diagflat", "data_classes/container/extensions/container_methods/static_dirichlet", "data_classes/container/extensions/container_methods/static_exp2", "data_classes/container/extensions/container_methods/static_flatten", "data_classes/container/extensions/container_methods/static_flipud", "data_classes/container/extensions/container_methods/static_float_power", "data_classes/container/extensions/container_methods/static_fmax", "data_classes/container/extensions/container_methods/static_fmod", "data_classes/container/extensions/container_methods/static_hamming_window", "data_classes/container/extensions/container_methods/static_hann_window", "data_classes/container/extensions/container_methods/static_heaviside", "data_classes/container/extensions/container_methods/static_hstack", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/static_kaiser_window", "data_classes/container/extensions/container_methods/static_lcm", "data_classes/container/extensions/container_methods/static_max_pool1d", "data_classes/container/extensions/container_methods/static_max_pool2d", "data_classes/container/extensions/container_methods/static_median", "data_classes/container/extensions/container_methods/static_moveaxis", "data_classes/container/extensions/container_methods/static_msort", "data_classes/container/extensions/container_methods/static_pad", "data_classes/container/extensions/container_methods/static_rot90", "data_classes/container/extensions/container_methods/static_sinc", "data_classes/container/extensions/container_methods/static_triu_indices", "data_classes/container/extensions/container_methods/static_vstack", "data_classes/container/extensions/container_methods/triu_indices", "data_classes/container/extensions/container_methods/vstack", "data_classes/container/extensions/conversions", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions", "data_classes/container/extensions/creation", "data_classes/container/extensions/creation/ContainerWithCreationExtensions", "data_classes/container/extensions/data_type", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions", "data_classes/container/extensions/device", "data_classes/container/extensions/device/ContainerWithDeviceExtensions", "data_classes/container/extensions/elementwise", "data_classes/container/extensions/elementwise/ContainerWithElementWiseExtensions", "data_classes/container/extensions/general", "data_classes/container/extensions/general/ContainerWithGeneralExtensions", "data_classes/container/extensions/gradients", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions", "data_classes/container/extensions/image", "data_classes/container/extensions/image/ContainerWithImageExtensions", "data_classes/container/extensions/layers", "data_classes/container/extensions/layers/ContainerWithLayersExtensions", "data_classes/container/extensions/linear_algebra", "data_classes/container/extensions/linear_algebra/ContainerWithLinalgExtensions", "data_classes/container/extensions/losses", "data_classes/container/extensions/losses/ContainerWithLossesExtensions", "data_classes/container/extensions/manipulation", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions", "data_classes/container/extensions/norms", "data_classes/container/extensions/norms/ContainerWithNormsExtensions", "data_classes/container/extensions/random", "data_classes/container/extensions/random/ContainerWithRandomExtensions", "data_classes/container/extensions/searching", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions", "data_classes/container/extensions/set", "data_classes/container/extensions/set/ContainerWithSetExtensions", "data_classes/container/extensions/sorting", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions", "data_classes/container/extensions/statistical", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions", "data_classes/container/extensions/utility", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/extensions", "functional/extensions/activations", "functional/extensions/compilation", "functional/extensions/constants", "functional/extensions/creation", "functional/extensions/creation/triu_indices", "functional/extensions/data_type", "functional/extensions/device", "functional/extensions/elementwise", "functional/extensions/elementwise/exp2", "functional/extensions/elementwise/float_power", "functional/extensions/elementwise/fmax", "functional/extensions/elementwise/fmod", "functional/extensions/elementwise/lcm", "functional/extensions/elementwise/sinc", "functional/extensions/elementwise/trapz", "functional/extensions/general", "functional/extensions/gradients", "functional/extensions/layers", "functional/extensions/layers/hamming_window", "functional/extensions/layers/hann_window", "functional/extensions/layers/kaiser_bessel_derived_window", "functional/extensions/layers/kaiser_window", "functional/extensions/layers/max_pool1d", "functional/extensions/layers/max_pool2d", "functional/extensions/layers/pad", "functional/extensions/layers/vorbis_window", "functional/extensions/linear_algebra", "functional/extensions/linear_algebra/diagflat", "functional/extensions/losses", "functional/extensions/manipulation", "functional/extensions/manipulation/flatten", "functional/extensions/manipulation/flipud", "functional/extensions/manipulation/heaviside", "functional/extensions/manipulation/hstack", "functional/extensions/manipulation/moveaxis", "functional/extensions/manipulation/ndenumerate", "functional/extensions/manipulation/ndindex", "functional/extensions/manipulation/rot90", "functional/extensions/manipulation/vstack", "functional/extensions/meta", "functional/extensions/nest", "functional/extensions/norms", "functional/extensions/random", "functional/extensions/random/dirichlet", "functional/extensions/searching", "functional/extensions/set", "functional/extensions/sorting", "functional/extensions/sorting/msort", "functional/extensions/sparse_array", "functional/extensions/sparse_array/is_ivy_sparse_array", "functional/extensions/sparse_array/is_native_sparse_array", "functional/extensions/sparse_array/native_sparse_array", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/extensions/statistical", "functional/extensions/statistical/median", "functional/extensions/utility", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_frontend_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/extensions.rst", "data_classes/array/extensions/activations.rst", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions.rst", "data_classes/array/extensions/array_methods.rst", "data_classes/array/extensions/array_methods/diagflat.rst", "data_classes/array/extensions/array_methods/dirichlet.rst", "data_classes/array/extensions/array_methods/exp2.rst", "data_classes/array/extensions/array_methods/flatten.rst", "data_classes/array/extensions/array_methods/flipud.rst", "data_classes/array/extensions/array_methods/float_power.rst", "data_classes/array/extensions/array_methods/fmax.rst", "data_classes/array/extensions/array_methods/fmod.rst", "data_classes/array/extensions/array_methods/heaviside.rst", "data_classes/array/extensions/array_methods/hstack.rst", "data_classes/array/extensions/array_methods/lcm.rst", "data_classes/array/extensions/array_methods/max_pool1d.rst", "data_classes/array/extensions/array_methods/max_pool2d.rst", "data_classes/array/extensions/array_methods/median.rst", "data_classes/array/extensions/array_methods/moveaxis.rst", "data_classes/array/extensions/array_methods/msort.rst", "data_classes/array/extensions/array_methods/pad.rst", "data_classes/array/extensions/array_methods/rot90.rst", "data_classes/array/extensions/array_methods/sinc.rst", "data_classes/array/extensions/array_methods/trapz.rst", "data_classes/array/extensions/array_methods/vstack.rst", "data_classes/array/extensions/conversions.rst", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions.rst", "data_classes/array/extensions/creation.rst", "data_classes/array/extensions/creation/ArrayWithCreationExtensions.rst", "data_classes/array/extensions/data_type.rst", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions.rst", "data_classes/array/extensions/device.rst", "data_classes/array/extensions/device/ArrayWithDeviceExtensions.rst", "data_classes/array/extensions/elementwise.rst", "data_classes/array/extensions/elementwise/ArrayWithElementWiseExtensions.rst", "data_classes/array/extensions/general.rst", "data_classes/array/extensions/general/ArrayWithGeneralExtensions.rst", "data_classes/array/extensions/gradients.rst", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions.rst", "data_classes/array/extensions/image.rst", "data_classes/array/extensions/image/ArrayWithImageExtension.rst", "data_classes/array/extensions/layers.rst", "data_classes/array/extensions/layers/ArrayWithLayersExtensions.rst", "data_classes/array/extensions/linear_algebra.rst", "data_classes/array/extensions/linear_algebra/ArrayWithLinalgExtensions.rst", "data_classes/array/extensions/losses.rst", "data_classes/array/extensions/losses/ArrayWithLossesExtensions.rst", "data_classes/array/extensions/manipulation.rst", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions.rst", "data_classes/array/extensions/norms.rst", "data_classes/array/extensions/norms/ArrayWithNormsExtensions.rst", "data_classes/array/extensions/random.rst", "data_classes/array/extensions/random/ArrayWithRandomExtensions.rst", "data_classes/array/extensions/searching.rst", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions.rst", "data_classes/array/extensions/set.rst", "data_classes/array/extensions/set/ArrayWithSetExtensions.rst", "data_classes/array/extensions/sorting.rst", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions.rst", "data_classes/array/extensions/statistical.rst", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions.rst", "data_classes/array/extensions/utility.rst", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/extensions.rst", "data_classes/container/extensions/activations.rst", "data_classes/container/extensions/activations/ContainerWithActivationExtensions.rst", "data_classes/container/extensions/container_methods.rst", "data_classes/container/extensions/container_methods/diagflat.rst", "data_classes/container/extensions/container_methods/dirichlet.rst", "data_classes/container/extensions/container_methods/exp2.rst", "data_classes/container/extensions/container_methods/flatten.rst", "data_classes/container/extensions/container_methods/flipud.rst", "data_classes/container/extensions/container_methods/float_power.rst", "data_classes/container/extensions/container_methods/fmax.rst", "data_classes/container/extensions/container_methods/fmod.rst", "data_classes/container/extensions/container_methods/hamming_window.rst", "data_classes/container/extensions/container_methods/hann_window.rst", "data_classes/container/extensions/container_methods/heaviside.rst", "data_classes/container/extensions/container_methods/hstack.rst", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/kaiser_window.rst", "data_classes/container/extensions/container_methods/lcm.rst", "data_classes/container/extensions/container_methods/max_pool1d.rst", "data_classes/container/extensions/container_methods/max_pool2d.rst", "data_classes/container/extensions/container_methods/median.rst", "data_classes/container/extensions/container_methods/moveaxis.rst", "data_classes/container/extensions/container_methods/msort.rst", "data_classes/container/extensions/container_methods/pad.rst", "data_classes/container/extensions/container_methods/rot90.rst", "data_classes/container/extensions/container_methods/sinc.rst", "data_classes/container/extensions/container_methods/static_diagflat.rst", "data_classes/container/extensions/container_methods/static_dirichlet.rst", "data_classes/container/extensions/container_methods/static_exp2.rst", "data_classes/container/extensions/container_methods/static_flatten.rst", "data_classes/container/extensions/container_methods/static_flipud.rst", "data_classes/container/extensions/container_methods/static_float_power.rst", "data_classes/container/extensions/container_methods/static_fmax.rst", "data_classes/container/extensions/container_methods/static_fmod.rst", "data_classes/container/extensions/container_methods/static_hamming_window.rst", "data_classes/container/extensions/container_methods/static_hann_window.rst", "data_classes/container/extensions/container_methods/static_heaviside.rst", "data_classes/container/extensions/container_methods/static_hstack.rst", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/static_kaiser_window.rst", "data_classes/container/extensions/container_methods/static_lcm.rst", "data_classes/container/extensions/container_methods/static_max_pool1d.rst", "data_classes/container/extensions/container_methods/static_max_pool2d.rst", "data_classes/container/extensions/container_methods/static_median.rst", "data_classes/container/extensions/container_methods/static_moveaxis.rst", "data_classes/container/extensions/container_methods/static_msort.rst", "data_classes/container/extensions/container_methods/static_pad.rst", "data_classes/container/extensions/container_methods/static_rot90.rst", "data_classes/container/extensions/container_methods/static_sinc.rst", "data_classes/container/extensions/container_methods/static_triu_indices.rst", "data_classes/container/extensions/container_methods/static_vstack.rst", "data_classes/container/extensions/container_methods/triu_indices.rst", "data_classes/container/extensions/container_methods/vstack.rst", "data_classes/container/extensions/conversions.rst", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions.rst", "data_classes/container/extensions/creation.rst", "data_classes/container/extensions/creation/ContainerWithCreationExtensions.rst", "data_classes/container/extensions/data_type.rst", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions.rst", "data_classes/container/extensions/device.rst", "data_classes/container/extensions/device/ContainerWithDeviceExtensions.rst", "data_classes/container/extensions/elementwise.rst", "data_classes/container/extensions/elementwise/ContainerWithElementWiseExtensions.rst", "data_classes/container/extensions/general.rst", "data_classes/container/extensions/general/ContainerWithGeneralExtensions.rst", "data_classes/container/extensions/gradients.rst", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions.rst", "data_classes/container/extensions/image.rst", "data_classes/container/extensions/image/ContainerWithImageExtensions.rst", "data_classes/container/extensions/layers.rst", "data_classes/container/extensions/layers/ContainerWithLayersExtensions.rst", "data_classes/container/extensions/linear_algebra.rst", "data_classes/container/extensions/linear_algebra/ContainerWithLinalgExtensions.rst", "data_classes/container/extensions/losses.rst", "data_classes/container/extensions/losses/ContainerWithLossesExtensions.rst", "data_classes/container/extensions/manipulation.rst", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions.rst", "data_classes/container/extensions/norms.rst", "data_classes/container/extensions/norms/ContainerWithNormsExtensions.rst", "data_classes/container/extensions/random.rst", "data_classes/container/extensions/random/ContainerWithRandomExtensions.rst", "data_classes/container/extensions/searching.rst", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions.rst", "data_classes/container/extensions/set.rst", "data_classes/container/extensions/set/ContainerWithSetExtensions.rst", "data_classes/container/extensions/sorting.rst", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions.rst", "data_classes/container/extensions/statistical.rst", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions.rst", "data_classes/container/extensions/utility.rst", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/extensions.rst", "functional/extensions/activations.rst", "functional/extensions/compilation.rst", "functional/extensions/constants.rst", "functional/extensions/creation.rst", "functional/extensions/creation/triu_indices.rst", "functional/extensions/data_type.rst", "functional/extensions/device.rst", "functional/extensions/elementwise.rst", "functional/extensions/elementwise/exp2.rst", "functional/extensions/elementwise/float_power.rst", "functional/extensions/elementwise/fmax.rst", "functional/extensions/elementwise/fmod.rst", "functional/extensions/elementwise/lcm.rst", "functional/extensions/elementwise/sinc.rst", "functional/extensions/elementwise/trapz.rst", "functional/extensions/general.rst", "functional/extensions/gradients.rst", "functional/extensions/layers.rst", "functional/extensions/layers/hamming_window.rst", "functional/extensions/layers/hann_window.rst", "functional/extensions/layers/kaiser_bessel_derived_window.rst", "functional/extensions/layers/kaiser_window.rst", "functional/extensions/layers/max_pool1d.rst", "functional/extensions/layers/max_pool2d.rst", "functional/extensions/layers/pad.rst", "functional/extensions/layers/vorbis_window.rst", "functional/extensions/linear_algebra.rst", "functional/extensions/linear_algebra/diagflat.rst", "functional/extensions/losses.rst", "functional/extensions/manipulation.rst", "functional/extensions/manipulation/flatten.rst", "functional/extensions/manipulation/flipud.rst", "functional/extensions/manipulation/heaviside.rst", "functional/extensions/manipulation/hstack.rst", "functional/extensions/manipulation/moveaxis.rst", "functional/extensions/manipulation/ndenumerate.rst", "functional/extensions/manipulation/ndindex.rst", "functional/extensions/manipulation/rot90.rst", "functional/extensions/manipulation/vstack.rst", "functional/extensions/meta.rst", "functional/extensions/nest.rst", "functional/extensions/norms.rst", "functional/extensions/random.rst", "functional/extensions/random/dirichlet.rst", "functional/extensions/searching.rst", "functional/extensions/set.rst", "functional/extensions/sorting.rst", "functional/extensions/sorting/msort.rst", "functional/extensions/sparse_array.rst", "functional/extensions/sparse_array/is_ivy_sparse_array.rst", "functional/extensions/sparse_array/is_native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/extensions/statistical.rst", "functional/extensions/statistical/median.rst", "functional/extensions/utility.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_frontend_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Extensions", "Activations", "ArrayWithActivationsExtensions", "Array methods", "diagflat array", "dirichlet array", "exp2 array", "flatten array", "flipud array", "float_power array", "fmax array", "fmod array", "heaviside array", "hstack array", "lcm array", "max_pool1d array", "max_pool2d array", "median array", "moveaxis array", "msort array", "pad array", "rot90 array", "sinc array", "trapz array", "vstack array", "Conversions", "ArrayWithConversionsExtensions", "Creation", "ArrayWithCreationExtensions", "Data type", "ArrayWithData_typeExtensions", "Device", "ArrayWithDeviceExtensions", "Elementwise", "ArrayWithElementWiseExtensions", "General", "ArrayWithGeneralExtensions", "Gradients", "ArrayWithGradientsExtensions", "Image", "ArrayWithImageExtension", "Layers", "ArrayWithLayersExtensions", "Linear algebra", "ArrayWithLinalgExtensions", "Losses", "ArrayWithLossesExtensions", "Manipulation", "ArrayWithManipulationExtensions", "Norms", "ArrayWithNormsExtensions", "Random", "ArrayWithRandomExtensions", "Searching", "ArrayWithSearchingExtensions", "Set", "ArrayWithSetExtensions", "Sorting", "ArrayWithSortingExtensions", "Statistical", "ArrayWithStatisticalExtensions", "Utility", "ArrayWithUtilityExtensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Extensions", "Activations", "ContainerWithActivationExtensions", "Container methods", "diagflat container", "dirichlet container", "exp2 container", "flatten container", "flipud container", "float_power container", "fmax container", "fmod container", "hamming_window container", "hann_window container", "heaviside container", "hstack container", "kaiser_bessel_derived_window container", "kaiser_window container", "lcm container", "max_pool1d container", "max_pool2d container", "median container", "moveaxis container", "msort container", "pad container", "rot90 container", "sinc container", "static_diagflat container", "static_dirichlet container", "static_exp2 container", "static_flatten container", "static_flipud container", "static_float_power container", "static_fmax container", "static_fmod container", "static_hamming_window container", "static_hann_window container", "static_heaviside container", "static_hstack container", "static_kaiser_bessel_derived_window container", "static_kaiser_window container", "static_lcm container", "static_max_pool1d container", "static_max_pool2d container", "static_median container", "static_moveaxis container", "static_msort container", "static_pad container", "static_rot90 container", "static_sinc container", "static_triu_indices container", "static_vstack container", "triu_indices container", "vstack container", "Conversions", "ContainerWithConversionExtensions", "Creation", "ContainerWithCreationExtensions", "Data type", "ContainerWithData_typeExtensions", "Device", "ContainerWithDeviceExtensions", "Elementwise", "ContainerWithElementWiseExtensions", "General", "ContainerWithGeneralExtensions", "Gradients", "ContainerWithGradientsExtensions", "Image", "ContainerWithImageExtensions", "Layers", "ContainerWithLayersExtensions", "Linear algebra", "ContainerWithLinalgExtensions", "Losses", "ContainerWithLossesExtensions", "Manipulation", "ContainerWithManipulationExtensions", "Norms", "ContainerWithNormsExtensions", "Random", "ContainerWithRandomExtensions", "Searching", "ContainerWithSearchingExtensions", "Set", "ContainerWithSetExtensions", "Sorting", "ContainerWithSortingExtensions", "Statistical", "ContainerWithStatisticalExtensions", "Utility", "ContainerWithUtilityExtensions", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Extensions", "Activations", "Compilation", "Constants", "Creation", "triu_indices", "Data type", "Device", "Elementwise", "exp2", "float_power", "fmax", "fmod", "lcm", "sinc", "trapz", "General", "Gradients", "Layers", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "max_pool1d", "max_pool2d", "pad", "vorbis_window", "Linear algebra", "diagflat", "Losses", "Manipulation", "flatten", "flipud", "heaviside", "hstack", "moveaxis", "ndenumerate", "ndindex", "rot90", "vstack", "Meta", "Nest", "Norms", "Random", "dirichlet", "Searching", "Set", "Sorting", "msort", "Sparse array", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "Utility", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_frontend_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 33, 34, 35, 41, 42, 121, 122, 300, 303, 311, 316, 1686, 1702, 1703], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 46, 48, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 125, 126, 127, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 157, 159, 161, 163, 165, 167, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 296, 298, 301, 302, 303, 306, 307, 308, 309, 311, 312, 314, 315, 316, 318, 319, 321, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 350, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 393, 395, 396, 397, 398, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1693, 1695, 1696, 1699, 1701, 1702, 1703, 1706, 1707, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1746], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 125, 126, 127, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 157, 159, 161, 163, 165, 167, 169, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 294, 295, 296, 297, 300, 301, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 321, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 350, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 393, 395, 396, 397, 398, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1690, 1691, 1692, 1693, 1694, 1695, 1697, 1700, 1706, 1707, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1746], "ml": [32, 34, 35, 36, 39, 310, 315, 316, 317, 319, 320, 321, 332, 1686, 1692, 1693, 1694, 1695, 1696, 1699, 1701, 1703], "explos": [32, 34, 1686], "A": [32, 33, 34, 35, 38, 39, 40, 41, 54, 55, 56, 57, 113, 114, 125, 126, 137, 138, 141, 142, 151, 152, 158, 159, 166, 167, 294, 298, 300, 301, 306, 307, 310, 312, 316, 319, 333, 1685, 1686, 1696, 1697], "huge": [32, 34, 319, 1686, 1696, 1702], "number": [32, 33, 41, 42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 109, 110, 125, 126, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 164, 165, 166, 167, 298, 300, 301, 302, 309, 311, 312, 314, 316, 319, 1686], "tool": [32, 35, 42, 302, 317, 321, 332, 333, 1686, 1694, 1695, 1696, 1697, 1699, 1702, 1703], "have": [32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1685, 1686, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "explod": [32, 33, 1686], "onto": [32, 33, 1686, 1696], "scene": [32, 33, 127, 128, 294, 315, 317, 1686, 1696], "b": [32, 35, 36, 44, 47, 48, 60, 61, 125, 126, 131, 132, 156, 157, 164, 165, 166, 167, 168, 169, 294, 297, 298, 299, 302, 307, 315, 316, 317, 319, 320, 321, 331, 1686, 1692], "why": [32, 34, 42, 309, 318, 1686], "unifi": [32, 34, 158, 159, 294, 295, 296, 300, 304, 310, 314, 316, 333, 1686, 1692, 1693, 1694, 1696, 1700, 1703], "should": [32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 60, 61, 95, 96, 109, 110, 125, 126, 127, 128, 133, 134, 137, 138, 141, 142, 143, 144, 149, 150, 155, 156, 157, 158, 159, 164, 165, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1686, 1692, 1693, 1696, 1698, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "we": [32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 153, 154, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1696, 1697, 1701, 1702], "try": [32, 34, 35, 38, 40, 41, 42, 158, 159, 296, 298, 300, 304, 305, 316, 318, 333, 1686], "them": [32, 33, 34, 35, 38, 40, 42, 295, 296, 297, 298, 304, 308, 309, 310, 311, 312, 316, 318, 319, 320, 333, 1685, 1686, 1693, 1694, 1696, 1698, 1702], "c": [32, 34, 35, 36, 41, 125, 126, 127, 128, 131, 132, 149, 150, 166, 167, 294, 298, 302, 307, 314, 315, 316, 317, 319, 333, 1685, 1686, 1692, 1696, 1700, 1701, 1703], "standard": [32, 60, 61, 139, 140, 141, 142, 149, 150, 294, 295, 296, 298, 300, 303, 306, 309, 312, 313, 333, 1686, 1692, 1694, 1695, 1698, 1699, 1701], "re": [32, 33, 34, 36, 40, 41, 42, 125, 126, 294, 300, 313, 314, 318, 321, 333, 1686, 1696], "collabor": [32, 33, 34, 1686], "The": [32, 33, 35, 36, 37, 38, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 319, 320, 321, 332, 1685, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "consortium": [32, 34, 1686], "python": [32, 33, 34, 38, 39, 41, 42, 113, 114, 141, 142, 295, 298, 304, 305, 310, 312, 314, 316, 318, 319, 333, 1685, 1686, 1693, 1696, 1697, 1698, 1702, 1703], "data": [32, 34, 41, 44, 47, 48, 54, 55, 57, 60, 61, 95, 96, 113, 114, 125, 126, 127, 128, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 164, 165, 167, 294, 295, 298, 301, 303, 306, 307, 308, 309, 311, 313, 314, 316, 318, 1685, 1686, 1696, 1697, 1698, 1700, 1701, 1702], "api": [32, 33, 41, 42, 60, 61, 294, 296, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 319, 333, 1685, 1686, 1692, 1694, 1696, 1698, 1701, 1703], "open": [33, 34, 35, 36, 38, 41, 42, 141, 142, 299, 300, 303, 310, 311, 314, 332, 1686, 1694, 1695, 1696, 1698, 1699], "sourc": [33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 295, 296, 298, 299, 310, 1686, 1695, 1696, 1697, 1698, 1699], "project": [33, 34, 35, 38, 41, 42, 297, 312, 320, 332, 333, 1692, 1694, 1696, 1699, 1703], "ha": [33, 34, 35, 40, 42, 133, 134, 137, 138, 145, 146, 149, 150, 158, 159, 166, 167, 295, 297, 298, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 332, 333, 1692, 1695, 1696, 1698, 1699, 1702], "grown": 33, "consider": [33, 302, 306, 314, 1693, 1694], "recent": [33, 34, 41, 42, 312], "year": [33, 35, 295, 333, 1686, 1696], "especi": [33, 41, 295, 314, 1696], "deep": [33, 36, 39, 40, 42, 158, 159, 298, 300, 311, 315, 318, 319, 1686, 1694, 1696, 1699, 1700, 1702, 1703], "learn": [33, 34, 36, 39, 40, 41, 127, 128, 294, 295, 307, 315, 332, 1685, 1686, 1694, 1698, 1699, 1700, 1701, 1702, 1703], "can": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 56, 57, 133, 134, 137, 138, 141, 142, 166, 167, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 333, 1685, 1686, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1702, 1703], "seen": [33, 34, 299, 302, 304, 310, 312, 316, 318, 319, 1702], "from": [33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703], "rapidli": 33, "increas": [33, 133, 134, 300, 304, 313, 314, 1696], "github": [33, 37, 39, 40, 42, 295, 300, 302, 303, 312], "repo": [33, 37, 38, 39, 41, 42, 295, 300, 310, 313], "contain": [33, 37, 38, 40, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 125, 126, 133, 134, 135, 136, 137, 138, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 294, 295, 299, 300, 302, 303, 306, 307, 308, 309, 312, 315, 316, 317, 320, 333, 1685, 1686, 1696, 1697, 1702], "term": [33, 42, 298, 316, 1685, 1696], "over": [33, 35, 41, 42, 103, 104, 133, 134, 149, 150, 151, 152, 153, 154, 166, 167, 292, 293, 297, 302, 303, 309, 312, 316, 318, 333, 1694, 1696], "time": [33, 34, 35, 40, 41, 42, 109, 110, 127, 128, 145, 146, 297, 298, 299, 300, 302, 306, 307, 308, 309, 310, 312, 313, 316, 319, 321, 333, 1694, 1696, 1697, 1700, 1701, 1702], "These": [33, 34, 35, 37, 39, 40, 41, 42, 109, 110, 295, 298, 299, 300, 302, 303, 305, 306, 307, 309, 311, 312, 313, 316, 317, 319, 320, 321, 333, 1685, 1696, 1700, 1702, 1703], "ar": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 60, 61, 95, 96, 109, 110, 113, 114, 121, 122, 125, 126, 133, 134, 137, 138, 141, 142, 143, 144, 158, 159, 164, 165, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "written": [33, 41, 296, 303, 306, 309, 310, 312, 313, 316, 318, 321, 333, 1694, 1696, 1700, 1702, 1703], "mani": [33, 34, 35, 40, 41, 42, 137, 138, 158, 159, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 333, 1692, 1696, 1699, 1702, 1703], "differ": [33, 34, 35, 39, 41, 42, 44, 47, 48, 60, 61, 109, 110, 125, 126, 158, 159, 294, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 333, 1686, 1693, 1694, 1695, 1696, 1699, 1702, 1703], "while": [33, 34, 40, 41, 42, 158, 159, 297, 300, 302, 305, 306, 309, 310, 312, 314, 318, 320, 321, 333, 1696, 1702, 1703], "thi": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1686, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "i": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 109, 110, 113, 114, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "wonder": [33, 35, 318], "thing": [33, 34, 35, 39, 40, 41, 42, 297, 305, 310, 312, 314, 318, 319, 1696], "research": [33, 332, 1696, 1703], "develop": [33, 34, 35, 36, 37, 39, 40, 41, 42, 295, 299, 313, 332, 333, 1685, 1686, 1694, 1695, 1696, 1697, 1698, 1701, 1702, 1703], "when": [33, 34, 36, 37, 39, 40, 41, 42, 54, 55, 56, 57, 95, 96, 133, 134, 135, 136, 141, 142, 143, 144, 149, 150, 158, 159, 164, 165, 166, 167, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 321, 333, 1694, 1696, 1699, 1700, 1701, 1702], "also": [33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 332, 333, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1702, 1703], "consid": [33, 34, 133, 134, 307, 313, 317, 318, 319, 1693, 1697, 1701, 1703], "speed": [33, 312, 1699], "which": [33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 95, 96, 113, 114, 121, 122, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1702, 1703], "evolv": [33, 1696], "sharabl": 33, "code": [33, 34, 35, 37, 38, 39, 40, 41, 42, 60, 61, 158, 159, 168, 169, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 331, 333, 1685, 1686, 1692, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703], "significantli": [33, 1694], "hinder": [33, 306], "librari": [33, 34, 35, 36, 40, 168, 169, 295, 314, 321, 331, 333, 1685, 1686, 1692, 1693, 1694, 1696, 1700, 1703], "becom": [33, 35, 42, 95, 96, 298, 302, 310, 333], "outdat": 33, "matter": [33, 302], "month": [33, 41], "rigor": [33, 312], "maintain": [33, 42, 147, 148, 295, 299, 1695], "against": [33, 56, 57, 133, 134, 143, 144, 166, 167, 312, 316, 333, 1696], "newest": 33, "For": [33, 34, 35, 37, 38, 40, 41, 42, 127, 128, 133, 134, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 332, 333, 1693, 1694, 1697, 1702, 1703], "softwar": [33, 34, 41, 42, 1694, 1699, 1700, 1701], "pipelin": [33, 296, 321, 1685, 1696, 1697, 1702], "where": [33, 34, 35, 36, 38, 41, 42, 54, 55, 60, 61, 109, 110, 125, 126, 133, 134, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 158, 159, 164, 165, 296, 297, 298, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 333, 1686, 1694, 1703], "rapid": [33, 34, 41, 1696], "prototyp": [33, 1696], "vital": [33, 321], "signific": [33, 34, 333, 1696], "bottleneck": 33, "As": [33, 41, 42, 153, 154, 292, 293, 296, 298, 300, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 333, 1696, 1701], "new": [33, 34, 35, 36, 38, 40, 41, 42, 125, 126, 127, 128, 137, 138, 139, 140, 158, 159, 164, 165, 294, 297, 298, 299, 300, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 318, 321, 332, 1685, 1686, 1694, 1698, 1702, 1703], "futur": [33, 35, 41, 42, 300, 310, 313, 314, 318, 333, 1702], "avail": [33, 41, 42, 125, 126, 298, 299, 301, 303, 310, 333, 1701, 1702], "backend": [33, 39, 40, 41, 42, 49, 51, 53, 125, 126, 127, 128, 158, 159, 294, 295, 296, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 321, 1685, 1686, 1696, 1699, 1702, 1703], "specif": [33, 40, 42, 125, 126, 168, 169, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 332, 333, 1685, 1692, 1694, 1695, 1697, 1698, 1699, 1703], "quickli": [33, 35, 41, 42, 319, 320, 1696, 1703], "obsolet": [33, 35], "user": [33, 34, 37, 38, 41, 42, 294, 297, 298, 300, 308, 309, 310, 312, 314, 315, 316, 333, 1694, 1696, 1702, 1703], "constantli": [33, 313, 314], "invent": 33, "wheel": 33, "If": [33, 36, 37, 38, 40, 41, 42, 44, 49, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 113, 114, 121, 122, 127, 128, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "our": [33, 34, 36, 39, 40, 41, 42, 44, 153, 154, 155, 292, 293, 295, 298, 299, 300, 302, 304, 305, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1686, 1701, 1702, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "desir": [33, 42, 56, 57, 143, 144, 158, 159, 166, 167, 168, 169, 297, 300, 310, 316, 1696], "provid": [33, 41, 42, 54, 55, 125, 126, 127, 128, 137, 138, 143, 144, 149, 150, 151, 152, 158, 159, 164, 165, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 312, 314, 318, 320, 332, 333, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703], "simultan": [33, 35], "all": [33, 34, 35, 36, 37, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 125, 126, 133, 134, 137, 138, 141, 142, 151, 152, 153, 154, 158, 159, 162, 163, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1702, 1703], "modern": [33, 34, 1701], "simpl": [33, 40, 41, 42, 296, 298, 300, 301, 302, 303, 307, 309, 310, 312, 313, 314, 318, 320, 321, 333, 1685, 1695, 1696, 1697, 1698], "scalabl": [33, 316, 1701, 1702], "manner": [33, 41, 49, 52, 53, 162, 163, 301, 303, 310, 313, 319, 332, 333, 1692, 1694, 1702, 1703], "must": [33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 300, 301, 302, 303, 304, 306, 307, 310, 313, 314, 316, 320, 321, 1697, 1703], "determin": [33, 44, 47, 48, 60, 61, 95, 96, 133, 134, 137, 138, 151, 152, 158, 159, 298, 300, 301, 303, 307, 310, 311, 314], "exactli": [33, 35, 298, 300, 301, 302, 314], "common": [33, 40, 60, 61, 95, 96, 158, 159, 298, 300, 301, 302, 305, 307, 308, 310, 313, 314, 333, 1693, 1696, 1703], "ground": [33, 310, 312], "li": 33, "between": [33, 95, 96, 135, 136, 137, 138, 158, 159, 296, 297, 298, 302, 306, 307, 310, 311, 312, 314, 315, 317, 318, 319, 321, 332, 1686, 1692, 1693, 1695, 1696, 1697, 1702], "find": [33, 36, 38, 39, 40, 41, 42, 158, 159, 295, 299, 312, 314, 316, 319, 1685, 1686], "exist": [33, 34, 38, 40, 41, 125, 126, 137, 138, 158, 159, 295, 297, 302, 303, 307, 308, 309, 310, 312, 314, 316, 333, 1685, 1694, 1696, 1699, 1702], "essenti": [33, 34, 40, 298, 301, 302, 307, 313, 1702], "order": [33, 38, 40, 41, 42, 44, 47, 48, 109, 110, 127, 128, 133, 134, 147, 148, 158, 159, 296, 297, 298, 299, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 319, 321, 333, 1692, 1695, 1696, 1697, 1699, 1702], "design": [33, 34, 294, 300, 309, 310, 311, 314, 316, 318, 333, 1692, 1694, 1696, 1699, 1700, 1701], "univers": 33, "abstract": [33, 298, 300, 310, 312, 314, 320, 333, 1694, 1696, 1698, 1699, 1703], "In": [33, 35, 37, 40, 41, 42, 125, 126, 137, 138, 168, 169, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 332, 333, 1686, 1692, 1694, 1696, 1697, 1699, 1702], "search": [33, 39, 41, 49, 52, 53, 116, 144, 162, 163, 298, 302, 312, 313], "languag": [33, 35, 310, 314, 316, 1685, 1694, 1697, 1699, 1700, 1701, 1702], "first": [33, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 61, 95, 96, 103, 104, 133, 134, 141, 142, 143, 144, 145, 146, 149, 150, 295, 296, 298, 302, 306, 307, 308, 309, 310, 312, 314, 316, 318, 319, 321, 1694, 1696, 1697, 1701], "see": [33, 36, 38, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 133, 134, 143, 144, 149, 150, 151, 152, 295, 298, 299, 301, 302, 306, 307, 310, 311, 312, 313, 314, 316, 318, 319, 332, 333, 1686, 1692], "clear": [33, 34, 35, 40, 42, 300, 301, 302, 310, 314, 316, 318, 1696], "front": [33, 315, 316, 319, 1686, 1694, 1696], "runner": 33, "look": [33, 37, 38, 41, 42, 297, 298, 300, 301, 302, 304, 306, 307, 310, 311, 312, 313, 314, 316, 318, 320, 321, 1686, 1692, 1696], "littl": [33, 311, 318, 1698], "deeper": [33, 42, 294, 312, 315], "follow": [33, 34, 38, 40, 41, 42, 125, 126, 127, 128, 158, 159, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 333, 1686, 1693, 1696, 1699], "same": [33, 35, 37, 38, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 103, 104, 119, 120, 127, 128, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 158, 159, 164, 165, 166, 167, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 333, 1686, 1693, 1695, 1702, 1703], "core": [33, 40, 41, 301, 312, 321, 1686, 1694, 1695, 1696, 1697, 1701, 1703], "principl": [33, 1694, 1696, 1699], "oper": [33, 40, 41, 56, 57, 103, 104, 125, 126, 127, 128, 131, 132, 158, 159, 166, 167, 295, 296, 298, 300, 301, 302, 303, 307, 309, 310, 312, 314, 316, 319, 320, 1685, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703], "expos": [33, 316, 320], "almost": [33, 39, 298, 311, 317, 319], "ident": [33, 35, 158, 159, 298, 307, 308, 310, 311, 313, 314, 318, 319, 333, 1685, 1686], "function": [33, 38, 42, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 294, 295, 296, 297, 299, 302, 303, 305, 309, 311, 314, 315, 317, 318, 319, 320, 331, 332, 1685, 1686, 1693, 1694, 1695, 1696, 1697, 1702, 1703], "uniqu": [33, 109, 110, 145, 146, 298, 307, 310, 311, 312, 314, 333, 1699], "syntax": [33, 34, 300, 305, 1696], "argument": [33, 40, 49, 50, 51, 52, 53, 60, 61, 125, 126, 158, 159, 162, 163, 294, 295, 296, 297, 298, 302, 303, 305, 307, 308, 311, 312, 313, 314, 316, 318, 319, 1685, 1696], "There": [33, 40, 41, 42, 295, 296, 298, 300, 302, 304, 305, 307, 310, 311, 316, 319, 333, 1697, 1698, 1702, 1703], "onli": [33, 36, 40, 41, 42, 44, 47, 48, 137, 138, 141, 142, 158, 159, 295, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 331, 333, 1686, 1695, 1696, 1697, 1702, 1703], "so": [33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 333, 1686, 1696, 1697, 1698, 1700], "wai": [33, 34, 39, 40, 41, 295, 297, 300, 309, 311, 312, 314, 318, 319, 320, 321, 333, 1698, 1702, 1703], "manipul": [33, 110, 138, 313, 316, 321, 332, 1696], "tensor": [33, 54, 55, 60, 61, 103, 104, 125, 126, 137, 138, 141, 142, 158, 159, 164, 165, 296, 297, 300, 301, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 321, 333, 1685, 1686, 1693, 1694, 1697, 1699, 1700, 1703], "unsurprisingli": [33, 302], "fundament": [33, 310, 314, 316, 1696], "consist": [33, 158, 159, 295, 296, 300, 304, 309, 316, 1697], "each": [33, 34, 35, 37, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 149, 150, 158, 159, 166, 167, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 321, 332, 333, 1686, 1692, 1693, 1697, 1699, 1702], "veri": [33, 34, 39, 40, 41, 42, 298, 300, 301, 302, 306, 307, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 333, 1686, 1692, 1693, 1694, 1696, 1697, 1698, 1701, 1702, 1703], "similar": [33, 40, 41, 298, 299, 300, 301, 304, 308, 310, 311, 312, 313, 319, 333, 1692, 1693, 1694, 1695, 1702], "convent": [33, 297, 306, 313, 332, 1702], "those": [33, 40, 41, 42, 137, 138, 158, 159, 298, 300, 308, 310, 312, 314, 1693], "numpi": [33, 34, 39, 40, 41, 42, 125, 126, 295, 297, 299, 300, 301, 304, 306, 309, 311, 312, 313, 314, 316, 318, 321, 1685, 1686, 1698, 1703], "introduc": [33, 298, 299, 300, 319], "2006": 33, "layer": [33, 104, 132, 139, 140, 303, 310, 313, 314, 316, 317, 320, 1686, 1694, 1696, 1700, 1703], "therefor": [33, 37, 40, 41, 42, 60, 61, 295, 296, 298, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 320, 333, 1693, 1696, 1702], "present": [33, 40, 42, 158, 159, 298, 300, 301, 306, 309, 316, 1693, 1694, 1703], "itself": [33, 41, 42, 295, 298, 309, 310, 320, 332, 333, 1695, 1696, 1697, 1702], "cut": [33, 1702], "cloth": 33, "adher": [33, 34, 295, 300, 303, 306, 314, 316, 321, 1692, 1693, 1702], "set": [33, 36, 38, 42, 49, 52, 53, 103, 104, 118, 121, 122, 125, 126, 127, 128, 133, 134, 143, 144, 146, 147, 148, 149, 150, 158, 159, 294, 295, 296, 298, 300, 301, 302, 307, 308, 309, 310, 311, 312, 313, 316, 318, 319, 1694, 1695, 1696, 1697, 1698, 1700, 1703], "semant": [33, 316, 321, 1697], "round": [33, 34, 35, 37, 38, 40, 41, 42, 60, 61, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "up": [33, 34, 35, 36, 37, 38, 40, 42, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 333, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "hopefulli": [33, 34, 35, 37, 38, 40, 41, 42, 44, 155, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "paint": [33, 316], "pictur": [33, 40, 316], "how": [33, 35, 36, 38, 39, 40, 41, 42, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 332, 333, 1686, 1692, 1696], "pleas": [33, 34, 35, 37, 38, 40, 41, 42, 44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "reach": [33, 34, 35, 37, 38, 40, 41, 42, 44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "out": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "discord": [33, 34, 35, 37, 38, 40, 41, 42, 44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "you": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 125, 126, 155, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1685, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "ani": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 51, 54, 55, 60, 61, 125, 126, 151, 152, 153, 154, 155, 168, 169, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1685, 1686, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "question": [33, 34, 35, 37, 38, 40, 41, 42, 44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 332, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "With": [34, 35, 41, 44, 47, 48, 54, 55, 56, 57, 60, 61, 125, 126, 127, 128, 133, 134, 143, 144, 149, 150, 164, 165, 166, 167, 302, 308, 310, 312, 314, 316, 1696, 1699], "central": [34, 40, 314, 1702], "goal": [34, 40, 1696, 1702], "being": [34, 35, 41, 42, 44, 47, 48, 158, 159, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 308, 309, 310, 311, 312, 314, 316, 319, 332, 333, 1686, 1692, 1694, 1695, 1696, 1697, 1702, 1703], "would": [34, 36, 38, 40, 41, 42, 137, 138, 168, 169, 294, 295, 296, 297, 298, 300, 302, 303, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321, 333, 1686, 1696, 1702], "entir": [34, 35, 40, 41, 42, 149, 150, 151, 152, 158, 159, 295, 296, 298, 300, 302, 309, 310, 312, 314, 316, 319, 320, 321, 333, 1696, 1702, 1703], "forgiven": 34, "rais": [34, 42, 95, 96, 125, 126, 137, 138, 141, 142, 151, 152, 158, 159, 295, 297, 304, 305, 309, 310, 316, 318], "an": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 125, 126, 127, 128, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 164, 165, 166, 167, 168, 169, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 332, 333, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1685, 1686, 1692, 1694, 1695, 1696, 1697, 1699, 1700, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "eyebrow": 34, "want": [34, 36, 40, 41, 42, 153, 154, 292, 293, 299, 308, 309, 312, 314, 319, 320, 321, 333], "somehow": 34, "tensorflow": [34, 35, 39, 40, 41, 42, 125, 126, 295, 299, 300, 301, 306, 309, 310, 311, 312, 313, 314, 316, 321, 333, 1685, 1686, 1694, 1697, 1699, 1700, 1702, 1703], "pytorch": [34, 35, 39, 40, 127, 128, 299, 300, 301, 304, 306, 307, 309, 310, 311, 313, 314, 316, 321, 333, 1685, 1686, 1697, 1699, 1700, 1702, 1703], "jax": [34, 35, 39, 40, 41, 42, 127, 128, 295, 297, 299, 300, 301, 306, 309, 310, 311, 312, 313, 314, 316, 318, 321, 333, 1686, 1697, 1699, 1702, 1703], "other": [34, 37, 40, 41, 42, 44, 47, 48, 56, 57, 125, 126, 149, 150, 158, 159, 166, 167, 295, 296, 298, 299, 302, 303, 305, 307, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 331, 332, 333, 1685, 1686, 1692, 1694, 1695, 1696, 1702, 1703], "strong": [34, 333, 1696], "industri": [34, 1696, 1698], "back": [34, 41, 42, 296, 300, 308, 315, 333, 1694, 1698], "momentum": 34, "won": [34, 35, 41, 42, 298, 312, 321], "t": [34, 35, 37, 38, 40, 41, 42, 44, 47, 48, 153, 154, 292, 293, 294, 297, 298, 299, 300, 302, 308, 309, 312, 314, 316, 318, 319, 320, 321, 333, 1694, 1696, 1698], "ad": [34, 39, 40, 41, 42, 137, 138, 292, 293, 296, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 320, 333, 1695, 1696], "just": [34, 35, 41, 42, 295, 297, 300, 302, 303, 307, 308, 309, 310, 311, 312, 316, 318, 319, 333, 1696, 1697, 1702], "make": [34, 35, 40, 41, 42, 295, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 321, 1694, 1696, 1697, 1698, 1699, 1702, 1703], "problem": [34, 42, 296, 310, 318, 1692, 1698, 1702], "even": [34, 35, 41, 42, 103, 104, 295, 300, 301, 303, 306, 307, 310, 314, 318, 319, 320, 321, 333, 1702], "wors": 34, "rather": [34, 42, 125, 126, 127, 128, 158, 159, 295, 298, 300, 303, 309, 310, 311, 312, 313, 321, 333, 1692, 1695, 1696], "funni": 34, "comic": 34, "strip": 34, "": [34, 35, 36, 37, 38, 40, 41, 42, 54, 55, 125, 126, 127, 128, 133, 134, 149, 150, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 332, 333, 1685, 1686, 1692, 1695, 1696, 1697, 1699, 1700, 1701, 1702], "easi": [34, 41, 42, 298, 307, 311, 314, 1694, 1696, 1702, 1703], "feasibl": [34, 40], "space": [34, 95, 96, 125, 126, 312, 314], "howev": [34, 40, 41, 42, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 333, 1695, 1696, 1702], "import": [34, 37, 39, 40, 41, 42, 153, 154, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 305, 309, 310, 311, 313, 316, 318, 319, 321, 333, 1686, 1692, 1694, 1696, 1699, 1700, 1702], "case": [34, 40, 41, 42, 49, 52, 53, 113, 114, 125, 126, 137, 138, 149, 150, 158, 159, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 333, 1695, 1699], "ivi": [34, 35, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 294, 295, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 314, 315, 331, 333, 1685, 1686, 1692, 1703], "unlik": [34, 298, 302, 309, 1701, 1703], "charger": 34, "charact": [34, 305], "encod": [34, 125, 126, 319], "instant": [34, 1686], "messag": [34, 42, 299, 302, 304, 305, 310, 316, 318], "much": [34, 40, 41, 42, 296, 298, 300, 309, 310, 311, 313, 316, 318, 319, 1694, 1696, 1702, 1703], "one": [34, 35, 40, 41, 42, 54, 55, 121, 122, 125, 126, 133, 134, 137, 138, 143, 144, 145, 146, 158, 159, 164, 165, 295, 296, 297, 298, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 318, 319, 321, 333, 1686, 1696, 1697, 1699, 1702], "doe": [34, 38, 40, 42, 137, 138, 158, 159, 294, 297, 300, 302, 303, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 333, 1685, 1692, 1696, 1697, 1703], "mandat": [34, 300, 309, 312, 313], "adopt": [34, 42, 296, 306, 314, 1695, 1696, 1701], "continu": [34, 35, 39, 40, 41, 294, 295, 305, 312, 333, 1696], "own": [34, 35, 41, 295, 300, 303, 304, 310, 312, 313, 316, 333, 1685, 1692, 1695, 1696, 1701, 1702], "call": [34, 38, 42, 166, 167, 296, 297, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 333, 1696, 1697, 1700], "signatur": [34, 60, 61, 300, 301, 302, 303, 306, 309, 312, 313, 314, 1693, 1702], "replac": [34, 38, 42, 60, 61, 125, 126, 137, 138, 141, 142, 158, 159, 298, 300, 301, 302, 308, 310, 312, 318, 321, 333, 1703], "your": [34, 35, 36, 37, 38, 39, 40, 41, 295, 303, 313, 314, 319, 320, 333, 1686, 1696], "1": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 295, 297, 298, 300, 302, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 333, 1686], "10": [34, 38, 41, 60, 61, 95, 96, 103, 104, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 141, 142, 149, 150, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 298, 300, 302, 311, 312, 316, 318, 319, 1701], "100": [34, 35, 312, 319, 320, 321, 333, 1686], "despit": [34, 298, 300, 301, 314, 316, 1693, 1696], "distinct": [34, 41, 298, 303, 309, 310, 315, 1686, 1696], "still": [34, 40, 42, 158, 159, 300, 303, 309, 310, 312, 314, 320, 333, 1686, 1693, 1696, 1702], "believ": [34, 42], "share": [34, 158, 159, 297, 298, 302, 307, 311, 312, 314, 316, 1694, 1695, 1702], "bring": [34, 295, 312, 316, 317, 1685], "benefit": [34, 35, 41, 296, 298, 309, 314, 318, 319, 333, 1694, 1698, 1701], "unrel": [34, 42], "what": [34, 35, 37, 42, 294, 298, 302, 303, 306, 308, 310, 312, 315, 316, 318, 319, 320, 321, 332, 333, 1686, 1692, 1697, 1698, 1701], "again": [34, 35, 42, 297, 298, 302, 309, 310, 312, 313, 314, 319, 321, 333, 1701, 1702], "contrari": 34, "bumpi": 34, "road": 34, "allud": [34, 319], "most": [34, 39, 40, 41, 158, 159, 164, 165, 296, 298, 300, 301, 305, 306, 307, 309, 310, 312, 313, 314, 316, 318, 319, 320, 333, 1696, 1697, 1699, 1700, 1702, 1703], "technologi": [34, 1694, 1698], "sector": [34, 60, 61], "full": [34, 35, 42, 133, 134, 300, 303, 306, 310, 312, 314, 316, 333, 1694, 1696, 1702], "success": 34, "reason": [34, 40, 42, 295, 296, 298, 300, 302, 307, 309, 310, 313, 314, 316, 318, 1702], "build": [34, 36, 37, 41, 299, 300, 307, 315, 317, 320, 321, 333, 1685, 1686, 1694, 1696, 1698, 1701, 1702, 1703], "custom": [34, 299, 304, 311, 312, 320, 1696, 1700, 1701, 1702], "comput": [34, 35, 41, 45, 46, 60, 61, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 149, 150, 156, 157, 158, 159, 298, 300, 307, 310, 312, 314, 316, 319, 333, 1685, 1692, 1694, 1696, 1697, 1699, 1700, 1702], "thank": [34, 319], "interoper": [34, 1693, 1694, 1696, 1699], "compon": [34, 316, 1692, 1697, 1699], "bio": [34, 41], "hardwar": [34, 41, 44, 47, 48, 314, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702], "initi": [34, 42, 158, 159, 297, 300, 301, 312, 316, 1696, 1702, 1703], "pcie": 34, "interfac": [34, 318, 321, 333, 1685, 1692, 1693, 1694, 1695, 1696, 1700, 1703], "motherboard": 34, "raid": 34, "storag": [34, 319], "virtual": [34, 37, 38, 42, 1699, 1700], "bluetooth": 34, "wireless": 34, "exchang": [34, 39, 1692, 1694], "btx": 34, "form": [34, 36, 49, 50, 51, 52, 53, 54, 55, 127, 128, 133, 134, 158, 159, 307, 312, 314, 320, 321, 1696, 1697, 1702], "factor": [34, 127, 128, 131, 132, 133, 134, 304], "sata": 34, "connect": [34, 41, 320, 321, 1694], "host": [34, 333, 1701], "bu": 34, "adapt": 34, "devic": [34, 42, 44, 47, 48, 54, 55, 59, 94, 141, 142, 158, 159, 164, 165, 169, 294, 297, 300, 304, 307, 308, 311, 313, 314, 316, 321, 333, 1685, 1695, 1696, 1698, 1699, 1700, 1701], "html": [34, 38, 60, 61, 303], "enabl": [34, 41, 42, 158, 159, 296, 298, 307, 308, 309, 310, 312, 314, 315, 317, 319, 321, 333, 1685, 1694, 1695, 1696, 1697, 1698, 1699, 1702, 1703], "anyon": [34, 36, 42, 333, 1702], "websit": [34, 295], "tcp": 34, "ip": 34, "node": [34, 158, 159, 298, 310, 1697], "commun": [34, 36, 40, 41, 42, 333, 1686, 1695, 1696, 1698], "network": [34, 298, 307, 316, 320, 332, 1686, 1692, 1694, 1695, 1696, 1700, 1702, 1703], "smtp": 34, "possibl": [34, 36, 40, 41, 42, 137, 138, 298, 299, 300, 302, 303, 309, 310, 311, 312, 314, 316, 319, 332, 333, 1694, 1696, 1702], "send": [34, 1701], "gmail": 34, "outlook": 34, "pop": [34, 41], "u": [34, 36, 41, 42, 133, 134, 298, 308, 309, 310, 311, 312, 313, 314, 320, 333], "email": 34, "ieee": 34, "754": 34, "allow": [34, 37, 40, 42, 299, 304, 305, 308, 310, 311, 312, 316, 318, 333, 1685, 1694, 1696, 1700, 1701], "calcul": [34, 40, 60, 61, 135, 136, 149, 150, 158, 159, 303, 311, 316], "live": [34, 35, 300, 1692, 1694], "depend": [34, 37, 40, 41, 42, 56, 57, 125, 126, 147, 148, 166, 167, 300, 303, 308, 309, 310, 312, 314, 316, 333, 1694, 1696, 1697], "did": [34, 40, 321, 1702], "aris": [34, 300, 333], "until": [34, 42, 305, 313, 316, 333, 1686, 1703], "wa": [34, 42, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 302, 310, 316, 318, 1695, 1696, 1698], "substanti": [34, 42, 296, 300, 312, 1696], "innov": 34, "growth": [34, 1699], "usag": [34, 300, 316, 333, 1699], "relev": [34, 40, 41, 42, 298, 299, 300, 302, 311, 319, 1694, 1701, 1702], "area": [34, 60, 61, 309, 331, 1686, 1692], "necess": 34, "parti": [34, 333, 1695, 1696, 1702], "could": [34, 35, 40, 41, 42, 295, 300, 302, 308, 309, 310, 311, 312, 316, 318, 319, 320, 1696, 1701, 1702], "easili": [34, 41, 299, 310, 314, 319, 320, 321, 333, 1686, 1696, 1702, 1703], "engag": [34, 36, 42], "regard": [34, 39, 298, 310, 311, 314], "effect": [34, 40, 127, 128, 149, 150, 296, 298, 303, 306, 309, 333], "2015": [34, 1696], "sinc": [34, 41, 42, 95, 96, 295, 298, 309, 310, 312, 333, 1696, 1702], "alongsid": 34, "machin": [34, 41, 133, 134, 295, 307, 332, 1685, 1694, 1696, 1698, 1699, 1700, 1701, 1702], "given": [34, 35, 38, 40, 41, 42, 44, 113, 114, 125, 126, 135, 136, 137, 138, 141, 142, 155, 158, 159, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 320, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1698, 1699, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "frame": [34, 332, 1696], "less": [34, 42, 44, 47, 48, 60, 61, 133, 134, 141, 142, 149, 150, 298, 300, 302, 304, 306, 309, 310, 314, 315, 316, 1696, 1698], "matur": [34, 333, 1696], "state": [34, 300, 303, 304, 306, 310, 312, 315, 316, 317, 319, 332, 1686, 1702, 1703], "than": [34, 37, 42, 44, 47, 48, 60, 61, 95, 96, 125, 126, 127, 128, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 149, 150, 158, 159, 295, 298, 299, 300, 302, 304, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 333, 1693, 1694, 1695, 1696, 1702, 1703], "preced": [34, 320], "mention": [34, 40, 41, 42, 302, 306, 307, 309, 314, 1696], "aros": 34, "70": 34, "80": 34, "90": [34, 60, 61, 109, 110], "effort": [34, 36, 333, 1692, 1696, 1702], "stage": [34, 36, 38, 42, 294, 305, 312, 1686, 1696], "complet": [34, 40, 42, 158, 159, 295, 296, 298, 299, 302, 310, 311, 312, 318, 319, 1694], "natur": [34, 133, 134, 296, 302, 311, 332], "like": [34, 38, 40, 41, 42, 95, 96, 127, 128, 294, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 332, 333, 1686, 1696, 1701], "certainli": [34, 1702], "mission": [34, 1686, 1698], "creat": [34, 36, 37, 38, 40, 41, 42, 54, 55, 113, 114, 141, 142, 158, 159, 164, 165, 300, 301, 304, 308, 309, 310, 311, 312, 314, 316, 317, 320, 331, 332, 1685, 1686, 1696, 1697, 1702], "At": [34, 40, 41, 295, 310, 312, 313, 1696], "process": [34, 35, 36, 38, 41, 42, 298, 307, 310, 311, 312, 314, 316, 321, 1694, 1695, 1696, 1699, 1700, 1702, 1703], "ourselv": [34, 1702], "lead": [34, 35, 158, 159, 302, 333], "quansight": [34, 1702], "compani": [34, 1692], "made": [34, 37, 40, 42, 295, 299, 309, 313, 316, 318, 1696], "organ": [34, 296, 298, 307, 310, 313, 1685], "panda": 34, "scipi": [34, 1698, 1703], "conda": [34, 38, 41, 1698], "dask": 34, "apach": [34, 1698, 1702], "mxnet": [34, 1703], "onnx": [34, 1694, 1702], "scikit": 34, "jupyt": [34, 1698], "aw": 34, "cupi": [34, 1696, 1703], "net": [34, 35, 316, 321], "sympi": 34, "rai": 34, "modin": 34, "spyder": 34, "includ": [34, 40, 42, 54, 55, 95, 96, 125, 126, 143, 144, 149, 150, 151, 152, 158, 159, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 332, 333, 1693, 1694, 1696, 1698, 1701, 1702, 1703], "member": [34, 40, 42, 310], "googl": [34, 1686], "octoml": [34, 1702], "einop": [34, 125, 126], "further": [34, 35, 38, 42, 295, 296, 302, 304, 310, 312, 315, 316, 319, 320, 1686, 1701, 1702], "sponsor": 34, "lg": 34, "electron": 34, "microsoft": [34, 1696, 1701, 1703], "d": [34, 35, 36, 41, 131, 132, 133, 134, 294, 298, 312, 319, 1686, 1692], "e": [34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 113, 114, 127, 128, 133, 134, 141, 142, 147, 148, 149, 150, 294, 295, 298, 304, 312, 316, 319, 333, 1685, 1692], "shaw": 34, "co": [34, 39, 60, 61, 125, 126, 300, 316, 332, 1686], "intel": [34, 1694, 1701], "togeth": [34, 158, 159, 296, 298, 305, 310, 313, 314, 320, 321, 333, 1694, 1696, 1697, 1702], "major": [34, 300, 301, 312, 333, 1693, 1696], "involv": [34, 36, 38, 56, 57, 166, 167, 294, 300, 302, 314, 321, 1696, 1702], "anoth": [34, 40, 41, 42, 298, 300, 307, 308, 310, 311, 312, 314, 316, 318, 321, 1685, 1696, 1702], "promis": 34, "sign": [34, 41, 60, 61, 133, 134, 316, 321], "pursuit": 34, "unif": [34, 36, 318, 1692, 1702], "clearli": [34, 40, 42, 302, 311, 312, 1700], "lot": [34, 35, 300, 308, 312, 333, 1695], "thought": [34, 41, 42, 306, 1694], "care": [34, 42, 312, 314, 321], "attent": [34, 42, 296], "gone": [34, 315], "simplifi": [34, 304, 310, 316, 317, 320, 1692, 1694, 1695, 1696, 1699, 1702, 1703], "compat": [34, 44, 47, 48, 60, 61, 133, 134, 137, 138, 143, 144, 149, 150, 151, 152, 297, 306, 310, 311, 313, 316, 333, 1686], "excit": [34, 36, 294, 1686], "complianc": 34, "hope": [34, 333, 1702], "due": [34, 37, 41, 295, 309, 310, 1696], "suit": [34, 41, 294, 295, 299, 312, 319, 332, 1685, 1696, 1702], "some": [34, 35, 40, 41, 42, 158, 159, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 332, 333, 1685, 1686, 1692, 1693, 1695, 1696, 1697, 1702, 1703], "motiv": [34, 318], "great": [34, 35, 42, 312, 316, 318, 1702], "convinc": 34, "celebr": 34, "encourag": [34, 332, 333], "foundat": [34, 1699], "point": [35, 40, 41, 42, 56, 57, 60, 61, 95, 96, 113, 114, 133, 134, 141, 142, 149, 150, 166, 167, 295, 296, 299, 302, 303, 306, 309, 310, 312, 313, 314, 316, 318, 319, 332, 1702], "mai": [35, 39, 40, 41, 42, 60, 61, 147, 148, 168, 169, 295, 298, 300, 309, 310, 312, 317, 318, 320, 1703], "ask": [35, 40, 41, 302, 316, 318, 333], "perfectli": 35, "happi": [35, 41, 333], "current": [35, 38, 40, 41, 42, 125, 126, 158, 159, 295, 297, 298, 300, 301, 304, 307, 308, 310, 311, 314, 316, 321, 332, 333, 1686, 1696, 1702, 1703], "us": [35, 36, 37, 39, 40, 42, 54, 55, 56, 57, 60, 61, 109, 110, 113, 114, 125, 126, 127, 128, 137, 138, 139, 140, 141, 142, 153, 154, 156, 157, 158, 159, 166, 167, 168, 169, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 332, 333, 1685, 1686, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "abund": 35, "better": [35, 37, 294, 310, 311, 313, 314, 315, 318, 319, 320, 1699], "ll": [35, 36, 41, 42, 302, 309, 319], "give": [35, 37, 41, 42, 294, 297, 302, 303, 306, 1696, 1700], "two": [35, 40, 41, 44, 47, 48, 54, 55, 109, 110, 133, 134, 295, 296, 300, 302, 303, 310, 312, 314, 315, 319, 321, 1686, 1693, 1701], "exampl": [35, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 164, 165, 166, 167, 168, 169, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 307, 308, 309, 310, 312, 313, 316, 318, 319, 320, 321, 332, 333, 1686, 1693, 1694, 1697, 1699, 1702, 1703], "streamlin": [35, 1699], "workflow": [35, 40, 42, 297, 299, 300, 310, 319, 331, 1685, 1686, 1695, 1702, 1703], "save": [35, 37, 158, 159, 305, 312, 333, 1695], "week": [35, 42, 1686], "let": [35, 37, 125, 126, 149, 150, 298, 300, 301, 302, 303, 304, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 1686, 1703], "sai": [35, 41, 308, 318], "deepmind": 35, "releas": [35, 40, 41, 42, 300, 310, 313, 314, 333, 1686, 1696, 1702], "awesom": 35, "paper": 35, "love": 35, "choic": [35, 41, 149, 150, 309, 310, 319, 1696], "perceiverio": 35, "happen": [35, 41, 42, 312, 319], "slew": 35, "rush": 35, "f": [35, 36, 38, 42, 294, 298, 305, 316, 319, 1692], "g": [35, 36, 40, 41, 113, 114, 141, 142, 294, 295, 298, 312, 316, 333, 1685, 1692], "inevit": [35, 1697], "deviat": [35, 139, 140, 141, 142, 295], "origin": [35, 40, 42, 44, 47, 48, 109, 110, 133, 134, 137, 138, 149, 150, 158, 159, 297, 300, 308, 309, 310, 316, 1696, 1697], "often": [35, 39, 295, 304, 305, 306, 307, 310, 312, 333, 1697, 1700, 1703], "erron": 35, "train": [35, 127, 128, 298, 301, 307, 319, 320, 321, 331, 332, 333, 1685, 1686, 1694, 1695, 1700, 1702, 1703], "poor": 35, "converg": 35, "perform": [35, 127, 128, 149, 150, 151, 152, 296, 297, 298, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 333, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1703], "issu": [35, 36, 39, 40, 295, 297, 300, 302, 304, 310, 312, 316, 320, 333], "etc": [35, 40, 41, 42, 54, 55, 141, 142, 153, 154, 292, 293, 295, 296, 298, 299, 300, 302, 304, 306, 310, 311, 312, 313, 316, 318, 319, 333, 1685, 1694, 1696, 1702], "publish": [35, 333], "manag": [35, 36, 309, 333, 1698, 1700], "get": [35, 36, 39, 40, 41, 60, 61, 158, 159, 294, 299, 300, 301, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 1685, 1696, 1702], "work": [35, 39, 40, 41, 42, 294, 295, 298, 300, 301, 302, 304, 310, 312, 313, 315, 316, 318, 320, 321, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "repositori": [35, 37, 38, 41, 42, 294, 295, 299, 305], "pull": [35, 36, 37, 38, 40, 41, 295, 302, 313, 314, 333], "request": [35, 36, 40, 302, 313, 314], "confus": [35, 300, 304, 309, 314, 1685], "do": [35, 40, 41, 42, 125, 126, 127, 128, 158, 159, 295, 296, 297, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 313, 314, 316, 318, 319, 320, 321, 333, 1685, 1697, 1702, 1703], "don": [35, 40, 41, 42, 153, 154, 292, 293, 300, 312, 320, 333], "expect": [35, 42, 300, 304, 312, 333, 1686], "codebas": [35, 36, 294, 300, 309, 312, 313, 315, 1686], "total": [35, 36, 42, 149, 150, 158, 159, 300, 301, 302, 312, 314, 319, 320, 333], "hour": [35, 299], "spent": 35, "spin": 35, "off": [35, 41, 315, 1702], "test": [35, 39, 40, 60, 61, 151, 152, 294, 300, 302, 304, 305, 308, 310, 313, 333, 1696], "discuss": [35, 41, 42, 300, 301, 309, 310, 312, 314, 317, 318, 319, 333, 1686, 1692, 1697], "error": [35, 39, 41, 42, 60, 61, 158, 159, 296, 297, 299, 300, 301, 302, 304, 305, 306, 310, 312, 313, 318, 333, 1696], "iter": [35, 49, 50, 51, 52, 53, 125, 126, 153, 154, 158, 159, 292, 293, 298, 316, 319], "address": [35, 40, 42, 295, 296, 316, 1692, 1694, 1696, 1702], "sake": 35, "singl": [35, 40, 41, 42, 95, 96, 141, 142, 158, 159, 295, 298, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 333], "multipl": [35, 42, 95, 96, 139, 140, 149, 150, 151, 152, 158, 159, 297, 298, 302, 304, 307, 309, 314, 316, 333, 1694, 1695, 1696, 1703], "line": [35, 41, 295, 296, 302, 305, 308, 312, 314, 317, 318, 319, 320, 331, 1686, 1699], "convert": [35, 40, 49, 50, 51, 52, 53, 54, 55, 60, 61, 162, 163, 296, 308, 312, 316, 333, 1685, 1694, 1695, 1702], "directli": [35, 42, 295, 296, 298, 299, 300, 301, 303, 307, 308, 309, 310, 311, 313, 314, 316, 318, 320, 321, 332, 333, 1700, 1701, 1702], "graph": [35, 127, 128, 298, 307, 310, 314, 317, 333, 1685, 1692, 1696, 1699], "guarante": [35, 296, 333], "turn": [35, 41, 298, 302, 310, 312], "4": [35, 38, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 109, 110, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 149, 150, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 297, 298, 302, 312, 316, 318, 319, 320, 321, 1686, 1696, 1702, 1703], "step": [35, 37, 38, 40, 41, 42, 109, 110, 127, 128, 164, 165, 296, 297, 298, 300, 301, 302, 310, 312, 316, 319, 320, 321, 332, 1686, 1696], "take": [35, 36, 40, 41, 42, 149, 150, 298, 299, 300, 301, 302, 303, 309, 310, 311, 312, 314, 316, 318, 320, 321, 333, 1686, 1693, 1694, 1702], "few": [35, 39, 40, 42, 298, 300, 301, 306, 307, 309, 312, 314, 316, 317, 318, 319, 320, 331, 1686, 1696, 1698], "second": [35, 41, 44, 47, 48, 60, 61, 95, 96, 127, 128, 133, 134, 145, 146, 295, 300, 302, 309, 310, 312, 318, 1701], "automat": [35, 40, 41, 42, 294, 298, 299, 300, 305, 307, 314, 315, 317, 320, 321, 1685, 1686, 1696, 1699, 1703], "convers": [35, 40, 50, 51, 52, 53, 60, 61, 88, 163, 308, 315, 317, 321, 332, 333, 1685, 1686, 1695, 1702], "everyon": [35, 36, 42, 333], "regardless": [35, 36, 158, 159, 300, 318, 321], "wouldn": 35, "nice": [35, 312, 1696], "write": [35, 38, 39, 40, 42, 45, 46, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 297, 300, 302, 303, 307, 309, 310, 311, 313, 316, 318, 321, 1696, 1703], "onc": [35, 40, 41, 42, 141, 142, 295, 298, 300, 301, 302, 310, 312, 314, 316, 319, 333], "know": [35, 42, 312, 313, 1697], "among": [35, 158, 159, 312, 314, 1696], "frantic": 35, "port": 35, "last": [35, 42, 44, 47, 48, 54, 55, 103, 104, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 158, 159, 295, 297, 300, 302, 305, 309, 311, 312, 314, 316, 333, 1696], "lucid": 35, "honk": 35, "improv": [35, 42, 300, 306, 307, 314, 316, 1685, 1694, 1696, 1698, 1699], "understand": [35, 37, 38, 39, 40, 41, 42, 294, 295, 302, 303, 306, 311, 314, 315, 1692, 1702], "pattern": [35, 125, 126, 300, 303], "hasn": 35, "chang": [35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 295, 297, 298, 299, 300, 302, 303, 310, 312, 313, 314, 316, 320, 333, 1686, 1699, 1702], "now": [35, 38, 41, 295, 297, 298, 300, 305, 306, 308, 310, 312, 313, 314, 318, 319, 321, 332, 333, 1696], "spend": [35, 1696], "torchvis": 35, "probabl": [35, 141, 142, 312], "sonnet": 35, "about": [35, 39, 40, 41, 42, 295, 299, 300, 306, 312, 313, 314, 315, 316, 318, 319, 320, 321, 333, 1697, 1698, 1701], "next": [35, 37, 40, 41, 42, 297, 302, 303, 308, 310, 313, 317, 318, 319, 1686, 1696, 1698], "everyth": [35, 40, 42, 302, 310, 311, 312, 313, 317, 333], "zero": [35, 54, 55, 56, 57, 60, 61, 109, 110, 127, 128, 133, 134, 143, 144, 149, 150, 151, 152, 164, 165, 166, 167, 296, 298, 300, 301, 302, 306, 308, 316, 319, 320, 1686, 1695], "need": [35, 37, 38, 40, 41, 42, 125, 126, 137, 138, 295, 296, 298, 300, 302, 303, 304, 307, 309, 310, 311, 313, 314, 316, 318, 319, 332, 333, 1692, 1696, 1697, 1698, 1702], "said": 35, "high": [35, 40, 141, 142, 310, 314, 319, 1685, 1692, 1693, 1694, 1695, 1696, 1700, 1702, 1703], "level": [35, 36, 40, 42, 298, 307, 310, 314, 315, 316, 319, 320, 321, 333, 1685, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703], "modul": [35, 38, 41, 153, 154, 158, 159, 292, 293, 296, 297, 305, 307, 309, 310, 312, 316, 317, 319, 321, 332, 333, 1686, 1696, 1697, 1699], "optim": [35, 127, 128, 309, 317, 319, 321, 332, 1686, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703], "trainer": [35, 331, 333, 1686, 1703], "statu": [35, 40, 299], "quo": 35, "kera": [35, 1702], "dopamin": 35, "ignit": 35, "catalyst": 35, "lightn": 35, "fastai": 35, "haiku": [35, 321, 1696], "flax": [35, 321, 333, 1696], "trax": [35, 321], "objax": [35, 321], "idea": [35, 37, 310, 313, 317, 332, 1695], "fulli": [35, 296, 300, 306, 309, 314, 316, 317, 318, 319, 320, 321, 333, 1694, 1695, 1696, 1702, 1703], "offer": [35, 41, 310, 320, 1696, 1702, 1703], "strongli": [36, 41, 1702, 1703], "welcom": [36, 41, 42], "absolut": [36, 41, 60, 61, 133, 134, 158, 159, 314], "skill": [36, 1698], "whether": [36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 125, 126, 127, 128, 137, 138, 141, 142, 149, 150, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 298, 300, 302, 306, 309, 310, 312, 313, 314], "veteran": 36, "beginn": [36, 1696], "aspect": [36, 310, 319, 1686, 1696], "guid": [36, 40, 41, 42, 305, 1686, 1702], "through": [36, 39, 40, 42, 294, 297, 298, 302, 307, 308, 309, 310, 311, 312, 314, 315, 316, 319, 320, 321, 332, 1694, 1696, 1697, 1698], "journei": [36, 1686], "inclusvi": 36, "big": [36, 333, 1696], "team": [36, 40, 41, 42, 310, 1698], "board": 36, "contributor": [36, 41, 42, 310, 315, 1686, 1696], "split": [36, 42, 137, 138, 158, 159, 315, 316, 333, 1686, 1703], "section": [36, 37, 39, 40, 42, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 319, 320, 1692, 1699, 1702], "below": [36, 38, 40, 41, 54, 55, 294, 298, 299, 300, 301, 302, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 332, 1686, 1692, 1694, 1699, 1701], "best": [36, 39, 40, 41, 42, 294, 300, 305, 312, 313, 1699, 1700], "go": [36, 37, 40, 41, 42, 294, 297, 300, 302, 310, 311, 313, 315, 319, 333, 1692, 1696, 1697, 1701, 1703], "start": [36, 37, 38, 40, 41, 42, 158, 159, 164, 165, 294, 299, 300, 302, 303, 306, 310, 312, 314, 315, 316, 318, 319, 320, 332, 333, 1696, 1702], "finish": [36, 40, 41, 294, 1686], "dive": [36, 39, 40, 42, 298, 300, 311, 315, 318, 319, 333, 1686, 1702], "right": [36, 41, 42, 133, 134, 158, 159, 294, 302, 314, 319], "environ": [36, 37, 38, 42, 332, 1696, 1698], "basic": [36, 38, 40, 302], "fork": [36, 41, 295], "doc": [36, 39, 40, 302, 303, 306, 311, 312, 316, 319, 320, 1686], "document": [36, 39, 42, 300, 302, 310, 311, 312, 319, 321], "local": [36, 37, 38, 41, 295, 307], "task": [36, 42, 310, 311, 332, 1686, 1696, 1702, 1703], "help": [36, 37, 40, 41, 296, 297, 298, 300, 302, 308, 312, 313, 314, 318, 319, 320, 331, 1685, 1686, 1692, 1696, 1698, 1702], "appli": [36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 318, 319, 320, 321, 331, 333, 1685, 1686, 1697], "resourc": [36, 40], "video": [36, 41, 42, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 1694], "contribut": [37, 39, 40, 41, 42, 316, 1700], "toward": [37, 41, 137, 138, 313, 316, 1692, 1696], "requir": [37, 38, 40, 41, 296, 299, 300, 301, 302, 303, 304, 306, 308, 310, 311, 312, 313, 314, 316, 318, 333, 1696, 1702], "slightli": [37, 298, 310, 316, 320], "more": [37, 39, 40, 42, 109, 110, 137, 138, 145, 146, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 332, 333, 1686, 1694, 1695, 1696, 1697, 1698, 1699, 1702, 1703], "complex": [37, 40, 300, 302, 310, 314, 319, 320, 321, 333, 1685, 1692, 1694, 1696, 1698, 1702, 1703], "setup": [37, 41, 42], "alon": [37, 312], "instanc": [37, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 295, 296, 300, 302, 303, 306, 307, 308, 309, 312, 319, 320, 321, 1685, 1697], "mech": 37, "vision": [37, 331, 1686, 1692, 1702], "demo": [37, 332, 1686], "util": [37, 124, 152, 301, 304, 313, 1694, 1702, 1703], "thu": [37, 40, 304, 310], "relat": [37, 39, 41, 42, 305, 310, 312, 313, 314, 332, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703], "folder": [37, 38, 41, 42, 295, 307, 310, 312, 313], "To": [37, 38, 41, 295, 298, 300, 302, 304, 305, 307, 310, 311, 312, 313, 319, 320, 321, 1686], "grasp": [37, 310], "directori": [37, 38, 40, 41, 42, 299, 310, 312], "tree": [37, 38, 300], "place": [37, 39, 42, 49, 51, 53, 54, 55, 60, 61, 125, 126, 137, 138, 158, 159, 164, 165, 168, 169, 294, 295, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 321, 1685, 1698], "dir": [37, 319], "clone": [37, 38, 42], "mutual": [37, 298, 307], "git": [37, 39, 41, 42, 295, 312], "http": [37, 41, 60, 61, 295, 300, 303], "com": [37, 41, 295, 300], "unifyai": [37, 38, 41, 42], "type": [37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 305, 306, 308, 309, 311, 312, 313, 314, 316, 318, 319, 1686, 1696, 1697, 1700], "venv": 37, "python3": [37, 38, 41, 42], "m": [37, 38, 41, 42, 44, 47, 48, 54, 55, 109, 110, 113, 114, 133, 134, 141, 142, 294, 316], "ivy_dev": [37, 38, 41, 42], "activ": [37, 38, 41, 42, 46, 64, 125, 126, 153, 154, 157, 292, 293, 313, 320, 1686, 1696, 1699], "window": [37, 38, 42, 103, 104, 131, 132, 1701], "block": [37, 42, 298, 304, 305, 307, 312, 315, 317, 321, 333, 1685, 1686, 1701, 1703], "none": [37, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321], "ivy_devscriptsactiv": 37, "bat": [37, 38, 41, 42], "mac": [37, 38, 41, 42], "linux": [37, 38, 41, 42, 1699, 1701], "bin": [37, 38, 41, 42, 295, 298], "instal": [37, 38, 41, 42, 297, 305, 332, 1686], "packag": [37, 38, 41, 305, 310, 333, 1696, 1698], "edit": [37, 40, 41, 42], "mode": [37, 41, 42, 103, 104, 133, 134, 158, 159, 298, 302, 314, 333, 1696, 1699], "cd": [37, 38, 41, 42], "pip": [37, 41, 332, 1686], "repeat": [37, 42, 125, 126, 137, 138, 296, 297, 302, 303, 305, 312], "note": [37, 40, 41, 42, 60, 61, 300, 302, 303, 310, 311, 312, 313], "link": [37, 40, 41, 299, 300, 310, 1692, 1694], "reflect": [37, 42, 296, 312], "immedi": [37, 314, 1686], "ivy_robot": [37, 332], "docker": [37, 39], "desktop": [37, 41], "imag": [37, 38, 41, 102, 103, 104, 130, 131, 132, 313, 316, 317, 319, 321, 332, 1686, 1696], "my": [37, 313], "mount": [37, 42], "run": [37, 38, 40, 41, 127, 128, 294, 297, 299, 302, 305, 306, 310, 311, 316, 317, 318, 319, 320, 321, 332, 333, 1694, 1696, 1697, 1698, 1699, 1701, 1702, 1703], "rm": [37, 42], "v": [37, 41, 42, 131, 132, 147, 148, 311, 316, 319, 320, 321, 1686], "pwd": 37, "volum": 37, "rebuild": [37, 158, 159], "after": [37, 38, 40, 41, 42, 127, 128, 139, 140, 158, 159, 295, 300, 302, 304, 306, 310, 312, 315, 1696], "everi": [37, 38, 40, 42, 54, 55, 125, 126, 295, 297, 298, 299, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 316, 318, 320, 1696], "id": [37, 39, 41, 296, 298, 305], "pycharm": 37, "configur": [37, 38, 41, 42, 158, 159, 299, 300, 308], "part": [37, 42, 54, 55, 127, 128, 295, 307, 310, 312, 313, 314, 316, 317, 321, 332, 333, 1694, 1696, 1701, 1702, 1703], "vscode": [37, 41], "found": [37, 40, 41, 42, 158, 159, 296, 297, 298, 300, 303, 305, 308, 309, 310, 314, 1698], "devcontain": 37, "extens": [37, 39, 41, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 303, 310, 312, 970, 1693, 1696, 1703], "remot": [37, 41, 295], "codespac": 37, "config": [37, 158, 159, 295, 319, 1697], "json": [37, 158, 159, 319], "good": [37, 38, 39, 40, 41, 42, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 317, 320], "feel": [37, 38, 40, 41, 42, 44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "free": [37, 38, 39, 40, 42, 44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "channel": [37, 38, 40, 41, 42, 44, 125, 126, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "pre": [37, 40, 312, 321, 333, 1696], "commit": [37, 40, 295, 299, 302, 312], "_": [37, 38, 41, 60, 61, 303, 305, 309, 310, 312, 319], "builder": [38, 331, 333, 1685, 1686], "dockerfil": [38, 41], "command": [38, 41, 295, 308, 1686], "maco": [38, 1701], "latest": [38, 40, 41, 42, 60, 61, 297, 299, 300, 303, 313, 333, 1701], "ubuntu": [38, 299], "arg": [38, 49, 50, 51, 158, 159, 304, 310, 316, 320], "name": [38, 40, 41, 42, 145, 146, 297, 298, 302, 303, 305, 306, 310, 311, 312, 313, 314, 316, 319, 321, 1696], "uid": 38, "bash": [38, 42, 295], "root": [38, 41, 42, 60, 61, 310, 319], "both": [38, 42, 60, 61, 95, 96, 109, 110, 133, 134, 164, 165, 297, 298, 300, 301, 302, 303, 306, 307, 309, 310, 312, 314, 316, 318, 319, 320, 321, 332, 333, 1696, 1699, 1701, 1702, 1703], "either": [38, 40, 41, 42, 60, 61, 125, 126, 158, 159, 297, 298, 300, 301, 302, 303, 307, 309, 310, 311, 312, 314, 316, 319, 333, 1696], "termin": [38, 41, 42, 158, 159, 298, 316, 319], "3": [38, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 149, 150, 156, 157, 164, 165, 166, 167, 168, 169, 295, 297, 298, 300, 302, 312, 316, 318, 319, 320, 321, 1686, 1703], "8": [38, 41, 44, 47, 48, 60, 61, 95, 96, 103, 104, 109, 110, 119, 120, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 298, 302, 312, 315, 319, 1686], "built": [38, 41, 42, 298, 312, 317, 1685, 1695, 1696, 1700], "doesn": [38, 41, 297, 298, 299, 300, 302, 312, 314, 316, 333, 1694], "explicit": [38, 41, 298, 300, 309, 310, 316, 333, 1696], "cmd": [38, 41], "file": [38, 40, 41, 42, 158, 159, 295, 296, 297, 298, 299, 303, 305, 307, 310, 311, 312, 313, 316, 319, 1692, 1695, 1696, 1697], "abov": [38, 41, 42, 54, 55, 60, 61, 141, 142, 156, 157, 296, 297, 298, 299, 300, 302, 303, 305, 306, 307, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 1696, 1701], "script": [38, 41, 42, 302, 316, 333, 1696], "OR": [38, 41, 42, 151, 152], "move": [38, 42, 109, 110, 168, 169, 313], "execut": [38, 41, 42, 298, 302, 309, 312, 314, 316, 318, 321, 333, 1685, 1692, 1696, 1697, 1698, 1699, 1700, 1702], "insid": [38, 41, 42, 298, 300, 308, 312, 313, 1702], "make_docs_without_dock": 38, "path": [38, 41, 309, 310, 311, 1696], "rel": [38, 42, 44, 47, 48, 127, 128, 133, 134, 137, 138, 147, 148, 164, 165, 311, 314, 1686, 1696, 1698], "assum": [38, 60, 61, 95, 96, 297, 300, 303, 311, 314, 318, 319, 333], "gener": [38, 40, 41, 42, 60, 61, 98, 126, 127, 128, 141, 142, 153, 154, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 318, 320, 321, 332, 333, 1685, 1686, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702], "prefer": [38, 41, 298, 308, 310, 314, 1696], "browser": [38, 41], "affect": [38, 310], "page": [38, 41, 42, 299, 317, 318, 321, 331, 1686], "It": [38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 296, 297, 298, 299, 300, 302, 303, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 1694, 1696, 1697, 1699, 1700, 1701, 1702, 1703], "synchron": [38, 299], "respons": [38, 42, 300], "rest": [38, 41, 299, 321, 1698], "remove_doc": 38, "indic": [38, 54, 55, 103, 104, 125, 126, 131, 132, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 158, 159, 164, 165, 166, 167, 299, 305, 306, 321, 1686], "privat": [38, 312], "access": [38, 40, 41, 42, 158, 159, 300, 310, 1696, 1698, 1700], "fulfil": [38, 315, 1686], "purpos": [38, 42, 296, 298, 299, 302, 304, 306, 307, 308, 310, 312, 314, 315, 318, 1685, 1686, 1695, 1697, 1700, 1701, 1702], "delet": [38, 42], "previous": [38, 41, 307, 312, 316], "autogenerated_sourc": 38, "2": [38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 164, 165, 166, 167, 168, 169, 295, 297, 298, 300, 302, 304, 306, 309, 310, 311, 312, 315, 316, 318, 319, 320, 321, 333, 1686, 1702, 1703], "Then": [38, 40, 42, 308, 313, 333], "format": [38, 156, 157, 158, 159, 162, 163, 294, 300, 301, 302, 303, 304, 316, 318, 319, 1686, 1692, 1694, 1696, 1697], "x": [38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 297, 298, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 1686], "png": [38, 319], "_imag": 38, "lastli": 38, "docstr": [38, 39, 40, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 294, 305, 306, 307, 310, 313], "structur": [38, 42, 158, 159, 296, 298, 307, 311, 313, 319, 320, 1695, 1696], "rst": [38, 394], "main": [38, 41, 54, 55, 133, 134, 298, 305, 308, 312, 1694, 1696, 1697, 1702], "submodul": [38, 40, 41, 42, 44, 155, 295, 299, 301, 307, 308, 312, 315, 316, 320, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1685, 1686, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "skip": [38, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 299, 308, 312], "read": [38, 40, 158, 159, 1686, 1696], "partial_sourc": 38, "conf": 38, "copi": [38, 42, 54, 55, 56, 57, 125, 126, 137, 138, 158, 159, 164, 165, 166, 167, 168, 169, 297, 300, 303, 310, 311, 316, 319, 332, 333], "5": [38, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 109, 110, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 156, 157, 164, 165, 166, 167, 168, 169, 295, 297, 298, 302, 306, 311, 312, 318, 319, 320], "create_rst_fil": 38, "list": [38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 95, 96, 103, 104, 125, 126, 131, 132, 137, 138, 139, 140, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 295, 298, 300, 301, 302, 305, 306, 310, 311, 312, 313, 316, 319, 320, 321, 333, 1686, 1696, 1697, 1702], "filter": [38, 131, 132, 312], "recurs": [38, 41, 49, 50, 51, 52, 53, 158, 159, 162, 163, 295, 298, 307, 320, 333], "repres": [38, 60, 61, 133, 134, 314, 318, 1693, 1694, 1697], "its": [38, 40, 41, 42, 49, 52, 53, 56, 57, 137, 138, 158, 159, 166, 167, 300, 303, 308, 310, 311, 312, 313, 314, 321, 333, 1685, 1695, 1696, 1702], "overal": [38, 298, 300, 301, 303, 321, 1692, 1694, 1695, 1696], "markup": 38, "6": [38, 44, 47, 48, 54, 55, 60, 61, 95, 96, 103, 104, 109, 110, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 141, 142, 147, 148, 149, 150, 164, 165, 297, 298, 302, 312, 314, 316, 318, 319, 320], "extract": [38, 310, 313, 1692, 1696, 1697, 1702], "class": [38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 296, 298, 300, 301, 302, 303, 306, 311, 312, 314, 316, 317, 319, 320, 321, 331, 332, 333, 1685, 1686, 1694, 1696, 1697, 1703], "get_functions_and_class": 38, "doctr": 38, "7": [38, 42, 44, 45, 46, 47, 48, 60, 61, 95, 96, 103, 104, 109, 110, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 168, 169, 298, 302, 307, 309, 312], "readm": [38, 333], "module_nam": 38, "copy_readme_to_rst": 38, "tabl": [38, 300, 310, 1696], "content": [38, 40, 158, 159, 309, 316, 319], "toc": 38, "accord": [38, 40, 41, 56, 57, 125, 126, 149, 150, 166, 167, 295, 300, 307, 310, 312], "append": [38, 158, 159, 304, 312, 316, 319], "append_toctree_to_rst": 38, "9": [38, 44, 47, 48, 60, 61, 103, 104, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 141, 142, 147, 148, 149, 150, 166, 167, 298, 302, 312, 319, 320, 1692], "index": [38, 54, 55, 125, 126, 143, 144, 145, 146, 147, 148, 158, 159, 164, 165, 298, 307, 311, 312, 318, 1696], "create_index_rst": 38, "14": [38, 56, 57, 60, 61, 103, 104, 141, 142, 149, 150, 166, 167, 298, 302, 312], "\u03c0": 38, "updat": [38, 40, 41, 42, 49, 51, 53, 125, 126, 127, 128, 158, 159, 294, 295, 296, 298, 299, 300, 302, 306, 308, 311, 314, 316, 318, 319, 321, 333], "namespac": [38, 40, 300, 308, 310, 311, 313, 316, 321], "remov": [38, 40, 133, 134, 158, 159, 297, 300, 303, 307, 312, 314, 321, 1696], "here": [39, 40, 41, 42, 295, 298, 299, 302, 306, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 332, 333, 1696, 1697], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "respect": [39, 40, 42, 60, 61, 127, 128, 296, 298, 300, 302, 306, 310, 312, 313, 1692, 1702], "behaviour": [39, 40, 42, 294, 295, 296, 298, 300, 303, 304, 306, 309, 310, 312, 313, 318], "frontend": [39, 294, 300, 312, 313, 315, 317, 1685, 1696], "refer": [39, 40, 41, 42, 149, 150, 151, 152, 295, 300, 306, 307, 310, 311, 312, 333, 1685, 1696], "realpython": 39, "pyn": 39, "kind": [39, 310, 312, 314, 316, 333], "stack": [39, 44, 47, 48, 133, 134, 137, 138, 158, 159, 316, 1686, 1692, 1694, 1701, 1702], "overflow": [39, 300], "platform": [39, 41, 1694, 1698, 1700], "sort": [39, 120, 148, 158, 159, 313], "inform": [39, 40, 41, 42, 127, 128, 295, 298, 304, 311, 312, 1699], "pilot": 39, "bit": [39, 40, 41, 298, 300, 302, 307, 316, 318, 1702], "thei": [39, 40, 41, 42, 95, 96, 133, 134, 141, 142, 158, 159, 294, 295, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 333, 1686, 1693, 1696, 1698, 1699, 1702, 1703], "done": [39, 40, 41, 42, 295, 302, 305, 310, 312, 319, 1696], "faster": [39, 1685, 1698, 1701], "head": [39, 41, 1686], "stuck": [39, 40], "spell": 39, "check": [39, 40, 41, 42, 49, 50, 51, 52, 53, 56, 57, 125, 126, 127, 128, 158, 159, 166, 167, 295, 298, 302, 304, 308, 310, 313, 315, 316, 318, 319, 320, 1686], "though": [39, 40, 42, 300, 303, 307, 310, 314, 319, 333], "sound": [39, 315], "odd": [39, 295], "peopl": [39, 41, 42, 294, 1696, 1698], "action": [39, 302, 312], "integr": [39, 41, 56, 57, 95, 96, 166, 167, 294, 1694, 1696, 1698, 1699, 1700], "keep": [39, 40, 41, 42, 137, 138, 158, 159, 295, 298, 299, 312, 313, 314, 319, 321], "explain": [40, 41, 42, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 1686, 1692, 1699, 1702], "frequent": [40, 42, 1696], "wherebi": [40, 1693], "outlin": [40, 41, 42, 294, 298, 300, 303, 307, 309, 310, 312], "broad": [40, 1698], "individu": [40, 42, 295, 299, 307, 309, 310, 1696, 1699, 1702, 1703], "sub": [40, 42, 137, 138, 158, 159, 162, 163, 294, 298, 304, 310, 311, 312, 318, 319, 320, 1686, 1692], "distribut": [40, 113, 114, 135, 136, 141, 142, 301, 333, 1696, 1699], "across": [40, 143, 144, 158, 159, 295, 298, 300, 302, 304, 306, 307, 310, 312, 314, 1694, 1696, 1701], "todo": [40, 300, 310], "detail": [40, 42, 295, 297, 298, 299, 306, 307, 308, 310, 311, 312, 313, 316, 318, 319, 320, 1698, 1702], "befor": [40, 41, 42, 137, 138, 158, 159, 295, 296, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 316, 319, 333, 1696], "select": [40, 41, 42, 149, 150, 309, 312, 316, 318, 321, 333, 1696, 1699, 1700], "alloc": [40, 42, 54, 55, 56, 57, 166, 167, 333], "describ": [40, 42, 299, 312, 316, 321, 1696], "explan": [40, 42, 298, 303, 306, 310, 318], "instead": [40, 41, 42, 60, 61, 295, 298, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 333, 1694, 1696, 1702, 1703], "focu": [40, 1694, 1695, 1698, 1703], "been": [40, 42, 125, 126, 141, 142, 295, 297, 298, 299, 300, 301, 303, 305, 306, 307, 312, 316, 318, 332, 333, 1685, 1696, 1703], "alwai": [40, 42, 56, 57, 127, 128, 137, 138, 166, 167, 296, 297, 298, 300, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 333], "NOT": 40, "pypi": [40, 41, 333], "implement": [40, 56, 57, 147, 148, 166, 167, 168, 169, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 332, 333, 1685, 1686, 1693, 1694, 1695, 1696, 1699, 1702, 1703], "instruct": [40, 41, 295, 1694, 1697, 1700, 1702], "static": [40, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 302, 303, 307, 308, 310, 333, 1695, 1696, 1697], "method": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 295, 296, 300, 302, 303, 305, 306, 307, 308, 312, 313, 316, 317, 320, 321, 333, 1686, 1697, 1703], "arrai": [40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 294, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 333, 1685, 1686, 1694, 1695, 1696, 1698, 1702, 1703], "revers": [40, 44, 47, 48, 109, 110, 125, 126, 133, 134, 149, 150, 298, 300, 302, 303, 310, 314, 321, 333], "familiar": [40, 41], "yourself": [40, 42, 310, 312, 314, 332], "hypothesi": [40, 42, 295, 308], "pass": [40, 42, 153, 154, 158, 159, 292, 293, 295, 296, 297, 298, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 333, 1694], "fail": [40, 41, 42, 295, 299, 300, 302, 305, 310], "els": [40, 125, 126, 141, 142, 297, 300, 304, 307, 309, 310, 311, 312, 313, 314, 316, 318, 320, 321, 333, 1697], "cover": [40, 295, 302, 303, 307, 308, 312, 314, 315], "lambda": [40, 312, 316, 319], "direct": [40, 310, 311, 314, 320, 321, 332, 1692, 1696, 1697, 1700], "bind": [40, 298, 1695, 1696], "defin": [40, 41, 54, 55, 109, 110, 125, 126, 133, 134, 164, 165, 299, 300, 303, 306, 310, 311, 312, 313, 318, 320, 333, 1685, 1693, 1694, 1695, 1696, 1697, 1700, 1702, 1703], "def": [40, 41, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 394, 1686], "special": [40, 44, 47, 48, 149, 150, 295, 296, 302, 303, 304, 306, 309, 313, 1696, 1697, 1698], "sure": [40, 41, 42, 295, 299, 310, 311, 314], "aforement": 40, "correct": [40, 42, 149, 150, 294, 298, 300, 301, 305, 306, 307, 311, 312, 1686], "categori": [40, 295, 296, 298, 300, 310, 313, 315, 1686], "parent": [40, 318], "arraywithelementwis": [40, 44, 47, 48, 60, 296, 318], "containerwithmanipul": 40, "hint": [40, 60, 61, 296, 303, 306, 307, 309, 310, 313], "add": [40, 41, 42, 44, 47, 48, 60, 61, 139, 140, 153, 154, 158, 159, 292, 293, 294, 295, 296, 297, 298, 300, 303, 306, 307, 309, 310, 312, 313, 314, 316, 318, 333, 1686, 1692, 1694, 1696], "thorough": [40, 303, 306, 312], "ensur": [40, 41, 42, 125, 126, 296, 300, 302, 304, 305, 306, 308, 309, 310, 311, 312, 313, 1696], "produc": [40, 300, 312, 313, 1697, 1699], "comment": [40, 41, 42, 295, 300, 305, 310], "add_reformatting_checklist_": 40, "category_nam": [40, 300, 301, 303, 306, 307], "pr": [40, 42, 295, 310], "belong": [40, 158, 159, 295, 320], "shown": [40, 42, 153, 154, 158, 159, 292, 293, 299, 300, 302, 305, 306, 310, 311, 312, 313, 316, 318, 333], "trigger": [40, 299], "autom": [40, 312, 1685, 1686, 1698], "bot": 40, "proper": 40, "markdown": 40, "text": [40, 42, 302, 303], "might": [40, 41, 42, 125, 126, 300, 302, 305, 308, 309, 310, 312, 313, 314, 316, 318, 319, 1685], "moment": [40, 127, 128, 297, 333], "patient": [40, 41], "modifi": [40, 41, 42, 158, 159, 295, 297, 300, 301, 303, 305, 307, 313, 316], "item": [40, 49, 53, 125, 126, 153, 154, 158, 159, 298, 300, 316, 318, 319, 321, 1686], "symbol": [40, 41, 1696, 1697], "emoji": 40, "within": [40, 42, 49, 52, 53, 310, 311, 312, 320, 333, 1692, 1693, 1697], "legend": 40, "mark": [40, 42, 312], "review": [40, 42, 302, 310, 313], "checkbox": [40, 41], "proce": [40, 41], "elabor": 40, "struggl": 40, "assigne": 40, "author": [40, 42, 1686, 1694, 1698], "later": [40, 158, 159, 312, 1696], "status": 40, "manual": [40, 41, 42, 299, 310, 312, 320], "refrain": 40, "transpil": [40, 310, 315, 316, 317, 1685, 1686, 1696, 1702, 1703], "locat": [40, 42, 297, 301, 310, 311, 312, 313, 1694], "subsect": [40, 42, 295, 299], "verifi": [40, 300, 301, 310, 312, 313], "miss": [40, 41, 296, 298, 302, 305, 312], "simpler": [40, 42, 310, 1697, 1703], "titl": [40, 42, 310, 1686], "label": [40, 42, 135, 136, 299, 310, 315, 316, 317, 321, 1696], "suggest": [40, 41, 42, 300, 310, 312, 313], "simpli": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 296, 297, 298, 300, 301, 302, 303, 306, 307, 309, 310, 311, 312, 314, 316, 320, 321, 333, 1685, 1697, 1702], "leav": [40, 49, 52, 53, 162, 163, 298, 300, 302, 303, 306, 307, 309, 312, 319, 320], "assess": [40, 314], "appropri": [40, 42, 143, 144, 153, 154, 292, 293, 308, 312], "wait": [40, 42, 158, 159, 310], "option": [40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 321, 333, 1696, 1702], "composit": [40, 294, 296, 297, 298, 300, 309, 311, 312, 314, 316, 320, 321, 333, 1685, 1697], "temporari": [40, 300], "merg": [40, 42, 295, 310, 1696], "close": [40, 41, 42, 303, 310, 312, 314, 1696], "normal": [40, 139, 140, 141, 142, 319, 1694], "altern": [40, 41, 309, 310, 319, 1699], "composition": [40, 309, 310], "choos": [40, 41, 42, 143, 144, 168, 169, 317, 321, 1703], "decid": [40, 41, 158, 159, 300, 314], "addit": [40, 41, 42, 125, 126, 139, 140, 168, 169, 298, 300, 302, 303, 310, 312, 313, 314, 318, 319, 321, 1696, 1697, 1698, 1702], "potenti": [40, 41, 42, 300, 310, 315, 1699], "pend": 40, "show": [40, 41, 42, 158, 159, 299, 302, 309, 310, 312, 332, 333, 1686, 1696], "helpfulli": [40, 314, 1694], "prevent": [40, 42, 127, 128, 300, 305, 309, 310, 313, 314], "problemat": [40, 41], "unimpl": 40, "final": [40, 42, 125, 126, 296, 300, 302, 303, 305, 307, 309, 310, 314, 315, 319, 1692, 1702], "issue_link": 40, "chosen": 40, "correctli": [40, 41, 42, 133, 134, 143, 144, 298, 300, 302, 304, 305, 306, 309, 311, 312, 314, 320, 333], "alias": [40, 310], "detect": [40, 41, 158, 159, 297, 298, 305, 312, 319, 320], "alias_nam": 40, "function_nam": 40, "notic": [40, 314], "alia": 40, "alreadi": [40, 41, 42, 158, 159, 297, 298, 300, 306, 310, 314, 333, 1686, 1696, 1698, 1703], "push": [40, 42, 295, 305, 1702], "liner": 40, "default": [40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 297, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 314, 316, 320, 1685, 1696], "meanwhil": 40, "reselect": 40, "too": [40, 41, 42, 295, 299, 300, 305, 333], "placement": 40, "categoris": [40, 295, 310], "faithfulli": 40, "descript": [40, 60, 61, 303], "inner": [40, 133, 134, 164, 165, 309], "fall": [40, 42, 300, 315, 1686], "under": [40, 41, 42, 294, 295, 298, 302, 303, 307, 310, 312, 314, 315, 316, 319, 321, 333, 1696, 1699, 1703], "linalg": [40, 309, 1686], "match": [40, 56, 57, 158, 159, 166, 167, 298, 302, 1697, 1702], "creation_routin": [40, 311], "fft": [40, 1696], "indexing_routin": 40, "logic": [40, 151, 152, 296, 300, 301, 304, 308, 310, 312, 318, 1686], "ma": 40, "manipulation_routin": 40, "mathematical_funct": [40, 310], "matrix": [40, 44, 47, 48, 125, 126, 131, 132, 133, 134, 300, 310, 1694, 1696], "ndarrai": [40, 54, 55, 125, 126, 296, 300, 301, 306, 309, 310, 311, 313, 314, 316, 318, 321, 1685], "random": [40, 114, 142, 158, 159, 301, 312, 313, 321, 332, 1686, 1696], "sorting_searching_count": 40, "statist": [40, 122, 150, 292, 293, 300, 310, 312, 313, 1696], "ufunc": 40, "hierarchi": [40, 158, 159, 319, 1692, 1702], "__init__": [40, 44, 47, 48, 158, 159, 297, 300, 304, 310, 313, 316, 318, 319, 320, 321, 1686], "py": [40, 41, 42, 295, 297, 299, 300, 301, 303, 304, 305, 306, 307, 310, 311, 312, 313, 316, 318, 320, 321], "decomposit": [40, 1703], "matrix_and_vector_product": 40, "matrix_eigenvalu": 40, "norms_and_other_numb": 40, "solving_equations_and_inverting_matric": 40, "product": [40, 60, 61, 133, 134, 149, 150, 316, 1696, 1698], "seem": [40, 41, 314, 320, 321, 333, 1696], "np": [40, 296, 300, 301, 306, 309, 310, 311, 312, 313, 314, 316, 318, 319, 321, 1685, 1686], "func": [40, 158, 159, 302], "gleam": 40, "yet": [40, 41, 333], "uncom": 40, "test_numpy_inn": 40, "mirror": [40, 1696], "correspond": [40, 42, 56, 57, 60, 61, 95, 96, 109, 110, 125, 126, 137, 138, 149, 150, 158, 159, 166, 167, 296, 297, 298, 299, 300, 302, 303, 306, 307, 308, 310, 312, 314, 316, 1696], "ivy_test": [40, 41, 42, 295, 299, 311], "test_ivi": [40, 41, 42, 299, 311, 312], "test_frontend": [40, 311], "unsur": [40, 312], "put": [40, 312, 333, 1702], "explor": [40, 41, 42, 300, 314, 317, 321, 332, 1696, 1699], "outer": [40, 133, 134], "confirm": 40, "ve": [40, 41, 42, 141, 142, 314, 315, 318, 1685, 1686], "empti": [40, 41, 125, 126, 158, 159, 296, 300, 301], "along": [40, 45, 46, 95, 96, 109, 110, 121, 122, 125, 126, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 302, 309, 313, 314, 316, 1696], "backend_nam": [40, 297, 300, 301, 303, 306, 307, 308], "relevant_submodul": 40, "sometim": [40, 41, 42, 300, 310, 312, 313, 314], "behav": [40, 295, 304, 309, 311, 318, 1697], "helper": [40, 299, 300, 304, 319, 1685], "recreat": 40, "defer": [40, 296, 298, 300, 301, 307, 308, 309, 310, 312, 1702], "clearer": [40, 304, 319], "mind": [40, 296, 298, 312], "posit": [40, 42, 49, 50, 51, 60, 61, 109, 110, 125, 126, 133, 134, 137, 138, 295, 298, 308, 310, 311, 312, 313, 319, 332, 1698], "keyword": [40, 49, 50, 51, 158, 159, 298, 300, 301, 308, 309, 310, 311, 312, 313, 319], "paramet": [40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 303, 304, 306, 308, 312, 313, 316, 318, 319, 332, 1697], "strategi": [40, 308, 311], "draw": [40, 141, 142, 311, 312], "realli": [41, 298, 333, 1701, 1702], "gh": 41, "your_fold": 41, "cours": [41, 42, 295, 302, 313, 314, 319, 333, 1701, 1702], "whatev": [41, 298, 333], "elig": 41, "student": 41, "licenc": 41, "remind": 41, "account": [41, 303, 310], "licens": [41, 1699], "expir": 41, "abl": [41, 42, 158, 159, 295, 300, 307, 309, 310, 314, 316, 321, 1699, 1702], "profession": 41, "trial": 41, "jetbrain": 41, "valid": [41, 103, 104, 131, 132, 151, 152, 297, 300, 302, 311, 312, 1697], "bui": [41, 1702], "paid": 41, "pace": 41, "align": [41, 42, 158, 159, 316, 318, 1685, 1702], "stabl": [41, 125, 126, 147, 148, 297, 300, 316, 333], "mayb": [41, 49, 52, 53, 316, 318], "person": [41, 42], "experi": [41, 312, 317, 319, 333], "avoid": [41, 42, 297, 298, 300, 305, 308, 310, 312, 313, 1696], "abil": [41, 314, 317, 333, 1696], "certain": [41, 42, 158, 159, 295, 300, 312, 314, 333, 1700], "perhap": [41, 318, 319, 320, 333, 1702], "track": [41, 42, 1696], "click": [41, 42, 299, 303, 317, 1686], "icon": [41, 42], "side": [41, 42, 147, 148], "left": [41, 42, 121, 122, 133, 134, 143, 144, 147, 148, 300, 302], "panel": 41, "drop": [41, 333], "down": [41, 312, 1685, 1696, 1702], "builtin": [41, 318, 320], "virtualenv": 41, "o": [41, 294, 316], "tick": [41, 42, 299], "test_array_api": [41, 42, 295, 312], "r": [41, 42, 158, 159, 294], "txt": [41, 295, 313], "visual": [41, 310, 333, 1696, 1698, 1701], "mitig": [41, 1702], "conflict": [41, 42, 310, 319], "particular": [41, 42, 295, 297, 300, 302, 308, 309, 310, 311, 312, 313, 314, 1692, 1696, 1702], "system": [41, 42, 297, 300, 333, 1694, 1696, 1699, 1701, 1703], "jaxlib": [41, 296, 300, 301, 306, 313, 316, 318], "wsl": 41, "powershel": 41, "admin": 41, "visit": [41, 42, 311], "deploy": [41, 1695, 1698, 1699, 1702, 1703], "top": [41, 42, 137, 138, 300, 310, 312, 319, 320, 1696, 1700], "press": [41, 42, 319, 1686], "ok": 41, "debug": [41, 42, 298, 299, 312, 314, 319, 1696], "dialog": 41, "invalid": [41, 151, 152, 300, 305], "caus": [41, 42, 295, 297, 298, 299, 300, 302, 309, 312, 333], "earlier": [41, 42], "necessari": [41, 42, 137, 138, 297, 298, 302, 308, 309, 310, 312, 314], "virtualis": 41, "sudo": 41, "apt": 41, "ca": 41, "certif": 41, "curl": 41, "gnupg": 41, "lsb": 41, "mkdir": 41, "p": [41, 42, 125, 126, 294], "keyr": 41, "fssl": 41, "download": [41, 312], "gpg": 41, "dearmor": 41, "echo": 41, "deb": 41, "arch": 41, "dpkg": 41, "print": [41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 292, 293, 298, 302, 312, 316, 318, 319, 320, 1686], "architectur": [41, 321, 333, 1694, 1695, 1696, 1699, 1700, 1701], "lsb_releas": 41, "tee": 41, "dev": [41, 58, 59, 158, 159, 168, 169, 301, 307, 318, 320], "null": 41, "ce": 41, "cli": 41, "containerd": 41, "io": 41, "compos": [41, 298, 312, 333, 1696, 1703], "plugin": 41, "systemctl": 41, "permiss": 41, "post": [41, 139, 140, 321], "coupl": [41, 296, 318, 320, 1696], "unit": [41, 45, 46, 156, 157, 295, 300, 310, 311, 312, 333, 1697, 1700], "test_ab": [41, 312], "context": [41, 42, 131, 132, 302], "menu": 41, "editor": 41, "green": [41, 42, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "appear": [41, 42, 314], "pytest": [41, 42, 295, 312], "keyboard": 41, "shortcut": 41, "displai": [41, 298, 312, 319], "screenshot": 41, "henc": [41, 298, 312], "ctrl": [41, 42], "shift": [41, 42, 137, 138, 164, 165, 302, 306], "bottom": [41, 1702], "screen": [41, 158, 159, 319], "elsewher": 41, "test_elementwis": 41, "tab": [41, 299, 319, 1686], "progress": [41, 42, 321], "bar": 41, "shell": [41, 42], "run_tests_cli": [41, 295], "run_ivy_core_test": 41, "run_ivy_nn_test": 41, "run_ivy_stateful_test": 41, "run_test": 41, "sh": [41, 42, 295], "test_depend": 41, "test_ivy_cor": 41, "test_ivy_nn": 41, "test_ivy_st": 41, "test_": [41, 295, 299, 311], "test_funct": [41, 42, 299, 311, 312], "test_cor": [41, 42, 299, 311], "wish": [41, 310], "ivy_cor": 41, "ivy_nn": 41, "ivy_st": 41, "torch": [41, 42, 295, 296, 297, 299, 300, 301, 304, 306, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 321, 333, 1685, 1686, 1702], "dure": [41, 127, 128, 149, 150, 158, 159, 168, 169, 298, 300, 301, 304, 307, 308, 309, 310, 312, 314, 333, 1696, 1697, 1702], "simplest": [41, 302, 312, 314], "valu": [41, 42, 54, 55, 56, 57, 60, 61, 95, 96, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 157, 158, 159, 164, 165, 166, 167, 295, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 333, 1696, 1697], "return": [41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 333, 1686, 1697], "becaus": [41, 42, 296, 297, 298, 300, 301, 303, 306, 307, 308, 309, 310, 311, 312, 314, 316, 320, 321, 333, 1696, 1699, 1702], "header": [41, 42], "summari": [41, 42, 158, 159, 312], "recommend": [41, 42, 297], "advanc": [41, 1695], "q": [41, 42, 294, 333], "studio": 41, "easiest": 41, "effici": [41, 42, 298, 305, 307, 308, 309, 312, 316, 319, 333, 1696, 1698, 1699], "afterward": [41, 319], "background": [41, 1696, 1698], "restart": 41, "corner": [41, 42, 312], "overlap": [41, 313, 314, 1697], "test_file_path": 41, "test_fn_nam": 41, "enter": [41, 42, 296, 300, 301, 306, 308], "forward": [41, 297, 303, 312, 313, 314, 321, 332, 333, 1696, 1697], "slash": 41, "regular": [41, 42, 310, 311, 1696], "headach": 41, "arm": [41, 42], "m1": 41, "featur": [41, 42, 306, 310, 313, 314, 319, 333, 1686, 1696, 1697, 1698, 1702], "vm": 41, "azur": 41, "cloud": [41, 332, 1698], "mean": [41, 42, 125, 126, 131, 132, 141, 142, 149, 150, 158, 159, 292, 293, 294, 295, 297, 298, 300, 301, 302, 307, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 332, 333, 1685, 1686, 1693, 1696], "longer": [41, 300, 308, 309, 312, 1696], "worri": 41, "agnost": [41, 296, 306, 316, 318, 321, 333, 1686, 1702, 1703], "usual": [41, 295, 310, 312, 314], "favourit": 41, "theme": 41, "unsupport": [41, 305, 310], "old": [41, 158, 159, 297, 309], "slow": 41, "ipad": 41, "long": [41, 42, 299, 300, 302, 316, 1696], "cool": [41, 313], "sever": [41, 42, 313, 333, 1694, 1700], "requisit": 41, "pane": [41, 42], "readi": 41, "begin": [41, 295, 311], "dropdown": 41, "master": [41, 42, 295, 313, 1696], "view": [41, 42, 109, 110, 299, 1696], "box": 41, "upto": [41, 42], "15": [41, 60, 61, 95, 96, 103, 104, 141, 142, 149, 150, 164, 165, 302, 312, 1699], "minut": 41, "subsequ": [41, 296, 300, 302, 306, 307, 309, 312, 314, 320, 1697], "launch": 41, "12": [41, 60, 61, 103, 104, 125, 126, 141, 142, 149, 150, 297, 298, 300, 302, 312, 313], "output": [41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 294, 295, 296, 298, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 316, 318, 320, 321, 333, 1685, 1686, 1697], "That": [41, 42, 312, 318, 319, 320, 1697], "approach": [41, 42, 298, 300, 307, 308, 312, 314, 318, 319, 333, 1693, 1700, 1702], "colour": 41, "applic": [41, 300, 301, 308, 320, 1693, 1694, 1696, 1698, 1700, 1702], "chanc": 41, "troubleshoot": 41, "ever": 41, "64": [41, 60, 61, 95, 96, 131, 132, 319, 320, 1686, 1701], "usr": 41, "flask": 41, "toolbar": [41, 42], "_array_modul": [41, 295], "array_api_test": [41, 42, 295], "01": [41, 127, 128, 297, 321], "08": [41, 149, 150], "2022": 41, "conftest": 41, "via": [41, 42, 295, 298, 300, 301, 309, 310, 313, 314, 316, 318, 319, 332, 1696], "refresh": 41, "nutshel": [41, 306], "hook": 41, "lint": 41, "accept": [41, 42, 49, 60, 61, 162, 296, 298, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 318, 1685, 1686, 1694], "fix": [41, 42, 299, 300, 312, 313], "attempt": [41, 305, 333], "succe": 41, "properli": [41, 294, 304, 312], "server": [42, 1696], "suitabl": [42, 298, 313, 1696], "quick": [42, 294, 320], "tendenc": 42, "land": 42, "isn": [42, 308, 319, 333, 1698], "end": [42, 297, 309, 313, 314, 315, 332, 333, 1686, 1694, 1699], "world": [42, 1698], "come": [42, 310, 313, 314, 320, 331, 1685, 1686, 1696], "fly": [42, 1696], "hard": [42, 312, 318, 1696], "receiv": [42, 300, 301, 312], "internship": 42, "bug": [42, 310, 312, 313], "serv": [42, 296, 298, 306, 307, 312, 314, 315, 1685, 1686, 1694], "suspect": 42, "observ": [42, 304, 316, 1698], "act": [42, 302, 333, 1703], "placehold": [42, 296, 305, 306, 1685], "ii": 42, "iii": 42, "issue_numb": 42, "No": [42, 1696], "soon": [42, 300, 331, 333, 1686], "partial": [42, 158, 159], "solut": [42, 298, 300, 312, 314, 1694, 1698], "associ": [42, 133, 134, 300, 307, 308, 310, 311, 312, 333], "respond": 42, "shape": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 316, 318, 319, 320, 321, 1686], "dai": [42, 299], "warn": 42, "without": [42, 158, 159, 296, 298, 300, 301, 302, 304, 305, 306, 307, 311, 312, 313, 314, 318, 319, 320, 332, 333, 1693, 1696, 1697, 1698, 1702], "likewis": [42, 298, 300, 303, 306, 307, 310, 314, 319, 1702], "freed": 42, "flag": [42, 127, 128, 158, 159, 300, 308, 309, 310, 312], "remain": [42, 137, 138, 143, 144, 299, 302, 313, 314, 333], "prioriti": [42, 158, 159, 309], "short": [42, 300, 310, 313, 316, 320], "basi": [42, 295, 319], "situat": [42, 321], "upon": [42, 302, 309, 312, 314, 333, 1695, 1696], "period": [42, 313], "unabl": [42, 314], "obvious": 42, "never": [42, 137, 138, 300, 310, 312, 314], "qualiti": 42, "hypothet": 42, "frustrat": 42, "delai": 42, "busi": 42, "fine": [42, 300, 302, 310, 318, 321, 1702], "inact": 42, "limit": [42, 158, 159, 302, 304, 305, 310, 312, 314, 319, 333, 1695, 1696, 1697], "me": 42, "unfairli": 42, "definit": [42, 95, 96, 133, 134, 300, 307, 318], "investig": 42, "maximum": [42, 60, 61, 95, 96, 125, 126, 127, 128, 137, 138, 143, 144, 158, 159, 302, 319, 1686, 1703], "incomplet": 42, "three": [42, 298, 302, 310, 312, 314, 315, 316, 1686, 1697, 1702], "per": [42, 103, 104, 131, 132, 310, 312, 319], "self": [42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 296, 298, 304, 310, 311, 316, 318, 319, 320, 321, 1686], "assign": [42, 297, 300, 305, 309, 318], "sequenc": [42, 109, 110, 113, 114, 137, 138, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 300, 301, 302, 304, 312, 313, 316, 321, 332, 1699], "regist": 42, "wherea": [42, 296, 298, 300, 301, 302, 306, 307, 312, 313, 321, 1693], "primarili": [42, 298, 1696], "invit": 42, "roadmap": [42, 299, 1686], "result": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 298, 299, 300, 302, 303, 306, 308, 309, 310, 311, 312, 313, 316, 319, 333, 1686, 1697, 1699], "mainli": [42, 294, 317, 319, 1685, 1696], "extend": [42, 297, 303, 306, 310, 313, 333, 1693, 1696, 1702], "ideal": [42, 309, 319], "Such": [42, 312], "easier": [42, 296, 300, 310, 313, 1685, 1696, 1698], "interv": [42, 141, 142, 151, 152], "forth": 42, "rare": [42, 301, 333, 1701], "scenario": 42, "someon": [42, 333], "someth": [42, 313, 319, 320, 333, 1702], "unfortun": 42, "redund": [42, 300, 304, 310, 314], "specifi": [42, 54, 55, 56, 57, 103, 104, 125, 126, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 156, 157, 158, 159, 166, 167, 294, 300, 301, 306, 307, 309, 310, 311, 312, 314, 316, 319, 320, 1702], "behind": [42, 127, 128, 294, 306, 312, 315, 317], "well": [42, 299, 300, 309, 310, 312, 320, 321, 332, 1695, 1696, 1697, 1701], "practic": [42, 299, 1699], "separ": [42, 296, 298, 312, 316, 318, 319, 1697, 1701], "branch": [42, 295, 333, 1696], "role": [42, 310, 317, 1697, 1699, 1703], "kept": [42, 158, 159, 309, 313], "date": [42, 313], "upstream": [42, 295], "base": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 299, 300, 304, 306, 308, 311, 312, 313, 316, 332, 1696, 1701, 1703], "complic": [42, 311, 316], "merge_with_upstream": 42, "name_of_your_branch": 42, "resolv": [42, 295, 300, 316], "abort": 42, "tediou": [42, 302], "resolut": 42, "stash": 42, "reinstat": 42, "fetch": [42, 295], "0": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 297, 298, 300, 302, 303, 304, 310, 311, 312, 313, 316, 318, 319, 320, 321, 333, 1686], "uncommit": 42, "unstag": 42, "untrack": 42, "comprehens": [42, 295], "atlassian": 42, "tutori": [42, 310], "wrote": 42, "piec": [42, 296, 307, 308, 316, 1692, 1694], "tag": 42, "navig": [42, 294], "blame": 42, "revis": 42, "log": [42, 60, 61, 133, 134, 298, 299, 302, 307, 309, 310, 312, 314, 316, 319, 1686], "eg": 42, "16": [42, 44, 47, 48, 60, 61, 95, 96, 103, 104, 131, 132, 133, 134, 141, 142, 149, 150, 166, 167, 302, 312, 319], "past": [42, 311, 1696], "l": [42, 133, 134, 294], "filepath": [42, 158, 159, 295], "grep": 42, "retriev": [42, 310], "commit_id": 42, "handi": 42, "histori": 42, "toggl": 42, "vertic": 42, "highlight": [42, 302], "previou": [42, 127, 128, 295, 306, 310, 312, 314, 321, 333, 1699], "whenev": [42, 299, 300, 304, 308, 312, 319], "think": [42, 302, 1697], "gain": [42, 295, 315, 320, 1696], "quit": [42, 296, 302, 303, 307, 308, 312, 314, 1696, 1702], "newli": [42, 56, 57, 166, 167, 309, 312], "cannot": [42, 295, 297, 300, 310, 316, 321, 1702], "least": [42, 95, 96, 296, 300, 302, 307, 312], "approv": 42, "hash": [42, 319], "cancel": 42, "speedup": 42, "button": 42, "unavail": 42, "tickbox": 42, "lower": [42, 54, 55, 60, 61, 133, 134, 141, 142, 302, 310, 312, 314, 316, 333, 1685, 1692, 1693, 1694, 1696, 1697, 1702, 1703], "span": [42, 314, 1694, 1702], "intent": [42, 309], "larg": [42, 319, 1696], "discourag": 42, "philosophi": 42, "increment": [42, 125, 126, 313, 1696], "valuabl": 42, "infrequ": 42, "earli": [42, 1686, 1696], "wast": 42, "spot": [42, 302, 307], "mistak": [42, 305], "propos": [42, 310, 314, 1696], "mountain": 42, "around": [42, 158, 159, 296, 306, 307, 310, 313, 318, 333, 1685, 1694, 1696, 1703], "advoc": [42, 333], "style": [42, 1696], "were": [42, 158, 159, 166, 167, 300, 305, 312, 313, 314, 316, 1696, 1697, 1702], "actual": [42, 294, 307, 309, 312, 314, 315, 320, 333, 1697, 1702], "aim": [42, 295, 312, 315, 1694, 1696, 1699], "session": [42, 1696], "smaller": [42, 137, 138, 316], "exact": [42, 156, 157, 158, 159, 295, 302, 316], "beauti": 42, "particularli": [42, 319, 333, 1694], "concern": [42, 294, 298, 302, 309, 314, 315, 1702], "difficult": [42, 295, 300, 312, 333], "undo": 42, "stress": 42, "frequenc": [42, 125, 126, 299], "advantag": [42, 309, 310, 1696], "nifti": 42, "reassur": 42, "isol": [42, 1697, 1702], "fact": [42, 310, 312, 316, 319], "local_path_to_ivi": 42, "overwrit": [42, 158, 159, 309, 310, 316], "subfold": [42, 311, 312, 313], "wide": [42, 312, 1694, 1696], "dep": 42, "fresh": 42, "arsen": 42, "declar": 42, "exec": 42, "rf": 42, "cp": 42, "ivy_contain": 42, "test_imag": 42, "test_random_crop": 42, "test_creation_funct": 42, "test_arang": 42, "variou": [42, 295, 300, 303, 304, 306, 308, 311, 312, 332, 1685, 1692, 1694, 1695, 1696, 1699, 1702], "cpu": [42, 54, 55, 58, 59, 141, 142, 168, 169, 301, 310, 333, 1694, 1696, 1699, 1701], "gpu": [42, 301, 318, 1694, 1696, 1699, 1700, 1701], "combin": [42, 158, 159, 296, 298, 300, 302, 307, 312, 314, 321, 1696], "num": [42, 164, 165, 306, 316], "integ": [42, 44, 47, 48, 60, 61, 113, 114, 137, 138, 141, 142, 149, 150, 151, 152, 158, 159, 298, 300, 308, 311, 312, 316, 318], "greater": [42, 44, 47, 48, 60, 61, 95, 96, 141, 142], "prompt": [42, 1686], "whole": 42, "multipli": [42, 60, 61, 149, 150, 296, 297, 298, 302], "cursor": 42, "alt": 42, "j": [42, 54, 55, 133, 134, 164, 165, 294, 1692], "blog": 42, "breakpoint": 42, "gutter": 42, "caret": 42, "f8": 42, "f9": 42, "Into": 42, "f7": 42, "smart": 42, "interest": 42, "consol": [42, 312, 318], "store": [42, 56, 57, 125, 126, 127, 128, 133, 134, 137, 138, 158, 159, 166, 167, 296, 297, 298, 303, 310, 316, 318, 319, 320, 1685], "variabl": [42, 125, 126, 127, 128, 139, 140, 158, 159, 297, 300, 303, 305, 306, 309, 312, 313, 316, 319, 320, 321, 333, 1686, 1697], "fragment": [42, 1692, 1694, 1698], "except": [42, 125, 126, 137, 138, 141, 142, 151, 152, 158, 159, 294, 295, 296, 300, 303, 305, 306, 309, 310, 314, 316, 318, 333], "pychram": 42, "depth": [42, 54, 55, 164, 165, 319, 320, 321, 332], "dummi": 42, "wherein": [42, 308, 312], "evalu": [42, 60, 61, 158, 159, 298, 300, 314, 1696], "failur": [42, 295, 299, 312], "arraywithactiv": [44, 45, 47, 48, 318], "arraywithcr": [44, 47, 48, 54, 318], "arraywithdatatyp": [44, 47, 48, 56, 318], "arraywithdevic": [44, 47, 48, 58, 318], "arraywithgener": [44, 47, 48, 125, 318], "arraywithgradi": [44, 47, 48, 127, 318], "arraywithimag": [44, 47, 48, 129, 318], "arraywithlay": [44, 47, 48, 131, 318], "arraywithlinearalgebra": [44, 47, 48, 133, 318], "arraywithloss": [44, 47, 48, 135, 318], "arraywithmanipul": [44, 47, 48, 137, 318], "arraywithnorm": [44, 47, 48, 139, 318], "arraywithrandom": [44, 47, 48, 141, 318], "arraywithsearch": [44, 47, 48, 143, 318], "arraywithset": [44, 47, 48, 145, 318], "arraywithsort": [44, 47, 48, 147, 318], "arraywithstatist": [44, 47, 48, 149, 318], "arraywithutil": [44, 47, 48, 151, 318], "arraywithactivationsextens": [44, 47, 48, 63], "arraywithconversionsextens": [44, 47, 48, 87], "arraywithcreationextens": [44, 47, 48, 89], "arraywithdata_typeextens": [44, 47, 48, 91], "arraywithdeviceextens": [44, 47, 48, 93], "arraywithelementwiseextens": [44, 47, 48, 95], "arraywithgeneralextens": [44, 47, 48, 97], "arraywithgradientsextens": [44, 47, 48, 99], "arraywithimageextens": [44, 47, 48, 101], "arraywithlayersextens": [44, 47, 48, 103], "arraywithlinalgextens": [44, 47, 48, 105], "arraywithlossesextens": [44, 47, 48, 107], "arraywithmanipulationextens": [44, 47, 48, 109], "arraywithnormsextens": [44, 47, 48, 111], "arraywithrandomextens": [44, 47, 48, 113], "arraywithsearchingextens": [44, 47, 48, 115], "arraywithsetextens": [44, 47, 48, 117], "arraywithsortingextens": [44, 47, 48, 119], "arraywithstatisticalextens": [44, 47, 48, 121], "arraywithutilityextens": [44, 47, 48, 123], "properti": [44, 47, 48, 158, 159, 298, 302, 307, 311, 312, 318, 319, 320, 1702], "transpos": [44, 47, 48, 133, 134, 158, 159, 309, 318, 321, 1686], "ret": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 303, 309, 310, 311, 313, 316, 321], "dimension": [44, 47, 48, 95, 96, 133, 134, 137, 138, 143, 144, 149, 150, 151, 152, 158, 159, 316, 1693, 1696, 1703], "whose": [44, 47, 48, 54, 55, 60, 61, 95, 96, 109, 110, 125, 126, 133, 134, 137, 138, 145, 146, 164, 165, 303, 312], "dimens": [44, 47, 48, 54, 55, 103, 104, 109, 110, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 164, 165, 302, 304, 311, 312, 314, 316, 319], "ax": [44, 45, 46, 47, 48, 109, 110, 121, 122, 133, 134, 137, 138, 143, 144, 149, 150, 151, 152, 156, 157, 300, 302, 312, 313, 316, 318], "permut": [44, 47, 48], "__add__": [44, 47, 48, 296, 298, 302, 303, 306, 310, 318], "variant": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 302, 303, 314], "wrap": [44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 321, 333, 1685, 1692, 1696, 1697, 1702, 1703], "minim": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 105, 106, 109, 110, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 303, 309, 311, 314, 316, 1694, 1702], "input": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 295, 296, 297, 298, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 333, 1697, 1700], "numer": [44, 47, 48, 56, 57, 60, 61, 125, 126, 133, 134, 141, 142, 143, 144, 166, 167, 300, 308, 310, 311, 312, 313, 314, 316, 320, 1693, 1696, 1702], "broadcast": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 298, 300, 302, 303, 312, 313, 316], "element": [44, 45, 46, 47, 48, 54, 55, 60, 61, 95, 96, 109, 110, 121, 122, 125, 126, 133, 134, 137, 138, 141, 142, 143, 144, 145, 146, 149, 150, 156, 157, 158, 159, 164, 165, 303, 311, 312, 314, 316, 1700], "wise": [44, 45, 46, 47, 48, 60, 61, 95, 96, 109, 110, 133, 134, 156, 157, 314], "sum": [44, 47, 48, 60, 61, 125, 126, 133, 134, 135, 136, 149, 150, 158, 159, 298, 300, 307, 309, 316], "promot": [44, 47, 48, 56, 57, 60, 61, 95, 96, 133, 134, 166, 167, 295, 303, 304, 307], "y": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 109, 110, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 164, 165, 166, 167, 168, 169, 297, 298, 302, 310, 311, 313, 314, 316, 318], "z": [44, 47, 48, 60, 61, 125, 126, 133, 134, 135, 136, 141, 142, 297, 298, 302, 316, 318], "__le__": [44, 47, 48], "equal": [44, 47, 48, 54, 55, 56, 57, 60, 61, 125, 126, 133, 134, 137, 138, 141, 142, 147, 148, 149, 150, 158, 159, 166, 167, 298, 300, 302, 304], "bool": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 121, 122, 125, 126, 127, 128, 133, 134, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 300, 302, 304, 309, 310, 312, 313, 316, 321], "fals": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 121, 122, 125, 126, 127, 128, 133, 134, 137, 138, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 297, 300, 302, 304, 309, 310, 311, 312, 316, 319, 320, 321], "true": [44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 292, 293, 298, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 314, 316, 319, 320, 321], "__radd__": [44, 47, 48, 302, 303, 310], "__rrshift__": [44, 47, 48], "bitwise_right_shift": [44, 47, 48, 60, 61], "x1": [44, 47, 48, 56, 57, 60, 61, 95, 96, 109, 110, 133, 134, 143, 144, 166, 167, 295, 300, 302, 304, 306, 310], "32": [44, 47, 48, 60, 61, 95, 96, 141, 142, 319, 1701], "__rshift__": [44, 47, 48], "__rsub__": [44, 47, 48], "subtract": [44, 47, 48, 60, 61, 296, 298, 302], "__sub__": [44, 47, 48, 296, 298, 302, 306, 318], "nativearrai": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 296, 298, 302, 304, 305, 306, 307, 308, 309, 310, 313, 316, 318, 1685], "nativ": [44, 47, 48, 49, 51, 52, 53, 54, 55, 125, 126, 162, 163, 300, 304, 308, 309, 310, 311, 312, 316, 318, 319, 1685, 1694, 1703], "resid": [44, 47, 48, 310, 316, 320], "dtype": [44, 47, 48, 54, 55, 56, 57, 113, 114, 131, 132, 133, 134, 141, 142, 143, 144, 149, 150, 164, 165, 166, 167, 295, 297, 300, 301, 302, 305, 307, 308, 310, 311, 312, 313, 316, 318, 1686], "mt": [44, 47, 48, 318], "matric": [44, 47, 48, 54, 55, 133, 134, 332, 1696], "n": [44, 47, 48, 54, 55, 95, 96, 113, 114, 133, 134, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 294, 312], "ndim": [44, 47, 48, 143, 144, 298, 312], "int": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 164, 165, 166, 167, 168, 169, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 316, 321], "size": [44, 47, 48, 103, 104, 113, 114, 119, 120, 121, 122, 125, 126, 133, 134, 137, 138, 141, 142, 143, 144, 158, 159, 311, 312, 319], "overview": [44, 155, 312, 315, 332, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "forum": [44, 155, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 403, 439, 441, 442, 524, 615, 649, 970, 971, 1165, 1217, 1283, 1415, 1431, 1512, 1516, 1534, 1539, 1566, 1613, 1629, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1708, 1710, 1720, 1732, 1734, 1736, 1742], "abc": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 318], "gelu": [45, 46, 156, 157], "approxim": [45, 46, 95, 96, 133, 134, 156, 157, 303, 310], "185": [45, 46, 156, 157], "046": [45, 46, 156, 157], "leaky_relu": [45, 46, 156, 157, 311, 1686], "alpha": [45, 46, 60, 61, 113, 114, 156, 157, 310, 311], "39": [45, 46, 60, 61, 141, 142, 156, 157], "85": [45, 46, 141, 142, 156, 157], "17": [45, 46, 103, 104, 156, 157, 298, 302, 312], "log_softmax": [45, 46, 156, 157], "axi": [45, 46, 54, 55, 95, 96, 109, 110, 121, 122, 125, 126, 133, 134, 135, 136, 137, 138, 143, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 164, 165, 298, 300, 302, 304, 306, 307, 309, 310, 312, 314, 316, 318, 321, 332], "98": [45, 46, 127, 128, 141, 142, 156, 157], "37": [45, 46, 60, 61, 156, 157], "35": [45, 46, 131, 132, 156, 157], "0719": [45, 46, 156, 157], "62": [45, 46, 156, 157], "221": [45, 46], "82": [45, 46, 60, 61], "relu": [45, 46, 153, 154, 156, 157, 311, 319, 320, 1686], "sigmoid": [45, 46, 156, 157, 316, 319, 320, 1686], "269": [45, 46, 156, 157], "731": [45, 46, 156, 157], "881": [45, 46, 60, 61, 156, 157], "softmax": [45, 46, 153, 154, 156, 157, 1686], "union": [45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 103, 104, 109, 110, 113, 114, 121, 122, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 296, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 313, 314, 316, 321], "422": [45, 46, 156, 157], "155": [45, 46, 156, 157], "softplu": [45, 46, 156, 157, 314, 1686], "beta": [45, 46, 139, 140, 156, 157, 314], "threshold": [45, 46, 60, 61, 156, 157, 314], "3461": [45, 46, 156, 157], "6491": [45, 46, 156, 157], "22": [45, 46, 60, 61, 103, 104, 125, 126, 141, 142, 149, 150, 156, 157, 298], "09": [45, 46], "31": [45, 46, 60, 61, 319], "55": [45, 46], "13": [45, 46, 60, 61, 103, 104, 131, 132, 141, 142, 149, 150, 298, 302, 312], "collect": [49, 158, 159, 162, 304, 311, 312, 332, 1694, 1696, 1699], "args_to_ivi": 49, "include_deriv": [49, 50, 51, 52, 53, 162, 163], "kwarg": [49, 50, 51, 103, 104, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 304, 310, 316, 320], "nest": [49, 50, 51, 52, 53, 158, 159, 162, 163, 296, 298, 307, 313, 319, 320, 333, 1685, 1696], "otherwis": [49, 50, 51, 52, 53, 56, 57, 60, 61, 125, 126, 127, 128, 133, 134, 137, 138, 143, 144, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 296, 298, 299, 300, 301, 302, 312, 316], "unchang": [49, 50, 51, 52, 53], "dict": [49, 50, 51, 52, 53, 125, 126, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 305, 319, 320, 1685], "deriv": [49, 50, 51, 52, 53, 54, 55, 127, 128, 162, 163, 164, 165, 300, 301, 318, 320], "tupl": [49, 50, 51, 52, 53, 54, 55, 56, 57, 95, 96, 103, 104, 109, 110, 113, 114, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 300, 305, 306, 311, 312, 316, 319, 320, 333], "str": [49, 50, 51, 103, 104, 125, 126, 131, 132, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 300, 301, 304, 305, 310, 313, 316, 321], "kei": [49, 50, 51, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 305, 311, 312, 319, 1696, 1699, 1703], "word": [49, 50, 51, 298, 310, 1685], "args_to_n": [49, 309], "cont_inplac": [49, 51, 53], "ignore_frontend_arrai": [49, 51], "to_ivi": [49, 162, 163], "leaf": [49, 52, 158, 159, 298, 307, 319], "travers": [49, 52, 53, 162, 163, 298, 300, 316], "lowest": [49, 52, 53, 141, 142, 162, 163, 307, 333, 1685, 1693, 1697, 1701], "to_n": [49, 162, 163, 316], "asarrai": [54, 55, 125, 126, 308, 309], "boolean": [54, 55, 56, 57, 60, 61, 125, 126, 127, 128, 137, 138, 143, 144, 158, 159, 166, 167, 298, 310, 311, 312, 314], "nativedtyp": [54, 55, 56, 57, 113, 114, 141, 142, 143, 144, 149, 150, 164, 165, 300, 301, 306, 310, 313, 316], "datatyp": [54, 55, 158, 159], "infer": [54, 55, 125, 126, 137, 138, 164, 165, 294, 297, 300, 301, 308, 316, 321, 1694, 1695, 1698, 1700], "nativedevic": [54, 55, 58, 59, 141, 142, 164, 165, 168, 169, 300, 301, 304, 306, 313], "interpret": [54, 55, 299, 1697], "copy_arrai": [54, 55], "empty_lik": [54, 55, 164, 165, 314], "deafult": [54, 55, 143, 144], "uniniti": [54, 55], "from_dlpack": [54, 55, 164, 165], "full_lik": [54, 55, 164, 165, 313], "fill_valu": [54, 55, 143, 144, 164, 165, 300, 311, 313], "float": [54, 55, 56, 57, 60, 61, 95, 96, 113, 114, 125, 126, 127, 128, 133, 134, 135, 136, 139, 140, 141, 142, 149, 150, 156, 157, 164, 165, 166, 167, 295, 298, 300, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 316, 318, 320], "scalar": [54, 55, 60, 61, 95, 96, 109, 110, 125, 126, 156, 157, 164, 165, 300, 333, 1696], "fill": [54, 55, 141, 142, 143, 144, 158, 159, 164, 165, 311], "000123": [54, 55], "ones": [54, 55, 127, 128, 141, 142, 158, 159, 164, 165, 302, 306, 312, 318, 319, 1686, 1696], "meshgrid": [54, 55, 164, 165], "spars": [54, 55, 135, 136, 164, 165], "xy": [54, 55, 164, 165], "native_arrai": [54, 55, 56, 57, 60, 61, 137, 138, 164, 165, 168, 169, 308, 311, 312], "one_hot": [54, 55, 164, 165, 321, 1686], "on_valu": [54, 55, 164, 165], "off_valu": [54, 55, 164, 165], "scatter": [54, 55, 125, 126, 164, 165, 314, 1703], "hot": [54, 55, 164, 165], "float32": [54, 55, 56, 57, 131, 132, 164, 165, 166, 167, 300, 302, 312], "cuda": [54, 55, 141, 142, 316, 333, 1685, 1701], "unless": [54, 55, 133, 134, 164, 165, 297, 301, 309, 333], "overrid": [54, 55, 164, 165], "ones_lik": [54, 55, 164, 165, 297, 321, 1686], "tril": [54, 55, 164, 165], "k": [54, 55, 105, 106, 109, 110, 113, 114, 131, 132, 133, 134, 141, 142, 164, 165, 294, 295, 310, 316, 1692, 1696], "innermost": [54, 55, 133, 134], "mxn": [54, 55, 133, 134], "diagon": [54, 55, 133, 134], "triangular": [54, 55, 133, 134], "triu": [54, 55, 164, 165], "upper": [54, 55, 133, 134, 141, 142, 309, 312], "zeros_lik": [54, 55, 164, 165, 310, 314, 1686], "creation": [55, 90, 158, 159, 165, 300, 301, 304, 306, 308, 311, 312, 313, 316, 1696, 1698, 1702], "data_typ": [56, 57, 91, 92, 166, 167, 300, 312, 313], "astyp": [56, 57, 131, 132, 166, 167, 300, 309, 310, 314], "irrespect": [56, 57, 166, 167, 298, 309, 318, 1703], "rule": [56, 57, 95, 96, 133, 134, 166, 167, 295, 296, 298, 300, 302, 305, 306, 307, 312, 314, 1697], "cast": [56, 57, 166, 167, 300, 307, 311, 316, 1686], "nan": [56, 57, 60, 61, 95, 96, 125, 126, 149, 150, 166, 167, 295, 300, 303, 312, 313], "infin": [56, 57, 60, 61, 125, 126, 166, 167, 295, 303], "non": [56, 57, 133, 134, 141, 142, 143, 144, 149, 150, 151, 152, 166, 167, 298, 300, 302, 308, 316, 1696], "float64": [56, 57, 141, 142, 149, 150, 166, 167, 300, 312], "broadcast_arrai": [56, 57, 166, 167], "arbitrari": [56, 57, 158, 159, 166, 167, 298, 306, 307, 309, 310, 312, 320, 333, 1697, 1702], "x2": [56, 57, 60, 61, 95, 96, 109, 110, 125, 126, 133, 134, 143, 144, 166, 167, 295, 300, 302, 304, 306, 310], "x3": [56, 57], "mix": [56, 57, 60, 61, 166, 167, 294, 302, 309, 312, 314, 316, 1685, 1696, 1700, 1702], "broadcast_to": [56, 57, 166, 167, 300], "can_cast": [56, 57, 166, 167, 300, 307, 310], "occur": [56, 57, 145, 146, 166, 167, 295], "as_n": [56, 57, 58, 59, 166, 167, 168, 169, 300], "int32": [56, 57, 141, 142, 143, 144, 149, 150, 166, 167, 300, 312, 316], "finfo": [56, 57, 166, 167, 312], "iinfo": [56, 57, 166, 167, 305], "119": [56, 57], "122": [56, 57], "int8": [56, 57, 141, 142, 300, 312], "min": [56, 57, 125, 126, 149, 150, 166, 167], "128": [56, 57, 95, 96, 131, 132], "max": [56, 57, 103, 104, 125, 126, 133, 134, 149, 150, 166, 167, 312], "127": [56, 57, 95, 96], "is_bool_dtyp": [56, 57, 166, 167], "is_float_dtyp": [56, 57, 166, 167, 313], "is_int_dtyp": [56, 57, 166, 167, 311, 313], "is_uint_dtyp": [56, 57, 166, 167, 311, 313], "result_typ": [56, 57, 166, 167, 300], "arrays_and_dtyp": [56, 57, 166, 167], "to_devic": [58, 59, 168, 169], "stream": [58, 59, 168, 169, 1700], "ab": [60, 61, 300, 308, 310, 312, 1686], "aco": [60, 61, 1686], "real": [60, 61, 298, 1698], "invers": [60, 61, 300, 332], "cosin": [60, 61], "57": [60, 61], "69": [60, 61, 312, 319], "acosh": [60, 61, 1686], "hyperbol": [60, 61], "99": [60, 61, 127, 128], "asin": [60, 61, 1686], "sine": [60, 61], "927": [60, 61], "asinh": [60, 61, 1686], "atan": [60, 61, 1686], "tangent": [60, 61, 303], "785": [60, 61], "464": [60, 61], "atan2": [60, 61, 1686], "coordin": [60, 61, 143, 144], "quotient": [60, 61], "245": [60, 61], "atanh": [60, 61, 1686], "549": [60, 61], "47": [60, 61, 103, 104, 141, 142], "bitwise_and": [60, 61], "11": [60, 61, 103, 104, 125, 126, 131, 132, 133, 134, 141, 142, 149, 150, 298, 300, 302, 312, 313], "bitwise_invert": [60, 61], "bitiwse_invert": [60, 61], "bitwise_left_shift": [60, 61], "bitwise_or": [60, 61], "bitwise_xor": [60, 61], "89": [60, 61, 141, 142, 166, 167], "51": [60, 61], "18": [60, 61, 103, 104, 141, 142, 298, 302], "19": [60, 61, 103, 104, 141, 142, 302], "26": [60, 61, 139, 140, 141, 142], "27": [60, 61, 95, 96, 133, 134, 141, 142], "23": [60, 61, 103, 104, 141, 142, 164, 165, 312, 316], "20": [60, 61, 103, 104, 131, 132, 141, 142, 149, 150, 314, 318], "74": [60, 61], "41": [60, 61, 103, 104], "59": [60, 61], "24": [60, 61, 103, 104, 133, 134, 149, 150, 319], "ceil": [60, 61, 1686], "express": [60, 61, 95, 96, 303, 305, 310, 316, 321, 1696, 1697], "radian": [60, 61, 95, 96, 303], "54": [60, 61, 131, 132, 302], "416": [60, 61], "cosh": [60, 61, 1686], "angl": [60, 61, 332], "76": [60, 61, 166, 167], "03": [60, 61], "81": [60, 61, 166, 167, 312], "deg2rad": [60, 61], "degre": [60, 61, 109, 110, 149, 150, 1695], "180": [60, 61], "270": [60, 61], "360": [60, 61], "71": [60, 61], "28": [60, 61, 139, 140], "divid": [60, 61, 125, 126, 137, 138, 158, 159, 296, 298, 302], "dividend": [60, 61], "divisor": [60, 61, 127, 128, 149, 150], "375": [60, 61], "erf": [60, 61], "exponenti": [60, 61], "gauss": [60, 61], "exp": [60, 61, 1686], "expm1": [60, 61, 300], "244": [60, 61], "918": [60, 61], "48": [60, 61, 103, 104], "147": [60, 61], "floor": [60, 61, 1686], "floor_divid": [60, 61], "greater_equ": [60, 61], "isfinit": [60, 61, 310], "out_i": [60, 61], "self_i": [60, 61], "finit": [60, 61], "inf": [60, 61, 125, 126, 133, 134, 300, 312], "isinf": [60, 61], "neg": [60, 61, 133, 134, 137, 138, 141, 142, 151, 152, 156, 157, 298, 307, 309], "isnan": [60, 61], "isreal": [60, 61], "1j": [60, 61], "5j": [60, 61], "6j": [60, 61], "less_equ": [60, 61, 304], "61": [60, 61], "log10": [60, 61], "logarithm": [60, 61], "602": [60, 61], "699": [60, 61], "log1p": [60, 61], "693": [60, 61], "001": [60, 61, 139, 140, 319, 320], "0953": [60, 61], "log2": [60, 61], "logaddexp": [60, 61], "05": [60, 61, 127, 128, 139, 140, 149, 150, 311, 312], "logical_and": [60, 61, 310, 314, 1686, 1703], "logical_not": [60, 61, 300, 1686], "logical_or": [60, 61, 1686, 1703], "conform": [60, 61, 303], "org": [60, 61, 303], "api_specif": [60, 61, 303], "elementwise_funct": [60, 61, 303], "noqa": [60, 61], "simplic": [60, 61, 303, 314, 320, 332], "nestabl": [60, 61, 294, 302, 303, 309, 312, 1685], "logical_xor": [60, 61], "use_wher": [60, 61], "formula": [60, 61], "clip": [60, 61, 137, 138, 298, 307, 309, 319, 321, 1686], "minimum": [60, 61, 125, 126, 137, 138, 143, 144, 1686, 1693, 1699, 1703], "exce": [60, 61], "arguement": [60, 61], "condit": [60, 61, 143, 144, 295, 300, 302, 304, 309, 312, 332], "boradcastbl": [60, 61], "thatth": [60, 61], "30": [60, 61], "56": [60, 61, 131, 132, 141, 142, 302], "21": [60, 61, 95, 96, 103, 104, 125, 126, 141, 142], "not_equ": [60, 61], "pow": [60, 61, 295], "expon": [60, 61, 95, 96, 125, 126], "rad2deg": [60, 61], "286": [60, 61], "458": [60, 61], "573": [60, 61], "reciproc": [60, 61], "remaind": [60, 61, 95, 96, 137, 138, 158, 159], "modulu": [60, 61], "x2_i": [60, 61, 295], "94": [60, 61, 127, 128, 141, 142], "256": [60, 61], "0001": [60, 61], "36": [60, 61, 131, 132], "67": [60, 61, 125, 126], "45": [60, 61], "678": [60, 61], "25": [60, 61, 125, 126, 133, 134, 135, 136, 141, 142, 149, 150, 156, 157, 298], "33": [60, 61, 141, 142, 149, 150], "sin": [60, 61, 125, 126, 296, 316, 1686], "841": [60, 61], "909": [60, 61], "141": [60, 61], "sinh": [60, 61, 1686], "63": [60, 61, 156, 157], "232": [60, 61], "sqrt": [60, 61], "squar": [60, 61, 133, 134], "tan": [60, 61, 298, 303, 306, 307, 309, 310, 316, 1686], "tanh": [60, 61, 316, 1686], "762": [60, 61], "964": [60, 61], "trunc": [60, 61], "trunc_divid": [60, 61], "elementwis": [61, 96, 139, 140, 307, 313, 316], "exp2": [95, 96], "power": [95, 96, 125, 126, 133, 134, 312, 318, 319, 320, 1696, 1698, 1702], "float_pow": [95, 96], "125": [95, 96, 133, 134], "fmax": [95, 96], "fmod": [95, 96], "divis": [95, 96, 125, 126, 127, 128, 307], "lcm": [95, 96], "60": [95, 96], "637": [95, 96], "212": [95, 96, 131, 132], "0909": [95, 96], "trapz": [95, 96], "dx": [95, 96], "sampl": [95, 96, 113, 114, 141, 142, 149, 150, 308, 311, 312], "evenli": [95, 96, 137, 138, 158, 159], "apart": [95, 96], "trapezoid": [95, 96], "gradient": [100, 128, 313, 319, 320, 332, 333, 1686, 1696], "flatten": [103, 104, 121, 122, 125, 126, 137, 138, 143, 144, 145, 146], "start_dim": [103, 104], "end_dim": [103, 104], "dim": [103, 104, 158, 159, 164, 165, 300, 311, 314], "max_pool1d": [103, 104], "kernel": [103, 104, 131, 132, 314, 316, 333, 1696, 1699, 1700], "stride": [103, 104, 131, 132, 1696], "pad": [103, 104, 131, 132], "data_format": [103, 104, 131, 132], "nhwc": [103, 104, 131, 132], "batch_siz": [103, 104, 131, 132, 141, 142, 319], "w": [103, 104, 127, 128, 131, 132, 158, 159, 316, 319, 320], "d_in": [103, 104, 131, 132], "slide": [103, 104, 131, 132], "algorithm": [103, 104, 131, 132, 156, 157, 300, 310, 314, 333, 1696, 1698, 1700], "nwc": [103, 104, 131, 132], "ncw": [103, 104, 131, 132], "pool": [103, 104], "arang": [103, 104, 133, 134, 300, 1686, 1703], "reshap": [103, 104, 133, 134, 137, 138, 158, 159, 309, 310, 312, 316, 318, 321, 1686], "max_pool2d": [103, 104], "h": [103, 104, 131, 132, 294, 298, 1692], "nchw": [103, 104, 131, 132], "40": [103, 104, 125, 126], "46": [103, 104, 141, 142], "pad_width": [103, 104, 137, 138], "constant": [103, 104, 139, 140, 307, 313, 320, 321, 333], "stat_length": [103, 104], "constant_valu": [103, 104], "end_valu": [103, 104], "reflect_typ": [103, 104], "linear_algebra": [105, 106, 133, 134, 313], "diagflat": [105, 106], "loss": [108, 136, 300, 307, 310, 313, 319, 320, 321, 1686, 1696, 1703], "flipud": [109, 110], "flip": [109, 110, 137, 138, 310, 318, 319, 321, 1686], "diag": [109, 110, 133, 134, 316], "heavisid": [109, 110], "0000": [109, 110], "5000": [109, 110], "hstack": [109, 110], "vstack": [109, 110], "moveaxi": [109, 110], "destin": [109, 110], "unstack": [109, 110, 137, 138, 158, 159, 298, 316, 319, 1686, 1703], "reorder": [109, 110, 137, 138], "rot90": [109, 110], "rotat": [109, 110, 332], "plane": [109, 110], "norm": [112, 125, 126, 133, 134, 140, 313, 1686], "dirichlet": [113, 114], "seed": [113, 114, 141, 142, 158, 159, 1686], "shuffl": [113, 114, 141, 142, 158, 159, 1686], "length": [113, 114, 137, 138, 158, 159, 305, 312, 319], "nativeshap": [113, 114, 137, 138, 141, 142], "drawn": [113, 114, 141, 142, 312], "vector": [113, 114, 125, 126, 131, 132, 133, 134, 332, 1696], "10598304": [113, 114], "21537054": [113, 114], "67864642": [113, 114], "48006698": [113, 114], "07472073": [113, 114], "44521229": [113, 114], "55479872": [113, 114], "05426367": [113, 114], "39093761": [113, 114], "19531053": [113, 114], "51675832": [113, 114], "28793114": [113, 114], "12315625": [113, 114], "29823365": [113, 114], "5786101": [113, 114], "15564976": [113, 114], "50542368": [113, 114], "33892656": [113, 114], "1325352": [113, 114], "44439589": [113, 114], "42306891": [113, 114], "msort": [119, 120], "randint": [119, 120, 131, 132, 141, 142, 300, 1686], "median": [121, 122, 310], "keepdim": [121, 122, 133, 134, 137, 138, 143, 144, 149, 150, 151, 152, 158, 159, 304, 310, 316], "reduc": [121, 122, 125, 126, 133, 134, 143, 144, 149, 150, 151, 152, 158, 159, 304, 310, 314, 316, 318, 1694, 1698, 1699, 1700], "all_equ": [125, 126], "equality_matrix": [125, 126], "compar": [125, 126, 147, 148, 158, 159, 297, 302, 305, 311, 312, 319, 1692, 1694, 1696, 1702, 1703], "array_equ": [125, 126], "assert_supports_inplac": [125, 126], "clip_matrix_norm": [125, 126], "max_norm": [125, 126], "downscal": [125, 126], "894": [125, 126], "79": [125, 126], "clip_vector_norm": [125, 126], "default_v": [125, 126], "catch_except": [125, 126], "rev": [125, 126], "with_cal": [125, 126], "catch": [125, 126, 312], "callabl": [125, 126, 298, 304, 310, 312, 316], "einops_rearrang": [125, 126], "axes_length": [125, 126], "arrang": [125, 126], "rearrang": [125, 126], "einops_reduc": [125, 126], "reduct": [125, 126, 135, 136, 151, 152, 158, 159, 300, 312, 318, 1686], "One": [125, 126, 137, 138, 141, 142, 300, 302, 311, 312, 316, 318, 319], "prod": [125, 126, 149, 150, 300, 302, 316], "einops_repeat": [125, 126], "fourier_encod": [125, 126], "max_freq": [125, 126], "num_band": [125, 126], "linear": [125, 126, 131, 132, 156, 157, 303, 310, 312, 314, 316, 319, 320, 321, 1686, 1694, 1695, 1696, 1699], "concat": [125, 126, 137, 138, 158, 159, 311, 314, 316, 1686], "band": [125, 126], "linearli": [125, 126], "oppos": [125, 126, 300], "geometr": [125, 126], "concaten": [125, 126, 137, 138, 311, 314, 316, 319, 1686], "seper": [125, 126, 302], "batch": [125, 126, 158, 159, 298, 307, 319, 1694], "expand": [125, 126, 137, 138, 298], "gather": [125, 126, 1703], "batch_dim": [125, 126], "gather_nd": [125, 126, 1686], "get_num_dim": [125, 126, 1686], "as_arrai": [125, 126], "has_nan": [125, 126], "include_inf": [125, 126], "inplace_decr": [125, 126], "val": [125, 126, 158, 159, 309, 318], "decrement": [125, 126], "inplace_incr": [125, 126], "inplace_upd": [125, 126, 309], "ensure_in_backend": [125, 126, 309], "inplac": [125, 126, 127, 128, 158, 159, 294, 296, 302, 306, 308, 311, 314, 318, 320], "is_arrai": [125, 126, 310], "exclus": [125, 126, 127, 128, 149, 150, 158, 159, 298, 300, 307, 310, 313, 321, 1700, 1702], "trace": [125, 126, 133, 134, 158, 159, 295, 300, 316, 333, 1685, 1697, 1702], "is_ivy_arrai": [125, 126, 309, 318], "is_ivy_contain": [125, 126], "is_native_arrai": [125, 126, 318], "scatter_flat": [125, 126], "occupi": [125, 126], "hold": [125, 126, 133, 134, 149, 150, 319, 1697], "scatter_nd": [125, 126, 314, 318, 1686], "arr": [125, 126, 166, 167, 300, 301], "stable_divid": [125, 126, 307], "denomin": [125, 126, 139, 140, 307, 333, 1693], "min_denomin": [125, 126], "global": [125, 126, 139, 140, 158, 159, 297, 300, 301, 304, 307, 310, 316, 1696], "_min_denomin": [125, 126], "stable_pow": [125, 126], "min_bas": [125, 126], "_min_bas": [125, 126, 139, 140], "supports_inplace_upd": [125, 126], "supports_inplac": [125, 126], "to_list": [125, 126, 1686], "represent": [125, 126, 158, 159, 332, 1694, 1695, 1697, 1701, 1702], "to_numpi": [125, 126, 319, 1686], "to_scalar": [125, 126], "value_is_nan": [125, 126], "92": [125, 126], "adam_step": [127, 128], "mw": [127, 128, 320], "vw": [127, 128, 320], "beta1": [127, 128, 320], "beta2": [127, 128, 320], "999": [127, 128, 320], "epsilon": [127, 128, 133, 134, 135, 136, 139, 140, 298, 307, 309, 320], "1e": [127, 128, 135, 136, 139, 140, 298, 307, 309, 311, 320, 321, 1686], "07": [127, 128, 135, 136, 320], "cost": [127, 128, 314, 1694], "weight": [127, 128, 131, 132, 139, 140, 298, 307, 316, 320, 321, 1695], "dc": [127, 128], "dw": [127, 128], "averag": [127, 128], "forget": [127, 128, 300], "adam": [127, 128, 319, 320, 321, 1686, 1696], "delta": [127, 128], "dcdw": [127, 128], "adam_step_delta": [127, 128], "182": [127, 128], "adam_upd": [127, 128, 320], "lr": [127, 128, 319, 320], "mw_tm1": [127, 128], "vw_tm1": [127, 128], "stop_gradi": [127, 128, 320, 1686], "rate": [127, 128], "stop": [127, 128, 164, 165, 306, 314, 316, 333, 1696], "ws_new": [127, 128], "gradient_descent_upd": [127, 128, 1686], "handl": [127, 128, 158, 159, 294, 298, 300, 301, 306, 307, 308, 309, 310, 311, 312, 314, 320, 1693, 1703], "higher": [127, 128, 315, 316, 321, 333, 1693, 1696, 1697, 1700, 1702, 1703], "descent": [127, 128, 320, 1696], "new_weight": [127, 128, 319], "95": [127, 128, 141, 142], "97": [127, 128], "96": [127, 128], "is_vari": [127, 128, 309], "trainabl": [127, 128, 303, 317, 319, 320], "is_var": [127, 128], "lamb_upd": [127, 128], "max_trust_ratio": [127, 128], "decay_lambda": [127, 128], "trust": [127, 128], "ratio": [127, 128], "decai": [127, 128], "lamb": [127, 128, 320], "784": [127, 128], "78": [127, 128], "02": [127, 128, 139, 140, 141, 142], "5e": [127, 128], "04": [127, 128, 311, 312], "0e": [127, 128], "lars_upd": [127, 128], "lar": [127, 128, 320], "optimizer_upd": [127, 128], "effective_grad": [127, 128], "3e": [127, 128], "preserve_typ": [127, 128], "preserv": [127, 128, 158, 159, 312, 321, 333], "variable_data": [127, 128], "intern": [127, 128, 158, 159, 296, 298, 301, 303, 309], "conv1d": [131, 132], "dilat": [131, 132], "convolut": [131, 132, 1694, 1696], "fw": [131, 132, 311, 312], "d_out": [131, 132], "wio": [131, 132], "conv1d_transpos": [131, 132], "output_shap": [131, 132], "conv2d": [131, 132, 1686], "fh": [131, 132], "hwio": [131, 132], "conv3d": [131, 132], "ndhwc": [131, 132], "conv3d_transpos": [131, 132], "depthwise_conv2d": [131, 132, 1686], "255": [131, 132], "random_norm": [131, 132, 141, 142], "std": [131, 132, 141, 142, 149, 150, 302], "dropout": [131, 132, 319], "prob": [131, 132], "scale": [131, 132, 1696, 1698], "bia": [131, 132, 139, 140, 316, 320], "transform": [131, 132, 321, 332, 1685, 1694, 1696, 1697, 1698], "outer_batch_shap": [131, 132], "inner_batch_shap": [131, 132], "in_featur": [131, 132], "out_featur": [131, 132], "84": [131, 132], "133": [131, 132], "134": [131, 132], "lstm_updat": [131, 132, 316], "init_h": [131, 132, 316], "init_c": [131, 132, 316], "recurrent_kernel": [131, 132, 316], "recurrent_bia": [131, 132, 316], "multi_head_attent": [131, 132, 309], "num_head": [131, 132], "mask": [131, 132, 314], "to_q_fn": [131, 132], "to_kv_fn": [131, 132], "to_out_fn": [131, 132, 309], "to_q_v": [131, 132], "to_kv_v": [131, 132], "to_out_v": [131, 132], "scaled_dot_product_attent": [131, 132], "choleski": [133, 134, 309], "symmetr": [133, 134, 298], "625": [133, 134], "cross": [133, 134, 135, 136, 299, 1686], "vif": [133, 134], "det": [133, 134], "offset": [133, 134], "axis1": [133, 134, 137, 138], "axis2": [133, 134], "eigh": [133, 134], "eigvalsh": [133, 134], "inv": [133, 134, 1686], "adjoint": [133, 134], "matmul": [133, 134, 297, 312, 313, 316, 1686], "matrix_norm": [133, 134], "ord": [133, 134], "fro": [133, 134], "liter": [133, 134, 305], "nuc": [133, 134], "matrix_rank": [133, 134], "atol": [133, 134], "rtol": [133, 134, 311], "rank": [133, 134, 137, 138, 151, 152], "singular": [133, 134, 300], "toler": [133, 134, 295, 311, 1696], "small": [133, 134, 139, 140, 302, 307, 311, 314, 316, 320, 333, 1697], "largest_singular_valu": [133, 134], "equival": [133, 134, 309, 310, 314, 319, 321], "ep": [133, 134], "defici": [133, 134], "matrix_transpos": [133, 134, 318], "pinv": [133, 134, 1686], "0426": [133, 134], "0964": [133, 134], "0605": [133, 134], "1368": [133, 134], "qr": [133, 134], "slogdet": [133, 134], "namedtupl": [133, 134, 145, 146], "logabsdet": [133, 134], "6931472": [133, 134], "solv": [133, 134, 295, 310, 317, 332, 1698], "svd": [133, 134, 1686], "compute_uv": [133, 134], "full_matric": [133, 134], "svdval": [133, 134], "tensordot": [133, 134, 300], "vander": [133, 134], "vandermond": [133, 134], "column": [133, 134], "len": [133, 134, 298, 309, 310, 312, 318, 321], "vecdot": [133, 134], "vector_norm": [133, 134], "vector_to_skew_symmetric_matrix": [133, 134, 1686], "binary_cross_entropi": [135, 136], "pred": [135, 136, 298, 307, 309], "predict": [135, 136], "amount": [135, 136, 301, 311], "smooth": [135, 136], "binari": [135, 136], "entropi": [135, 136], "357": [135, 136], "223": [135, 136], "cross_entropi": [135, 136, 298, 307, 309], "3862944": [135, 136], "sparse_cross_entropi": [135, 136], "logit": [135, 136], "x_min": [137, 138, 321], "x_max": [137, 138, 321], "join": [137, 138, 158, 159, 304, 1686], "count": [137, 138, 145, 146, 151, 152, 298, 302, 319], "constant_pad": [137, 138], "expand_dim": [137, 138, 310, 316, 319, 1686], "permute_dim": [137, 138], "valueerror": [137, 138, 304], "reus": [137, 138, 304, 312, 1701], "memori": [137, 138, 300, 301, 309, 310, 314, 316, 331, 333, 1686, 1696, 1698, 1699, 1700], "buffer": [137, 138, 333], "roll": [137, 138, 298, 306], "larger": [137, 138, 149, 150, 312, 1703], "restor": [137, 138], "num_or_size_split": [137, 138, 158, 159, 316], "with_remaind": [137, 138, 158, 159], "entri": [137, 138, 158, 159, 1696], "squeez": [137, 138, 1686, 1696], "swapax": [137, 138], "axis0": [137, 138], "swap_ax": [137, 138], "tile": [137, 138, 1686], "rep": [137, 138], "unpack": [137, 138, 305, 311, 312], "zero_pad": [137, 138, 1686], "layer_norm": [139, 140], "normalized_idx": [139, 140], "new_std": [139, 140], "learnabl": [139, 140, 321], "gamma": [139, 140], "0976": [139, 140], "3452": [139, 140], "2740": [139, 140], "1047": [139, 140], "5886": [139, 140], "2732": [139, 140], "7696": [139, 140], "7024": [139, 140], "2518": [139, 140], "826": [139, 140], "178": [139, 140], "981": [139, 140], "831": [139, 140], "421": [139, 140], "multinomi": [141, 142], "population_s": [141, 142], "num_sampl": [141, 142], "unnorm": [141, 142, 312], "popul": [141, 142, 149, 150, 158, 159, 300, 301, 312, 316, 1702], "uniform": [141, 142, 320, 1703], "batch_shap": [141, 142, 164, 165, 314, 316, 318], "independ": [141, 142, 295, 300, 302, 308, 316, 321, 1694], "parameter": [141, 142], "highest": [141, 142], "low": [141, 142, 298, 310, 314, 316, 1692, 1694, 1696, 1697, 1698, 1700, 1702], "half": [141, 142, 314], "int16": [141, 142, 166, 167, 300, 312, 316], "int64": [141, 142, 143, 144, 147, 148, 166, 167, 300, 312, 316], "44": [141, 142], "72": [141, 142], "235": [141, 142], "float16": [141, 142, 300, 312], "49": [141, 142], "807": [141, 142], "42": [141, 142, 156, 157, 316, 321], "random_uniform": [141, 142, 301, 312, 320, 1686], "boundari": [141, 142, 1696], "86": [141, 142], "06": [141, 142, 312, 319], "53": [141, 142], "object": [141, 142, 158, 159, 162, 163, 168, 169, 298, 308, 310, 312, 318, 321, 1696, 1702], "argmax": [143, 144, 1686], "output_dtyp": [143, 144], "insert": [143, 144], "occurr": [143, 144], "argmin": [143, 144, 1686], "singleton": [143, 144, 149, 150, 151, 152, 316], "accordingli": [143, 144, 149, 150, 151, 152, 305, 310, 316], "argwher": [143, 144, 305], "nonzero": [143, 144], "as_tupl": [143, 144], "fewer": [143, 144], "yield": [143, 144, 299, 305], "unique_al": [145, 146], "unique_count": [145, 146], "field": [145, 146, 332, 1694, 1702], "unique_invers": [145, 146], "inverse_indic": [145, 146], "reconstruct": [145, 146], "unique_valu": [145, 146], "argsort": [147, 148], "descend": [147, 148], "ascend": [147, 148], "stabil": [147, 148, 300, 314], "searchsort": [147, 148], "sorter": [147, 148], "ret_dtyp": [147, 148], "cumprod": [149, 150, 310, 321], "cumul": [149, 150, 332], "exclud": [149, 150, 302, 316], "120": [149, 150], "cumsum": [149, 150, 300, 1686], "einsum": [149, 150], "equat": [149, 150, 1696], "arithmet": [149, 150, 310], "x_i": [149, 150, 303], "propag": [149, 150], "By": [149, 150, 151, 152, 300, 302, 307, 309, 310, 316, 320, 321], "var": [149, 150, 292, 293, 302, 316], "varianc": [149, 150], "freedom": [149, 150, 297], "adjust": [149, 150], "constitut": [149, 150, 307, 316, 1697], "unbias": [149, 150], "commonli": [149, 150, 304, 307], "bessel": [149, 150], "6666665": [149, 150, 319], "667": [149, 150], "AND": [151, 152], "backward": [151, 152, 333], "add_ivy_array_instance_method": 153, "cl": [153, 154, 292, 293], "to_ignor": [153, 154, 292, 293], "loop": [153, 154, 292, 293, 297, 305, 333], "_wrap_funct": [153, 154, 292, 293, 307, 308], "toi": [153, 154, 292, 293], "arrayexampl": [153, 154], "hasattr": [153, 154, 292, 293], "containerwithactiv": 156, "dict_in": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "queue": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 319], "queue_load_s": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "container_combine_method": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "list_join": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "queue_timeout": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "print_limit": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "key_length_limit": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "print_ind": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "print_line_spac": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "ivyh": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "default_key_color": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "keyword_color_dict": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "rebuild_child_contain": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "types_to_iteratively_nest": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "alphabetical_kei": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "containerbas": [156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 298], "key_chain": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "to_appli": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "prune_unappli": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "map_sequ": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "formul": [156, 157], "chain": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 296, 298, 310, 320, 321, 333, 1696], "prune": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], "map": [156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 298, 300, 306, 307, 310, 312, 313, 319, 332, 333, 1685, 1697], "slope": [156, 157], "leaki": [156, 157], "371": [156, 157], "rectifi": [156, 157], "revert": [156, 157], "535": [156, 157], "948": [156, 157], "static_gelu": [156, 157], "static_leaky_relu": [156, 157], "static_log_softmax": [156, 157], "static_relu": [156, 157], "static_sigmoid": [156, 157], "static_softmax": [156, 157], "static_softplu": [156, 157], "__getitem__": [158, 159, 298], "queri": [158, 159, 298, 300, 318, 1696], "slice": [158, 159, 1696], "dictionari": [158, 159, 300, 319, 333], "multiprocess": [158, 159, 319, 333], "asynchron": [158, 159, 1696], "arriv": [158, 159, 314], "timeout": [158, 159], "whitespac": [158, 159], "indent": [158, 159, 319], "extra": [158, 159, 296, 300, 302, 308, 310, 311, 314, 316, 1693, 1698], "newlin": [158, 159, 303], "color": [158, 159], "termcolor": [158, 159], "constructor": [158, 159, 300, 301, 318], "param": [158, 159, 321], "alphabet": [158, 159], "__setitem__": [158, 159, 296, 298, 318], "all_fals": [158, 159], "assert_is_bool": [158, 159], "assert": [158, 159, 294, 295, 305, 310, 312, 313, 318, 319], "all_key_chain": [158, 159], "include_empti": [158, 159], "all_tru": [158, 159, 298, 319], "as_bool": [158, 159], "assert_contains_sub_contain": [158, 159], "sub_cont": [158, 159], "diff": [158, 159, 298, 302, 319], "assert_contains_sub_structur": [158, 159], "check_shap": [158, 159], "assert_ident": [158, 159], "check_typ": [158, 159], "same_arrai": [158, 159, 319], "arrays_equ": [158, 159], "assert_identical_structur": [158, 159], "at_key_chain": [158, 159], "ignore_key_error": [158, 159], "ignore_non": [158, 159], "at_kei": [158, 159], "ignor": [158, 159, 299, 302, 312, 333, 1702], "substr": [158, 159], "duplic": [158, 159, 297, 303, 305, 308, 311, 320, 1702], "container_rightmost": [158, 159], "common_key_chain": [158, 159, 298], "cont_inplace_upd": [158, 159], "contains_sub_contain": [158, 159], "contains_sub_structur": [158, 159], "create_if_abs": [158, 159], "noth": [158, 159, 314, 1702], "cutoff_at_depth": [158, 159], "depth_cutoff": [158, 159], "cutoff_at_height": [158, 159], "height_cutoff": [158, 159], "deep_copi": [158, 159, 319], "dev_str": [158, 159], "diff_kei": [158, 159], "detect_key_diff": [158, 159], "detect_value_diff": [158, 159], "detect_shape_diff": [158, 159], "treat": [158, 159, 312, 317, 321], "container0": [158, 159], "duplicate_array_keychain": [158, 159], "find_sub_contain": [158, 159], "sub_cont_to_find": [158, 159], "exsit": [158, 159], "find_sub_structur": [158, 159], "sub_struc_to_find": [158, 159], "flatten_key_chain": [158, 159, 319], "__": [158, 159, 302, 319], "above_height": [158, 159, 319], "below_depth": [158, 159, 319], "format_key_chain": [158, 159], "format_fn": [158, 159], "string": [158, 159, 297, 300, 301, 304, 305, 316, 319], "from_disk_as_hdf5": [158, 159, 319], "h5_obj_or_filepath": [158, 159], "slice_obj": [158, 159], "load": [158, 159, 333, 1695, 1702], "disk": [158, 159, 319, 1695], "h5py": [158, 159], "hdf5": [158, 159, 319], "h5": [158, 159], "from_disk_as_json": [158, 159, 319], "json_filepath": [158, 159], "from_disk_as_pickl": [158, 159, 319], "pickle_filepath": [158, 159], "pickl": [158, 159, 298, 319], "from_flat_list": [158, 159], "flat_list": [158, 159], "flat": [158, 159], "h5_file_s": [158, 159], "handle_inplac": [158, 159], "prime": [158, 159], "overwritten": [158, 159, 296, 297], "has_kei": [158, 159], "query_kei": [158, 159], "somewher": [158, 159], "has_key_chain": [158, 159], "identical_array_shap": [158, 159], "identical_config": [158, 159], "identical_structur": [158, 159], "if_exist": [158, 159], "key_chains_contain": [158, 159], "sub_str": [158, 159], "list_stack": [158, 159, 319], "map_cont": [158, 159], "include_self": [158, 159], "possibi": [158, 159], "max_depth": [158, 159], "multi_map": [158, 159, 298], "map_nest": [158, 159], "leftmost": [158, 159], "multi_map_in_static_method": [158, 159, 298], "fn_name": [158, 159, 297, 311, 312], "num_arrai": [158, 159, 311, 312], "overwrite_at_key_chain": [158, 159], "target_dict": [158, 159], "return_dict": [158, 159], "prune_empti": [158, 159], "keep_non": [158, 159], "prune_key_chain": [158, 159], "key1": [158, 159, 320], "key2": [158, 159], "key3": [158, 159], "prune_key_from_key_chain": [158, 159], "prune_kei": [158, 159], "prune_keys_from_key_chain": [158, 159], "remove_key_length_limit": [158, 159], "remove_print_limit": [158, 159], "reshape_lik": [158, 159], "leading_shap": [158, 159], "return_cont": [158, 159], "restructur": [158, 159], "keep_orig": [158, 159], "restructure_key_chain": [158, 159], "keychain_map": [158, 159], "set_at_key_chain": [158, 159], "set_at_kei": [158, 159], "attribut": [158, 159, 298, 300, 303, 308, 309, 317, 318, 319, 320], "shared_shap": [158, 159], "show_sub_contain": [158, 159], "sub_cont_or_keychain": [158, 159], "shuffle_h5_fil": [158, 159], "seed_valu": [158, 159], "dataset": [158, 159, 319, 331, 1686], "size_ordered_arrai": [158, 159], "keychain": [158, 159], "smallest": [158, 159], "largest": [158, 159, 332], "slice_kei": [158, 159], "key_slic": [158, 159], "all_depth": [158, 159], "slice_via_kei": [158, 159], "sort_by_kei": [158, 159], "split_cont": [158, 159], "constitu": [158, 159, 321], "structural_diff": [158, 159], "to_dict": [158, 159], "to_disk_as_hdf5": [158, 159, 319], "starting_index": [158, 159], "max_batch_s": [158, 159], "to_disk_as_json": [158, 159, 319], "to_disk_as_pickl": [158, 159, 319], "to_flat_list": [158, 159], "to_iter": [158, 159, 298], "leaf_keys_onli": [158, 159], "to_iterator_kei": [158, 159], "to_iterator_valu": [158, 159], "to_json": [158, 159], "to_nested_list": [158, 159], "to_raw": [158, 159], "raw": [158, 159, 303, 1697], "trim_kei": [158, 159], "max_length": [158, 159], "trim": [158, 159], "try_kc": [158, 159], "tri": [158, 159], "concatten": [158, 159], "unstack_cont": [158, 159], "dim_siz": [158, 159], "update_config": [158, 159], "with_default_key_color": [158, 159], "with_entries_as_list": [158, 159], "with_ivy_backend": [158, 159], "ivy_backend": [158, 159], "with_key_length_limit": [158, 159, 319], "with_print_ind": [158, 159, 319], "with_print_limit": [158, 159, 319], "with_print_line_spac": [158, 159], "containerwithconvers": 162, "static_to_ivi": [162, 163], "static_to_n": [162, 163], "containerwithcr": 164, "2324": [164, 165], "234": [164, 165], "123": [164, 165, 312], "static_arang": [164, 165], "static_asarrai": [164, 165], "static_empty_lik": [164, 165], "static_ey": [164, 165], "n_row": [164, 165], "n_col": [164, 165], "static_from_dlpack": [164, 165], "static_full_lik": [164, 165], "static_linspac": [164, 165], "endpoint": [164, 165, 306], "static_logspac": [164, 165], "static_meshgrid": [164, 165], "static_native_arrai": [164, 165], "static_one_hot": [164, 165], "static_on": [164, 165], "static_ones_lik": [164, 165], "static_tril": [164, 165], "static_triu": [164, 165], "static_zero": [164, 165], "static_zeros_lik": [164, 165], "containerwithdatatyp": 166, "718": [166, 167], "618": [166, 167], "broadcats": [166, 167], "1800": [166, 167], "32768": [166, 167], "32767": [166, 167], "2147483648": [166, 167], "2147483647": [166, 167], "static_astyp": [166, 167], "static_broadcast_arrai": [166, 167], "And": [166, 167, 312], "static_broadcast_to": [166, 167], "static_can_cast": [166, 167], "from_": [166, 167], "static_default_float_dtyp": [166, 167], "float_dtyp": [166, 167], "static_dtyp": [166, 167], "static_finfo": [166, 167], "static_function_supported_dtyp": [166, 167], "fn": [166, 167, 304, 310, 316], "static_function_unsupported_dtyp": [166, 167], "static_iinfo": [166, 167], "static_is_bool_dtyp": [166, 167], "dtype_in": [166, 167], "static_is_float_dtyp": [166, 167], "roughli": [166, 167, 1699], "static_is_int_dtyp": [166, 167], "static_is_uint_dtyp": [166, 167], "static_result_typ": [166, 167], "containerwithdevic": 168, "static_dev": [168, 169], "static_to_devic": [168, 169], "__dlpack__": [168, 169], "caveat": [168, 169], "portabl": [168, 169, 1686, 1694], "add_ivy_container_instance_method": 292, "containerexampl": [292, 293], "who": [294, 315, 333, 1696, 1698], "target": [294, 313, 315, 319, 320, 321, 1686, 1692, 1694, 1695, 1696, 1699, 1701, 1702], "hood": [294, 298, 302, 307, 310, 312, 314, 315, 316, 319, 321, 1703], "weed": [294, 315], "tour": 294, "primari": [294, 297, 300, 309, 310, 312, 314, 333, 1685], "superset": [294, 333], "goe": [294, 314], "dynam": [294, 300, 301, 309, 310, 316, 1696, 1700], "runtim": [294, 312, 314, 1696], "borrow": 294, "conjunct": 295, "establish": [295, 1698], "2020": [295, 1696], "group": [295, 298, 307, 310, 311, 1692, 1695, 1701], "intend": [295, 306, 1694, 1696, 1700, 1701], "popular": [295, 1696], "sens": [295, 302, 310, 318], "unconnect": 295, "decis": [295, 298, 300, 310, 314, 316, 318, 1696], "initialis": [295, 312], "checkout": [295, 312], "everytim": [295, 300], "init": [295, 321], "thoroughli": 295, "ci": [295, 300, 305, 312, 333], "insert_chosen_backend": 295, "test_linalg": 295, "test_set_funct": 295, "test_signatur": 295, "excess": [295, 297, 302], "explicitli": [295, 296, 297, 298, 300, 303, 304, 307, 308, 309, 312, 316, 333, 1696], "array_modul": 295, "set_backend": [295, 297, 300, 307, 308, 316, 318, 321, 1686], "vv": 295, "test_manipulation_funct": 295, "test_concat": [295, 312], "typic": [295, 307, 1695, 1703], "nb": 295, "varieti": [295, 299, 300, 301, 312, 1692, 1694, 1698, 1699, 1702, 1703], "known": [295, 300, 310, 312], "test_asarray_arrai": 295, "test_floor_divid": 295, "health": 295, "test_iop": 295, "__imod__": 295, "x1_i": 295, "isequ": 295, "test_matrix_norm": 295, "alter": 295, "tweak": 295, "array_api_methods_to_test": 295, "identifi": [295, 299, 312, 314], "202": 295, "test_trac": 295, "latter": [295, 297, 300, 303, 310], "hand": [295, 300, 307, 312, 333], "scheme": [295, 320, 1696], "edg": [295, 312, 1686, 1696, 1698, 1702], "test_special_cas": 295, "__ipow__": 295, "is_integ": 295, "unskip": 295, "temporarili": [295, 313], "straightforward": [295, 319], "tf": [296, 300, 301, 306, 309, 310, 312, 313, 314, 316, 321, 333, 1685, 1686, 1696], "xla_extens": [296, 300, 301, 306, 313, 316, 318], "devicearrai": [296, 311, 316, 318], "wrapper": [296, 298, 300, 308, 309, 318, 1685, 1692, 1696], "_data": [296, 310, 318], "meta": [296, 313, 1696], "organiz": [296, 298, 310], "inherit": [296, 298, 304, 318, 333, 1685], "bear": [296, 298, 300, 310], "necessarili": [296, 298], "although": [296, 298, 310, 1694, 1696], "underpin": [296, 298, 316], "programmat": [296, 298, 1697], "backup": [296, 298], "accident": [296, 298, 310], "readabl": [296, 298, 304, 306, 313, 318, 319], "absent": [296, 298], "perk": [296, 298], "auto": [296, 298, 319], "__mul__": [296, 298, 302, 306, 314, 318], "__truediv__": [296, 298, 302], "throw": [296, 300, 304, 318, 1696], "imposs": 296, "inputs_to_native_arrai": [296, 308], "outputs_to_ivy_arrai": [296, 300, 301, 306, 308], "firstli": [296, 300, 302, 303, 304, 307, 308, 309, 314, 319, 1692, 1702], "anywai": [296, 308, 310], "secondli": [296, 300], "permit": [296, 306, 310, 312, 314], "dictat": [296, 302, 306, 309], "implicit_backend": [297, 316], "__dict__": [297, 316], "ivy_original_dict": [297, 316], "unmodifi": [297, 300], "get_backend": [297, 307], "opt": [297, 300, 309, 312, 313, 314], "unset_backend": 297, "unset": [297, 316], "fallback": 297, "backend_handl": [297, 316, 1686], "layout": [297, 310, 314], "requires_grad": [297, 311], "memory_format": 297, "preserve_format": 297, "weren": 297, "break": [297, 300, 305, 306, 313, 333, 1686], "Not": [297, 311, 319, 320, 333], "vast": [297, 300, 1696], "minor": [297, 314, 316, 333], "fn_name_v_1p12_and_abov": 297, "similarli": [297, 300, 310, 314, 318, 1702], "fn_name_v_1p01_to_1p1": 297, "inclus": [297, 309, 310, 314], "vari": [298, 302, 310, 312, 318], "five": [298, 319], "recap": [298, 302, 320], "arbitrarili": [298, 308, 319], "static_add": [298, 302, 303], "static_tan": [298, 302], "static_rol": [298, 302], "containerwithelementwis": 298, "__repr__": 298, "control": [298, 300, 309, 310, 314, 318, 319, 332, 1685, 1696, 1702], "__getattr__": 298, "underli": [298, 314, 1696], "__setattr__": 298, "__contains__": 298, "__getstate__": 298, "__setstate__": 298, "unpickl": 298, "num_dim": [298, 321], "__len__": 298, "restrict": [298, 310, 316, 1693], "enforc": [298, 318], "extern": [298, 306, 310, 312, 313], "flexibl": [298, 306, 313, 1696], "l1": [298, 319], "c1": 298, "l2": 298, "lefthand": 298, "righthand": 298, "operand": [298, 303, 310], "decor": [298, 300, 301, 307, 308, 309, 310, 311, 312], "handle_nest": [298, 307, 308, 316], "addition": [298, 309, 310, 1702], "counterpart": [298, 308], "behavior": [298, 300, 310, 312, 314, 316, 333, 1693], "presenc": [298, 309], "absenc": [298, 306, 1696], "implicitli": [298, 316], "themselv": [298, 300, 301, 303, 307, 310, 320, 1693, 1702], "log_pr": [298, 307, 309], "intuit": [298, 319, 320, 1692], "chronolog": 298, "concurr": [298, 307, 1696], "had": [298, 309, 1696, 1697], "consum": [298, 306, 311, 312], "sequenti": [298, 320], "But": [298, 303, 308, 309, 321], "flow": [298, 332, 1696, 1697], "compil": [298, 310, 313, 314, 315, 317, 333, 1685, 1686, 1692, 1695, 1696, 1697, 1700, 1703], "implic": 298, "whatsoev": [298, 307, 1685, 1702], "implicit": [298, 303, 310, 312, 316, 1696], "eager": [298, 333, 1696], "children": 298, "shallowest": 298, "deepest": 298, "event": [299, 312], "ex": 299, "reopen": 299, "review_request": 299, "yml": 299, "dispatch": [299, 333, 1696, 1699], "pair": 299, "test_nn": 299, "test_stat": 299, "yellow": 299, "dot": 299, "queu": 299, "redirect": 299, "book": 299, "procedur": [299, 302], "decoupl": [299, 320], "ran": 299, "badg": 299, "clickabl": 299, "uint8": [300, 312], "uint16": [300, 312, 316], "uint32": [300, 312, 316], "uint64": [300, 312, 316], "bfloat16": [300, 310, 312], "all_dtyp": 300, "all_numeric_dtyp": 300, "all_int_dtyp": 300, "all_float_dtyp": 300, "replic": [300, 302, 310, 314], "four": [300, 302, 306, 307, 312, 314, 319], "thirdli": 300, "native_float32": 300, "importantli": [300, 318, 321, 332], "conveni": [300, 301, 306, 311, 317, 319, 320, 1685, 1702], "set_default_dtyp": [300, 307], "default_dtyp": [300, 307], "arguabl": [300, 301, 310], "promote_typ": 300, "type_promote_arrai": 300, "promote_types_of_input": 300, "jaxarrai": [300, 301, 306, 309, 313, 316], "jnp": [300, 301, 306, 309, 311, 313, 316, 321, 1686], "_handle_0_dim_output": [300, 309], "experiment": [300, 313, 316, 1696], "subtli": [300, 309], "On": [300, 310, 312, 317, 321], "promote_types_frontend_nam": 300, "promote_types_of_frontend_name_input": 300, "frontend_nam": 300, "mathemat": [300, 310, 314, 1696, 1702], "demonstr": [300, 302, 318], "accuraci": 300, "precis": [300, 310, 314, 1700], "upcast": 300, "instabl": 300, "underflow": 300, "nearli": [300, 306, 308, 1696], "downcast": 300, "footprint": 300, "constraint": 300, "concret": 300, "compound": 300, "infer_dtyp": [300, 301, 306, 308], "default_int_dtyp": 300, "default_float_dtyp": 300, "settabl": [300, 301], "set_default_int_dtyp": 300, "set_default_float_dtyp": 300, "irrelev": [300, 302], "handle_out_argu": [300, 301, 306, 308, 309, 316], "infer_devic": [300, 301, 306, 308], "deleg": [300, 1703], "shape_to_tupl": 300, "with_supported_dtyp": 300, "with_unsupported_dtyp": 300, "unment": 300, "backend_vers": 300, "_cast_for_unary_op": 300, "target_typ": 300, "function_supported_dtyp": 300, "function_unsupported_dtyp": 300, "discov": 300, "unsupported_dtyp": 300, "invalid_dtyp": 300, "former": [300, 303, 310], "uint": [300, 311], "lack": [300, 309, 1696, 1703], "rang": [300, 304, 312, 316, 319, 320, 321, 1686, 1696, 1702], "patch": [300, 1696], "achiev": [300, 305, 308, 312, 319, 321, 1685], "subtl": [300, 313, 1702], "unsign": [300, 311, 316], "offici": [300, 316], "inconsist": [300, 304], "unexpect": 300, "84530": 300, "unwarr": 300, "risk": [300, 1702], "needlessli": 300, "bloat": 300, "undergo": [300, 333], "supported_dtyp": [300, 310], "unsupported_devic": 300, "supported_devic": 300, "slight": [300, 320], "downsid": 300, "coverag": [300, 312], "inflat": 300, "idx": [301, 318], "tpu": [301, 1696, 1699], "get_all_ivy_arrays_on_dev": 301, "aliv": 301, "num_gpu": [301, 312], "total_mem_on_dev": 301, "dev_util": 301, "num_cpu_cor": 301, "default_devic": [301, 304], "outsid": [301, 305, 307, 318, 1701], "dual": 301, "categor": [301, 307, 310], "thrown": [301, 304, 333], "far": [301, 302, 317, 1701, 1702], "set_default_devic": 301, "eight": [302, 315], "func_nam": [302, 303, 307, 310], "static_func_nam": 302, "op_nam": 302, "__r": 302, "combinatori": 302, "variat": [302, 312], "grid": [302, 312, 332], "unus": [302, 305, 309], "okai": [302, 314, 316], "showcas": [302, 332], "meant": 302, "imaginari": 302, "spec": [302, 303], "my_func": [302, 313], "some_flag": 302, "another_flag": 302, "jointli": 302, "x0": 302, "5574077": 302, "1850398": 302, "5463025": 302, "8422884": 302, "91601413": 302, "9647598": 302, "3738229": 302, "1597457": 302, "0963247": 302, "9955841": 302, "3278579": 302, "multi": [302, 315, 333, 1686, 1692, 1694, 1696, 1700], "pars": [302, 333], "satisfi": [302, 312], "asid": [302, 332], "increasingli": 302, "14254655": 302, "1578213": 302, "380515": 302, "143": 302, "38": 302, "trivial": 302, "exlud": 302, "failing_fn_nam": 302, "onlin": [302, 303], "minutest": 302, "suffici": 302, "segment": 302, "fault": [302, 1696], "contrast": [303, 306, 310, 1702], "instanti": 303, "templat": [303, 312, 1686], "array_api": 303, "preview": 303, "render": 303, "incorrectli": 303, "domain": [303, 1694, 1696], "codomain": 303, "ref": [303, 316], "needless": [303, 311], "info": [303, 312, 1686], "subset": [303, 306, 310, 312, 316, 1696], "renam": 303, "judgment": 303, "beyond": [303, 310, 1702], "pure": [303, 306, 310, 314, 318, 321, 333, 1696, 1702, 1703], "operator_nam": 303, "succinct": 303, "contstructor": 303, "_forward": [303, 316, 319, 320, 1686], "docst": 303, "ivyexcept": [304, 310], "super": [304, 316, 319, 320, 321], "ivybackendexcept": 304, "_default": 304, "current_backend_str": [304, 316, 318], "_delimit": 304, "indexerror": 304, "ivyerror": 304, "repetit": 304, "caught": 304, "functool": [304, 310, 318], "new_fn": [304, 310], "__name__": 304, "current_backend": [304, 307, 310, 313, 316], "comparison": 304, "error_stack": 304, "axiserror": 304, "bound": [304, 312, 316, 1702], "got": [304, 1686], "assertionerror": [304, 312], "elif": [304, 309, 310], "polici": [304, 312, 332], "moreov": 304, "cleaner": [304, 319], "check_less": 304, "allow_equ": 304, "lesser": 304, "set_split_factor": 304, "split_factor": 304, "met": 304, "flake8": 305, "undefin": 305, "statement": [305, 309, 312, 314, 333], "handler": [305, 315, 317, 321, 1685, 1686], "annot": [305, 306], "star": 305, "byte": [305, 1701, 1702], "notimpl": 305, "notimplementederror": 305, "unsuccess": 305, "reformat": 305, "exceed": 305, "black": 305, "disobei": 305, "taken": [305, 313, 321, 1697], "successfulli": 305, "inde": [305, 306, 314, 333, 1694], "adress": 306, "revisit": 306, "dedic": [306, 318, 320], "to_native_arrays_and_back": [306, 308, 316], "usabl": [306, 313], "sole": [306, 313, 1695, 1696, 1697], "strictli": [306, 309], "linspac": [306, 314, 316, 1686, 1703], "rational": 306, "__div__": [306, 314], "dicat": 306, "futher": 306, "pep": 306, "484": 306, "brittl": 306, "freeli": 306, "technic": [306, 309, 333, 1696, 1698], "original_typ": 306, "cumbersom": 306, "omit": [306, 309, 310], "venn": 307, "diagram": [307, 1702], "light": [307, 310, 333, 1685, 1697, 1702], "array_arg": 307, "cache_fn": 307, "cach": [307, 312], "deal": [307, 311, 333], "modif": [307, 1696], "briefli": [307, 312, 319], "get_all_arrays_on_dev": 307, "nested_map": 307, "index_nest": 307, "inputs_to_ivy_arrai": 308, "heavili": [308, 310, 333], "facilit": 308, "integer_array_to_float": 308, "handle_cmd_line_arg": [308, 311, 312], "as_vari": [308, 311, 312], "with_out": [308, 311, 312], "instance_method": [308, 312], "test_gradi": 308, "topic": [308, 318, 1696], "suffic": [308, 312], "program": [309, 1693, 1694, 1696, 1699, 1700, 1703], "ration": [309, 314], "speak": 309, "x_nativ": 309, "val_n": 309, "unspecifi": 309, "predominantli": [309, 313, 332], "support_native_out": 309, "math": [309, 310, 312, 321, 1686, 1694], "mx": 309, "nd": 309, "_wrap_fn": 309, "dim0": 309, "dim1": 309, "maxim": [309, 314, 316, 1693, 1694, 1698, 1699, 1700], "third": [309, 333, 1695, 1696, 1702], "leverag": [309, 1694, 1696], "capabl": [309, 314], "input_arrai": 309, "plai": [310, 312, 321, 1696, 1699], "tf_frontend": 310, "lax": [310, 311, 314, 321, 333], "neither": [310, 314], "fn_tree": [310, 311], "wrong": [310, 314], "carefulli": [310, 1694, 1699], "acceler": [310, 1686, 1694, 1698, 1699, 1700, 1701], "algebra": [310, 1694, 1695, 1696, 1699, 1703], "xla": [310, 333, 1685, 1696], "decompos": 310, "dynamic": 310, "extent": 310, "mimic": 310, "arithmetic_oper": 310, "same_kind": 310, "subok": [310, 311, 314], "as_ivy_dtyp": 310, "recov": 310, "obtain": 310, "unhandl": 310, "seek": 310, "subclass": [310, 314], "trigonometric_funct": 310, "from_zero_dim_arrays_to_float": 310, "pointwise_op": 310, "preferred_element_typ": 310, "conv_general_dil": 310, "finer": 310, "nor": [310, 1700], "margin": 310, "fit": [310, 316, 1692, 1693, 1696], "meet": 310, "criteria": 310, "incorpor": [310, 319, 1696], "omiss": 310, "sensibl": 310, "deem": 310, "reserv": 310, "resum": 310, "possibli": [310, 312, 333], "straight": [310, 312, 318, 1686], "ahead": [310, 1696], "heavi": [310, 311, 314, 1697], "logicaland": 310, "truth": [310, 312], "np_frontend": 310, "radd": 310, "_init_data": 310, "isinst": [310, 312, 313, 320, 321], "_process_str_data": 310, "check_equ": 310, "2d": 310, "_shape": [310, 318], "_dtype": [310, 318], "govern": 310, "promote_types_of_": 310, "_input": 310, "promote_types_of_tensorflow_input": 310, "saniti": 310, "handle_numpy_cast": 310, "func_wrapp": 310, "to_ivy_arrays_and_back": 310, "handle_numpy_casting_speci": 310, "check_elem_in_list": 310, "equiv": 310, "safe": 310, "unsaf": 310, "array_type_test": 310, "watch": 310, "youtub": 310, "seri": [310, 312, 1696, 1698], "jump": 311, "knowledg": 311, "test_frontend_funct": 311, "lift": [311, 1697], "get_dtyp": [311, 312], "dtype_and_valu": [311, 312], "num_positional_arg": [311, 312], "get_shap": [311, 312], "np_frontend_help": 311, "nn": [311, 314, 321, 1686, 1697], "test_jax": 311, "test_jax_lax_oper": 311, "dtype_and_x": [311, 312], "available_dtyp": [311, 312], "test_jax_lax_tan": 311, "input_dtyp": [311, 312], "as_variable_flag": [311, 312], "native_array_flag": [311, 312], "test_numpi": 311, "test_mathematical_funct": 311, "test_np_trigonometric_funct": 311, "test_numpy_tan": 311, "handle_where_and_array_bool": 311, "test_tensorflow": 311, "test_math": 311, "test_tensorflow_tan": 311, "test_torch": 311, "test_non_linear_activation_funct": 311, "st": [311, 312], "min_valu": [311, 312], "max_valu": [311, 312], "with_inplac": 311, "test_torch_leaky_relu": 311, "negative_slop": 311, "_fill_valu": 311, "allow_non": [311, 312], "min_num_dim": [311, 312], "max_num_dim": [311, 312], "min_dim_s": [311, 312], "max_dim_s": 311, "test_jax_lax_ful": 311, "test_from_shape_or_valu": 311, "test_numpy_ful": 311, "test_tf_funct": 311, "test_tensorflow_ful": 311, "discrep": 311, "test_creation_op": 311, "_requires_grad": 311, "test_torch_ful": 311, "accommod": 311, "test_frontend_instance_method": 311, "frontend_class": 311, "test_jax_devicearrai": 311, "shared_dtyp": 311, "test_jax_instance_add": 311, "test_frontend_array_instance_method": 311, "test_ndarrai": 311, "test_numpy_ndarray_add": 311, "test_frontend_method": 311, "input_dtypes_init": 311, "as_variable_flags_init": 311, "num_positional_args_init": 311, "native_array_flags_init": 311, "all_as_kwargs_np_init": 311, "input_dtypes_method": 311, "as_variable_flags_method": 311, "num_positional_args_method": 311, "native_array_flags_method": 311, "all_as_kwargs_np_method": 311, "class_nam": 311, "method_nam": 311, "test_tensor": 311, "test_tensorflow_instance_add": 311, "1e04": 311, "allow_inf": [311, 312], "1e06": 311, "allow_infin": 311, "test_torch_instance_add": 311, "somewhat": [311, 333, 1696], "value_test": 311, "dtype_x": 311, "test_jax_special_add": 311, "ret_gt": 311, "flatten_and_to_np": 311, "zip": [311, 316], "ret_from_gt": 311, "ground_truth_backend": 311, "_arrays_idx_n_dtyp": 311, "test_manipul": [311, 312], "surprisingli": 311, "cat": [311, 314, 316, 321], "closest_relevant_group": 311, "strive": [311, 312, 314, 333, 1698], "cycl": 312, "exhaust": [312, 1693, 1702], "fixtur": 312, "300": 312, "hit": [312, 316], "eleg": [312, 1696], "intellig": [312, 314, 1698], "unexplor": 312, "repeatedli": 312, "upload": 312, "artifact": 312, "parametr": [312, 1696], "impli": 312, "bespok": 312, "_array_or_typ": 312, "standalon": [312, 1685, 1692, 1697, 1702, 1703], "test_default_int_dtyp": 312, "clariti": [312, 314, 1696], "print_hypothesis_exampl": 312, "searchstrategi": 312, "custom_strategi": 312, "sampled_from": 312, "randomis": 312, "simplist": 312, "intricaci": 312, "one_of": 312, "datum": 312, "pipe": 312, "overload": 312, "shorthand": 312, "isclos": 312, "flatmap": 312, "suppos": 312, "scaler": 312, "array_or_scal": 312, "len_of_arrai": 312, "interact": [312, 1686, 1695, 1696, 1701], "bodi": 312, "reusabl": [312, 333, 1694, 1696], "snippet": 312, "container_flag": 312, "thankfulli": 312, "advis": 312, "seamlessli": 312, "encount": 312, "criterion": 312, "array_valu": 312, "valid_ax": 312, "craft": 312, "hoc": 312, "intersect": [312, 332], "44758124e": 312, "308": 312, "11228": 312, "456": 312, "268": 312, "wherev": 312, "dtype_values_axi": 312, "9622": 312, "28136": 312, "6375": 312, "12720": 312, "21354": 312, "900e": 312, "00": 312, "955e": 312, "exclude_min": 312, "large_abs_safety_factor": 312, "safety_factor_scal": 312, "57384": 312, "25687": 312, "248": 312, "array_dtyp": 312, "min_siz": 312, "max_siz": 312, "array_bool": 312, "na": 312, "anyth": [312, 313, 1696, 1697], "test_devic": 312, "array_shap": 312, "common_shap": 312, "test_lay": 312, "size_bound": 312, "reshape_shap": 312, "stand": 312, "fashion": 312, "some_sequ": 312, "allow_nan": 312, "allow_subnorm": 312, "get_bound": 312, "arrays_valu": 312, "73": 312, "36418": 312, "213": 312, "21716926": 312, "none_or_list_of_float": 312, "get_prob": 312, "get_mean_std": 312, "103515625e": 312, "099609375": 312, "probabilist": 312, "get_axi": 312, "number_positional_argu": 312, "unreproduc": 312, "test_valu": 312, "enough": [312, 318, 319, 320], "report": 312, "ivy_np": 312, "valid_float_dtyp": 312, "test_demo": 312, "falsifi": 312, "failing_test": 312, "traceback": 312, "file_nam": [312, 313], "shrink": 312, "prescrib": 312, "closest": [312, 314], "scratch": 312, "databas": 312, "therebi": 312, "test_gelu": 312, "test_fil": 312, "brief": 312, "phase": [312, 333, 1696], "notabl": [312, 1696], "verbos": [312, 316, 1686], "newer": 312, "max_exampl": 312, "impact": [312, 320, 1698], "deadlin": 312, "weird": 312, "systemat": 312, "safeguard": 312, "inabl": 312, "test_result_typ": 312, "9090909090909091": 312, "judgement": 313, "some_namespac": 313, "some_backend": 313, "another_backend": 313, "refactor": 313, "ongo": 313, "op": [313, 316, 333], "cooler": 313, "something_cool": 313, "clean": [313, 314, 316, 317, 319], "_assert_fill_value_and_dtype_are_compat": 313, "_to_devic": 313, "focus": [313, 332, 1694, 1695, 1696, 1702, 1703], "prior": 313, "older": 313, "grow": [313, 1686, 1696], "unbound": 313, "battl": 313, "face": [314, 316, 1696, 1702], "answer": [314, 318, 333], "contradict": 314, "entail": 314, "sacrif": 314, "dimems": 314, "conv": 314, "jacfwd": 314, "jacrev": 314, "banner": 314, "pointwis": 314, "unnecessari": 314, "fuse": 314, "tensorrt": 314, "highli": [314, 1696], "expens": 314, "incredibli": [314, 319, 333, 1699], "six": 314, "__gt__": 314, "price": 314, "pai": 314, "intrus": 314, "x_beta": 314, "equip": 314, "deliber": 314, "ey": [314, 321], "priorit": 314, "simplif": 314, "allevi": 314, "ineffici": [314, 333, 1696], "fledg": [316, 317], "syntact": [316, 321], "logspac": 316, "construct": [316, 320, 321, 1694, 1696, 1703], "power_seq": 316, "backend_stack": 316, "cprint": 316, "_determine_backend_from_arg": 316, "importlib": 316, "import_modul": 316, "_backend_dict": 316, "illustr": [316, 332], "un": 316, "unrol": [316, 319], "lstm": [316, 1696], "cell": 316, "hidden": [316, 320], "recurr": [316, 1696, 1700], "timestep": 316, "x_shape": 316, "input_channel": [316, 320], "x_flat": 316, "wi": 316, "wi_x": 316, "wii_x": 316, "wif_x": 316, "wig_x": 316, "wio_x": 316, "wh": 316, "ht": 316, "ct": 316, "hts_list": 316, "wii_xt": 316, "wif_xt": 316, "wig_xt": 316, "wio_xt": 316, "htm1": 316, "ctm1": 316, "wh_htm1": 316, "whi_htm1": 316, "whf_htm1": 316, "whg_htm1": 316, "who_htm1": 316, "ft": 316, "gt": 316, "ot": 316, "reliabl": 316, "sacrific": 316, "hear": 316, "virtu": [316, 1693], "pure_ivi": 316, "compile_graph": [316, 321], "pure_torch": 316, "backbon": [316, 319], "_layer": 316, "random_unifrom": 316, "unclean": 316, "wx": 316, "temp": 316, "ivy_func": 316, "emphas": 316, "torchscript": [316, 1685, 1703], "example_input": 316, "static_argnum": 316, "static_argnam": 316, "jit": [316, 333, 1696], "primit": [317, 333, 1694, 1696], "upcom": 317, "hierarch": [317, 319, 320, 1696], "_init": 318, "_size": 318, "mul": 318, "_devic": 318, "_dev_str": 318, "as_ivy_dev": 318, "_pre_repr": 318, "_post_repr": 318, "framework_str": 318, "noinspect": 318, "pypep8nam": 318, "typeerror": 318, "immut": 318, "claim": 318, "truli": 318, "_native_wrapp": 318, "attributeerror": 318, "genuin": 318, "some_method": 318, "rewritten": 318, "__pow__": 318, "strang": 318, "compartment": 318, "public": [318, 1699], "newshap": 318, "new_shap": 318, "tidi": 318, "shorter": 318, "crystal": 318, "50": 318, "ton": 319, "ado": [319, 320], "soup": 319, "walk": [319, 320], "dct": 319, "cnt": 319, "combo": 319, "1000": 319, "3333335": 319, "Or": 319, "200": 319, "grad": [319, 320, 321, 1686], "delimit": 319, "autocomplet": 319, "midwai": 319, "agent": 319, "total_spe": 319, "total_height": 319, "total_width": 319, "ag": 319, "tot": 319, "total_": 319, "total_h": 319, "cnt0": 319, "cnt1": 319, "diff_0": 319, "diff_1": 319, "config0": 319, "config1": 319, "decod": 319, "l0": 319, "truncat": 319, "decoder__l0": 319, "decoder__l1": 319, "encoder__l0": 319, "encoder__l1": 319, "height": 319, "l0__b": 319, "l0__w": 319, "l1__b": 319, "l1__w": 319, "printabl": 319, "obviou": [319, 1696], "foresight": 319, "untidili": 319, "update_ag": 319, "normalize_img": 319, "img": 319, "img_max": 319, "reduce_max": [319, 1686], "img_min": 319, "reduce_min": [319, 1686], "img_rang": 319, "agent_posit": 319, "agent_veloc": 319, "agent_cam_front_rgb": 319, "agent_cam_front_depth": 319, "agent_cam_rear_rgb": 319, "agent_cam_rear_depth": 319, "agent_cam_lidar": 319, "camera": 319, "front_rgb": 319, "front_depth": 319, "rear_rgb": 319, "rear_depth": 319, "lidar": 319, "rgb": 319, "rear": 319, "veloc": 319, "cam": 319, "cam_max": 319, "cam_min": 319, "cam_rang": 319, "Of": [319, 1701, 1702], "perman": 319, "thread": [319, 1696], "pretti": [319, 1702], "dataload": [319, 331, 1686], "_cnt": 319, "img_": 319, "_dataset_s": 319, "_batch_siz": 319, "_count": [319, 320], "__next__": 319, "filenam": 319, "img_fnam": 319, "fname": 319, "loaded_img": 319, "cv2": 319, "imread": 319, "from_numpi": 319, "loader": [319, 333], "batch_slic": 319, "model": [319, 320, 1685, 1686, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703], "mymodel": [319, 1686], "linear0": [319, 320, 1686], "linear1": [319, 320, 1686], "x_in": [319, 320, 321, 1686], "loss_fn": [319, 320, 321, 1686], "reduce_mean": [319, 320, 321, 1686], "execute_with_gradi": [319, 320, 321, 333, 1686], "0145": 319, "grad_fn": 319, "addbackward0": 319, "_create_vari": 320, "output_channel": 320, "with_bia": 320, "_input_channel": 320, "_output_channel": 320, "_w_shape": 320, "_b_shape": 320, "_with_bia": 320, "729": 320, "396": 320, "764": 320, "872": 320, "211": 320, "439": 320, "644": 320, "nightmar": 320, "overcom": 320, "fc": 320, "v0": 320, "v1": 320, "key0": 320, "linear3": 320, "v2": 320, "counter": 320, "fed": 320, "weight_initi": 320, "glorotuniform": 320, "bias_initi": 320, "_w_init": 320, "_b_init": 320, "create_vari": 320, "var_shap": 320, "fan_out": 320, "fan_in": 320, "fan_mod": 320, "fan_sum": 320, "misnom": 320, "saw": 320, "vanilla": [320, 1696], "compile_on_next_step": 320, "_beta1": 320, "_beta2": 320, "_epsilon": 320, "_mw": 320, "_vw": 320, "_first_pass": 320, "_should_compil": 320, "_step": 320, "new_v": 320, "_lr": 320, "_inplac": 320, "_stop_gradi": 320, "set_stat": 320, "clamp": 321, "clip_by_valu": 321, "captur": [321, 1697], "sparse_funct": 321, "num_class": 321, "new_axi": 321, "_linear": 321, "jax_graph": 321, "to_backend": 321, "to_ivy_modul": 321, "thinli": 321, "whilst": [321, 1685, 1696], "to_haiku_modul": 321, "hk": 321, "loss_fn_t": 321, "without_apply_rng": 321, "rng": 321, "prngkei": 321, "update_rul": 321, "tree_multimap": 321, "mechan": [331, 333, 1686], "robot": [331, 1686], "perfect": 332, "3d": 332, "differenti": [332, 1696], "orient": 332, "pose": 332, "euler": 332, "quaternion": 332, "ivy_mech": 332, "target_facing_rotation_matrix": 332, "polar_to_cartesian_coord": 332, "ordin": 332, "warp": 332, "optic": 332, "voxel": 332, "ivy_vis": 332, "coords_to_voxel_grid": 332, "render_pixel_coord": 332, "neural": [332, 1686, 1692, 1694, 1695, 1696, 1700, 1702, 1703], "radianc": 332, "nerf": 332, "trajectori": 332, "motion": 332, "plan": [332, 1686], "mobil": [332, 1696], "sample_spline_path": 332, "rigidmobil": 332, "sample_bodi": 332, "drone": 332, "sample_link": 332, "openai": 332, "swimmer": 332, "reward": 332, "supervis": 332, "reinforc": 332, "door": [332, 333], "cartpol": 332, "mountain_car": 332, "pendulum": 332, "reacher": 332, "learnt": 332, "ture": 332, "ntm": 332, "egospher": 332, "spatial": 332, "esm": 332, "ivy_memori": 332, "egocentr": 332, "room": 332, "inspir": 332, "doubt": 333, "grate": 333, "probe": 333, "remark": 333, "surpris": 333, "lock": 333, "gold": 333, "dex": 333, "ye": 333, "scan": 333, "tricki": [333, 1685], "predictor": 333, "tight": 333, "driver": 333, "schedul": [333, 1696, 1703], "Will": 333, "ast": 333, "cond": 333, "jacobian": [333, 1696], "checkpoint": 333, "autodiff": 333, "shine": 333, "merci": 333, "autograd": 333, "cluster": [333, 1696], "compet": [333, 1696], "paradigm": [333, 1696], "parallelis": 333, "spmd": 333, "mixtur": 333, "expert": 333, "sophist": 333, "depart": 333, "routin": [333, 1696], "hundr": 333, "thousand": 333, "deepli": [333, 1696], "broadli": [333, 1702], "supplementari": 333, "fanci": [333, 1696], "fusion": [333, 1700], "lose": 333, "vmap": [333, 1696], "pmap": 333, "overhead": [333, 1699], "eventu": 333, "supplement": 333, "backdoor": 333, "callback": 333, "record": [333, 1697], "metric": 333, "outsourc": 333, "is_ivy_sparse_arrai": 394, "nail": 1685, "retain": 1685, "funtion": 1685, "asset": 1685, "functiona": 1685, "scientist": 1685, "deploi": [1685, 1694, 1695, 1696, 1698, 1702], "correl": 1685, "analyz": 1685, "ai": [1686, 1694, 1698], "colab": 1686, "sharp": 1686, "favorit": 1686, "jax_concat": 1686, "tf_concat": 1686, "np_concat": 1686, "torch_concat": 1686, "get_devic": 1686, "reduce_prod": 1686, "reduce_sum": 1686, "gradient_imag": 1686, "indices_wher": 1686, "bilinear_resampl": 1686, "stack_imag": 1686, "neural_net": 1686, "floormod": 1686, "articl": 1686, "lenton2021ivi": 1686, "inter": 1686, "lenton": 1686, "daniel": 1686, "pardo": 1686, "fabio": 1686, "falck": 1686, "fabian": 1686, "jame": 1686, "stephen": 1686, "clark": 1686, "ronald": 1686, "journal": 1686, "arxiv": 1686, "preprint": 1686, "2102": 1686, "02886": 1686, "2021": 1686, "conceptu": [1692, 1697], "broken": [1692, 1696], "tracer": 1692, "infrastructur": [1692, 1698, 1699], "vendor": [1692, 1698], "complimentari": [1692, 1702], "acycl": [1692, 1697], "insert_numb": 1693, "insert_t": 1693, "scaffold": [1694, 1702], "heart": 1694, "toolchain": [1694, 1699], "intermedi": [1694, 1695, 1696, 1697, 1702], "ir": [1694, 1697, 1702], "assembli": [1694, 1701, 1702], "idl": 1694, "middl": 1694, "emit": 1694, "gnu": [1694, 1699], "gcc": [1694, 1701], "broader": 1694, "heterogen": 1694, "aid": 1694, "coprocessor": 1694, "programm": [1694, 1701], "gate": 1694, "onednn": 1694, "awai": [1694, 1696], "complementari": [1694, 1702], "sit": [1694, 1697, 1702], "tandem": 1694, "possess": 1694, "underneath": 1694, "export": [1695, 1702], "signal": [1695, 1696], "khrono": [1695, 1701], "appl": 1695, "coremltool": 1695, "albeit": 1695, "promin": 1696, "abbrevi": 1696, "laboratori": 1696, "proprietari": [1696, 1700, 1701], "mathwork": 1696, "commerci": 1696, "1984": 1696, "plot": 1696, "toolbox": 1696, "mupad": 1696, "engin": [1696, 1698, 1699], "simulink": 1696, "graphic": [1696, 1700, 1701], "simul": 1696, "embed": 1696, "million": [1696, 1699], "worldwid": 1696, "scienc": [1696, 1698], "econom": 1696, "2001": 1696, "scientif": 1696, "interpol": 1696, "od": 1696, "solver": 1696, "fortran": [1696, 1700], "cython": 1696, "friendli": 1696, "2002": 1696, "lua": 1696, "luajit": 1696, "idiap": 1696, "epfl": 1696, "2005": 1696, "numarrai": 1696, "cpython": 1696, "partli": 1696, "multidimension": 1696, "2007": 1696, "classif": 1696, "regress": [1696, 1703], "forest": 1696, "boost": 1696, "dbscan": 1696, "inbuilt": 1696, "esqu": 1696, "aesara": 1696, "2008": 1696, "analysi": [1696, 1697], "datafram": 1696, "critic": [1696, 1702], "2012": 1696, "Its": 1696, "polymorph": 1696, "parallel": [1696, 1700, 1701], "mpi": 1696, "openmp": 1696, "glue": 1696, "jaot": 1696, "nasa": 1696, "cern": 1696, "climat": 1696, "allianc": 1696, "influenti": 1696, "2014": 1696, "analyt": [1696, 1698, 1702], "scala": 1696, "ship": 1696, "forgiv": 1696, "decemb": 1696, "2019": [1696, 1699], "announc": 1696, "transit": 1696, "mainten": 1696, "v7": 1696, "meaning": 1696, "2016": 1696, "imper": 1696, "fast": 1696, "amazon": 1696, "traction": 1696, "cognit": [1696, 1703], "toolkit": [1696, 1697, 1703], "grade": 1696, "realiz": 1696, "feed": [1696, 1697], "dnn": 1696, "cnn": 1696, "rnn": 1696, "stochast": 1696, "sgd": 1696, "backpropag": 1696, "succumb": 1696, "came": 1696, "monitor": 1696, "practition": [1696, 1700, 1701, 1702], "hobbyist": 1696, "tremend": 1696, "ecosystem": 1696, "gear": 1696, "batteri": 1696, "zygot": 1696, "jl": 1696, "workload": 1696, "daggerflux": 1696, "frontier": 1696, "hessian": 1696, "2018": 1696, "lightweight": [1696, 1703], "shortcom": 1696, "eas": 1696, "barrier": 1696, "inexperienc": 1696, "underdevelop": 1696, "fanat": 1696, "ounc": 1696, "infanc": 1696, "emerg": 1696, "nich": 1696, "introduct": 1696, "lite": 1696, "enterpris": 1696, "reinvent": [1696, 1698], "inertia": 1696, "haven": 1696, "creator": [1696, 1698], "paszk": 1696, "hi": 1696, "safeti": 1696, "bulk": 1696, "haskel": 1696, "dataflow": 1697, "distil": 1697, "essenc": [1697, 1702], "enclos": 1697, "scope": [1697, 1701], "trace_modul": 1697, "scriptfunct": 1697, "scriptmodul": 1697, "fake": 1697, "proxi": 1697, "site": 1697, "graphmodul": 1697, "travi": 1698, "oliph": 1698, "leader": 1698, "led": 1698, "cornerston": 1698, "numba": 1698, "numfocu": 1698, "pydata": 1698, "confer": 1698, "consult": 1698, "servic": 1698, "expertis": 1698, "devop": 1698, "mlop": 1698, "dashboard": 1698, "startup": 1698, "mlir": [1698, 1699, 1702], "Their": 1698, "held": 1698, "privileg": 1698, "presum": 1698, "llvm": [1698, 1701], "founder": 1698, "tvm": [1698, 1702], "sustain": 1698, "empow": 1698, "har": 1698, "burden": 1698, "benchmark": 1698, "convention": 1699, "precompil": 1699, "executor": 1699, "exploit": 1699, "julia": [1699, 1702], "fsf": 1699, "gpl": 1699, "biggest": [1699, 1702], "nvidia": [1700, 1701], "conduct": 1700, "throughput": 1700, "autotun": 1700, "consumpt": 1700, "gpgpu": 1700, "talk": 1701, "classic": 1701, "sycl": 1701, "dpc": 1701, "processor": 1701, "x86": 1701, "oneapi": 1701, "ia": 1701, "aka": 1701, "xeon": 1701, "gen9": 1701, "xe": 1701, "card": 1701, "arria": 1701, "gx": 1701, "fpga": 1701, "tune": [1701, 1702], "lofti": 1702, "ambit": 1702, "realm": 1702, "bedrock": 1702, "flux": 1702, "bite": 1702, "chew": 1702, "eagerpi": 1702, "tensorli": 1702, "thinc": 1702, "neuropod": 1702, "exhibit": 1702, "emploi": 1702, "fx": 1702, "retrain": 1702, "wider": 1702, "closer": 1702, "greatli": 1702, "challeng": 1702, "modular": 1702, "anywher": 1702, "switch": 1703, "theano": 1703, "plaidml": 1703, "partial_svd": 1703, "kron": 1703, "tucker_mode_dot": 1703, "excel": 1703, "subsystem": 1703}, "objects": {"ivy.array": [[45, 0, 0, "-", "activations"], [47, 0, 0, "-", "array"], [49, 0, 0, "-", "conversions"], [54, 0, 0, "-", "creation"], [56, 0, 0, "-", "data_type"], [58, 0, 0, "-", "device"], [60, 0, 0, "-", "elementwise"], [62, 0, 0, "-", "extensions"], [125, 0, 0, "-", "general"], [127, 0, 0, "-", "gradients"], [129, 0, 0, "-", "image"], [131, 0, 0, "-", "layers"], [133, 0, 0, "-", "linear_algebra"], [135, 0, 0, "-", "losses"], [137, 0, 0, "-", "manipulation"], [139, 0, 0, "-", "norms"], [141, 0, 0, "-", "random"], [143, 0, 0, "-", "searching"], [145, 0, 0, "-", "set"], [147, 0, 0, "-", "sorting"], [149, 0, 0, "-", "statistical"], [151, 0, 0, "-", "utility"], [153, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[46, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[46, 2, 1, "", "gelu"], [46, 2, 1, "", "leaky_relu"], [46, 2, 1, "", "log_softmax"], [46, 2, 1, "", "relu"], [46, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [46, 2, 1, "", "softplus"]], "ivy.array.array": [[48, 1, 1, "", "Array"]], "ivy.array.array.Array": [[48, 3, 1, "", "T"], [48, 2, 1, "", "__add__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__le__"], [48, 2, 1, "", "__radd__"], [48, 2, 1, "", "__rrshift__"], [48, 2, 1, "", "__rshift__"], [48, 2, 1, "", "__rsub__"], [48, 2, 1, "", "__sub__"], [48, 3, 1, "", "data"], [48, 3, 1, "", "device"], [48, 3, 1, "", "dtype"], [48, 3, 1, "", "mT"], [48, 3, 1, "", "ndim"], [48, 3, 1, "", "shape"], [48, 3, 1, "", "size"]], "ivy.array.conversions": [[50, 4, 1, "", "args_to_ivy"], [51, 4, 1, "", "args_to_native"], [52, 4, 1, "", "to_ivy"], [53, 4, 1, "", "to_native"]], "ivy.array.creation": [[55, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[55, 2, 1, "", "asarray"], [55, 2, 1, "", "copy_array"], [55, 2, 1, "", "empty_like"], [55, 2, 1, "", "from_dlpack"], [55, 2, 1, "", "full_like"], [55, 2, 1, "", "meshgrid"], [55, 2, 1, "", "native_array"], [55, 2, 1, "", "one_hot"], [55, 2, 1, "", "ones_like"], [55, 2, 1, "", "tril"], [55, 2, 1, "", "triu"], [55, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[57, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[57, 2, 1, "", "astype"], [57, 2, 1, "", "broadcast_arrays"], [57, 2, 1, "", "broadcast_to"], [57, 2, 1, "", "can_cast"], [57, 2, 1, "", "dtype"], [57, 2, 1, "", "finfo"], [57, 2, 1, "", "iinfo"], [57, 2, 1, "", "is_bool_dtype"], [57, 2, 1, "", "is_float_dtype"], [57, 2, 1, "", "is_int_dtype"], [57, 2, 1, "", "is_uint_dtype"], [57, 2, 1, "", "result_type"]], "ivy.array.device": [[59, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[59, 2, 1, "", "dev"], [59, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[61, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[61, 2, 1, "", "abs"], [61, 2, 1, "", "acos"], [61, 2, 1, "", "acosh"], [61, 2, 1, "", "add"], [61, 2, 1, "", "asin"], [61, 2, 1, "", "asinh"], [61, 2, 1, "", "atan"], [61, 2, 1, "", "atan2"], [61, 2, 1, "", "atanh"], [61, 2, 1, "", "bitwise_and"], [61, 2, 1, "", "bitwise_invert"], [61, 2, 1, "", "bitwise_left_shift"], [61, 2, 1, "", "bitwise_or"], [61, 2, 1, "", "bitwise_right_shift"], [61, 2, 1, "", "bitwise_xor"], [61, 2, 1, "", "ceil"], [61, 2, 1, "", "cos"], [61, 2, 1, "", "cosh"], [61, 2, 1, "", "deg2rad"], [61, 2, 1, "", "divide"], [61, 2, 1, "", "equal"], [61, 2, 1, "", "erf"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "expm1"], [61, 2, 1, "", "floor"], [61, 2, 1, "", "floor_divide"], [61, 2, 1, "", "greater"], [61, 2, 1, "", "greater_equal"], [61, 2, 1, "", "isfinite"], [61, 2, 1, "", "isinf"], [61, 2, 1, "", "isnan"], [61, 2, 1, "", "isreal"], [61, 2, 1, "", "less"], [61, 2, 1, "", "less_equal"], [61, 2, 1, "", "log"], [61, 2, 1, "", "log10"], [61, 2, 1, "", "log1p"], [61, 2, 1, "", "log2"], [61, 2, 1, "", "logaddexp"], [61, 2, 1, "", "logical_and"], [61, 2, 1, "", "logical_not"], [61, 2, 1, "", "logical_or"], [61, 2, 1, "", "logical_xor"], [61, 2, 1, "", "maximum"], [61, 2, 1, "", "minimum"], [61, 2, 1, "", "multiply"], [61, 2, 1, "", "negative"], [61, 2, 1, "", "not_equal"], [61, 2, 1, "", "positive"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "rad2deg"], [61, 2, 1, "", "reciprocal"], [61, 2, 1, "", "remainder"], [61, 2, 1, "", "round"], [61, 2, 1, "", "sign"], [61, 2, 1, "", "sin"], [61, 2, 1, "", "sinh"], [61, 2, 1, "", "sqrt"], [61, 2, 1, "", "square"], [61, 2, 1, "", "subtract"], [61, 2, 1, "", "tan"], [61, 2, 1, "", "tanh"], [61, 2, 1, "", "trunc"], [61, 2, 1, "", "trunc_divide"]], "ivy.array.extensions": [[63, 0, 0, "-", "activations"], [87, 0, 0, "-", "conversions"], [89, 0, 0, "-", "creation"], [91, 0, 0, "-", "data_type"], [93, 0, 0, "-", "device"], [95, 0, 0, "-", "elementwise"], [97, 0, 0, "-", "general"], [99, 0, 0, "-", "gradients"], [101, 0, 0, "-", "image"], [103, 0, 0, "-", "layers"], [105, 0, 0, "-", "linear_algebra"], [107, 0, 0, "-", "losses"], [109, 0, 0, "-", "manipulation"], [111, 0, 0, "-", "norms"], [113, 0, 0, "-", "random"], [115, 0, 0, "-", "searching"], [117, 0, 0, "-", "set"], [119, 0, 0, "-", "sorting"], [121, 0, 0, "-", "statistical"], [123, 0, 0, "-", "utility"]], "ivy.array.extensions.activations": [[64, 1, 1, "", "ArrayWithActivationsExtensions"]], "ivy.array.extensions.conversions": [[88, 1, 1, "", "ArrayWithConversionsExtensions"]], "ivy.array.extensions.creation": [[90, 1, 1, "", "ArrayWithCreationExtensions"]], "ivy.array.extensions.data_type": [[92, 1, 1, "", "ArrayWithData_typeExtensions"]], "ivy.array.extensions.device": [[94, 1, 1, "", "ArrayWithDeviceExtensions"]], "ivy.array.extensions.elementwise": [[96, 1, 1, "", "ArrayWithElementWiseExtensions"]], "ivy.array.extensions.elementwise.ArrayWithElementWiseExtensions": [[96, 2, 1, "", "exp2"], [96, 2, 1, "", "float_power"], [96, 2, 1, "", "fmax"], [96, 2, 1, "", "fmod"], [96, 2, 1, "", "lcm"], [96, 2, 1, "", "sinc"], [96, 2, 1, "", "trapz"]], "ivy.array.extensions.general": [[98, 1, 1, "", "ArrayWithGeneralExtensions"]], "ivy.array.extensions.gradients": [[100, 1, 1, "", "ArrayWithGradientsExtensions"]], "ivy.array.extensions.image": [[102, 1, 1, "", "ArrayWithImageExtension"]], "ivy.array.extensions.layers": [[104, 1, 1, "", "ArrayWithLayersExtensions"]], "ivy.array.extensions.layers.ArrayWithLayersExtensions": [[104, 2, 1, "", "flatten"], [104, 2, 1, "", "max_pool1d"], [104, 2, 1, "", "max_pool2d"], [104, 2, 1, "", "pad"]], "ivy.array.extensions.linear_algebra": [[106, 1, 1, "", "ArrayWithLinalgExtensions"]], "ivy.array.extensions.linear_algebra.ArrayWithLinalgExtensions": [[106, 2, 1, "", "diagflat"]], "ivy.array.extensions.losses": [[108, 1, 1, "", "ArrayWithLossesExtensions"]], "ivy.array.extensions.manipulation": [[110, 1, 1, "", "ArrayWithManipulationExtensions"]], "ivy.array.extensions.manipulation.ArrayWithManipulationExtensions": [[110, 2, 1, "", "flipud"], [110, 2, 1, "", "heaviside"], [110, 2, 1, "", "hstack"], [110, 2, 1, "", "moveaxis"], [110, 2, 1, "", "rot90"], [110, 2, 1, "", "vstack"]], "ivy.array.extensions.norms": [[112, 1, 1, "", "ArrayWithNormsExtensions"]], "ivy.array.extensions.random": [[114, 1, 1, "", "ArrayWithRandomExtensions"]], "ivy.array.extensions.random.ArrayWithRandomExtensions": [[114, 2, 1, "", "dirichlet"]], "ivy.array.extensions.searching": [[116, 1, 1, "", "ArrayWithSearchingExtensions"]], "ivy.array.extensions.set": [[118, 1, 1, "", "ArrayWithSetExtensions"]], "ivy.array.extensions.sorting": [[120, 1, 1, "", "ArrayWithSortingExtensions"]], "ivy.array.extensions.sorting.ArrayWithSortingExtensions": [[120, 2, 1, "", "msort"]], "ivy.array.extensions.statistical": [[122, 1, 1, "", "ArrayWithStatisticalExtensions"]], "ivy.array.extensions.statistical.ArrayWithStatisticalExtensions": [[122, 2, 1, "", "median"]], "ivy.array.extensions.utility": [[124, 1, 1, "", "ArrayWithUtilityExtensions"]], "ivy.array.general": [[126, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[126, 2, 1, "", "all_equal"], [126, 2, 1, "", "array_equal"], [126, 2, 1, "", "assert_supports_inplace"], [126, 2, 1, "", "clip_matrix_norm"], [126, 2, 1, "", "clip_vector_norm"], [126, 2, 1, "", "default"], [126, 2, 1, "", "einops_rearrange"], [126, 2, 1, "", "einops_reduce"], [126, 2, 1, "", "einops_repeat"], [126, 2, 1, "", "exists"], [126, 2, 1, "", "fourier_encode"], [126, 2, 1, "", "gather"], [126, 2, 1, "", "gather_nd"], [126, 2, 1, "", "get_num_dims"], [126, 2, 1, "", "has_nans"], [126, 2, 1, "", "inplace_decrement"], [126, 2, 1, "", "inplace_increment"], [126, 2, 1, "", "inplace_update"], [126, 2, 1, "", "is_array"], [126, 2, 1, "", "is_ivy_array"], [126, 2, 1, "", "is_ivy_container"], [126, 2, 1, "", "is_native_array"], [126, 2, 1, "", "scatter_flat"], [126, 2, 1, "", "scatter_nd"], [126, 2, 1, "", "stable_divide"], [126, 2, 1, "", "stable_pow"], [126, 2, 1, "", "supports_inplace_updates"], [126, 2, 1, "", "to_list"], [126, 2, 1, "", "to_numpy"], [126, 2, 1, "", "to_scalar"], [126, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[128, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[128, 2, 1, "", "adam_step"], [128, 2, 1, "", "adam_update"], [128, 2, 1, "", "gradient_descent_update"], [128, 2, 1, "", "is_variable"], [128, 2, 1, "", "lamb_update"], [128, 2, 1, "", "lars_update"], [128, 2, 1, "", "optimizer_update"], [128, 2, 1, "", "stop_gradient"], [128, 2, 1, "", "variable"], [128, 2, 1, "", "variable_data"]], "ivy.array.image": [[130, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[132, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[132, 2, 1, "", "conv1d"], [132, 2, 1, "", "conv1d_transpose"], [132, 2, 1, "", "conv2d"], [132, 2, 1, "", "conv3d"], [132, 2, 1, "", "conv3d_transpose"], [132, 2, 1, "", "depthwise_conv2d"], [132, 2, 1, "", "dropout"], [132, 2, 1, "", "linear"], [132, 2, 1, "", "lstm_update"], [132, 2, 1, "", "multi_head_attention"], [132, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[134, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[134, 2, 1, "", "cholesky"], [134, 2, 1, "", "cross"], [134, 2, 1, "", "det"], [134, 2, 1, "", "diag"], [134, 2, 1, "", "diagonal"], [134, 2, 1, "", "eigh"], [134, 2, 1, "", "eigvalsh"], [134, 2, 1, "", "inner"], [134, 2, 1, "", "inv"], [134, 2, 1, "", "matmul"], [134, 2, 1, "", "matrix_norm"], [134, 2, 1, "", "matrix_rank"], [134, 2, 1, "", "matrix_transpose"], [134, 2, 1, "", "outer"], [134, 2, 1, "", "pinv"], [134, 2, 1, "", "qr"], [134, 2, 1, "", "slogdet"], [134, 2, 1, "", "solve"], [134, 2, 1, "", "svd"], [134, 2, 1, "", "svdvals"], [134, 2, 1, "", "tensordot"], [134, 2, 1, "", "trace"], [134, 2, 1, "", "vander"], [134, 2, 1, "", "vecdot"], [134, 2, 1, "", "vector_norm"], [134, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[136, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[136, 2, 1, "", "binary_cross_entropy"], [136, 2, 1, "", "cross_entropy"], [136, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[138, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[138, 2, 1, "", "clip"], [138, 2, 1, "", "concat"], [138, 2, 1, "", "constant_pad"], [138, 2, 1, "", "expand_dims"], [138, 2, 1, "", "flip"], [138, 2, 1, "", "permute_dims"], [138, 2, 1, "", "repeat"], [138, 2, 1, "", "reshape"], [138, 2, 1, "", "roll"], [138, 2, 1, "", "split"], [138, 2, 1, "", "squeeze"], [138, 2, 1, "", "stack"], [138, 2, 1, "", "swapaxes"], [138, 2, 1, "", "tile"], [138, 2, 1, "", "unstack"], [138, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[140, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[140, 2, 1, "", "layer_norm"]], "ivy.array.random": [[142, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[142, 2, 1, "", "multinomial"], [142, 2, 1, "", "randint"], [142, 2, 1, "", "random_normal"], [142, 2, 1, "", "random_uniform"], [142, 2, 1, "", "shuffle"]], "ivy.array.searching": [[144, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[144, 2, 1, "", "argmax"], [144, 2, 1, "", "argmin"], [144, 2, 1, "", "argwhere"], [144, 2, 1, "", "nonzero"], [144, 2, 1, "", "where"]], "ivy.array.set": [[146, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[146, 2, 1, "", "unique_all"], [146, 2, 1, "", "unique_counts"], [146, 2, 1, "", "unique_inverse"], [146, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[148, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[148, 2, 1, "", "argsort"], [148, 2, 1, "", "searchsorted"], [148, 2, 1, "", "sort"]], "ivy.array.statistical": [[150, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[150, 2, 1, "", "cumprod"], [150, 2, 1, "", "cumsum"], [150, 2, 1, "", "einsum"], [150, 2, 1, "", "max"], [150, 2, 1, "", "mean"], [150, 2, 1, "", "min"], [150, 2, 1, "", "prod"], [150, 2, 1, "", "std"], [150, 2, 1, "", "sum"], [150, 2, 1, "", "var"]], "ivy.array.utility": [[152, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[152, 2, 1, "", "all"], [152, 2, 1, "", "any"]], "ivy.array.wrapping": [[154, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.container": [[156, 0, 0, "-", "activations"], [158, 0, 0, "-", "base"], [162, 0, 0, "-", "conversions"], [164, 0, 0, "-", "creation"], [166, 0, 0, "-", "data_type"], [168, 0, 0, "-", "device"], [292, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[157, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[157, 2, 1, "", "gelu"], [157, 2, 1, "", "leaky_relu"], [157, 2, 1, "", "log_softmax"], [157, 2, 1, "", "relu"], [157, 2, 1, "", "sigmoid"], [157, 2, 1, "", "softmax"], [157, 2, 1, "", "softplus"], [157, 2, 1, "", "static_gelu"], [157, 2, 1, "", "static_leaky_relu"], [157, 2, 1, "", "static_log_softmax"], [157, 2, 1, "", "static_relu"], [157, 2, 1, "", "static_sigmoid"], [157, 2, 1, "", "static_softmax"], [157, 2, 1, "", "static_softplus"]], "ivy.container.base": [[159, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__init__"], [159, 2, 1, "", "__setitem__"], [159, 2, 1, "", "all_false"], [159, 2, 1, "", "all_key_chains"], [159, 2, 1, "", "all_true"], [159, 2, 1, "", "as_bools"], [159, 2, 1, "", "assert_contains_sub_container"], [159, 2, 1, "", "assert_contains_sub_structure"], [159, 2, 1, "", "assert_identical"], [159, 2, 1, "", "assert_identical_structure"], [159, 2, 1, "", "at_key_chain"], [159, 2, 1, "", "at_key_chains"], [159, 2, 1, "", "at_keys"], [159, 2, 1, "", "combine"], [159, 2, 1, "", "common_key_chains"], [159, 3, 1, "", "config"], [159, 2, 1, "", "cont_inplace_update"], [159, 2, 1, "", "contains_sub_container"], [159, 2, 1, "", "contains_sub_structure"], [159, 2, 1, "", "copy"], [159, 2, 1, "", "create_if_absent"], [159, 2, 1, "", "cutoff_at_depth"], [159, 2, 1, "", "cutoff_at_height"], [159, 2, 1, "", "deep_copy"], [159, 3, 1, "", "dev"], [159, 3, 1, "", "dev_str"], [159, 2, 1, "", "diff"], [159, 2, 1, "", "duplicate_array_keychains"], [159, 2, 1, "", "find_sub_container"], [159, 2, 1, "", "find_sub_structure"], [159, 2, 1, "", "flatten_key_chain"], [159, 2, 1, "", "flatten_key_chains"], [159, 2, 1, "", "format_key_chains"], [159, 2, 1, "", "from_disk_as_hdf5"], [159, 2, 1, "", "from_disk_as_json"], [159, 2, 1, "", "from_disk_as_pickled"], [159, 2, 1, "", "from_flat_list"], [159, 2, 1, "", "h5_file_size"], [159, 2, 1, "", "handle_inplace"], [159, 2, 1, "", "has_key"], [159, 2, 1, "", "has_key_chain"], [159, 2, 1, "", "identical"], [159, 2, 1, "", "identical_array_shapes"], [159, 2, 1, "", "identical_configs"], [159, 2, 1, "", "identical_structure"], [159, 2, 1, "", "if_exists"], [159, 3, 1, "", "ivy"], [159, 2, 1, "", "key_chains_containing"], [159, 2, 1, "", "list_join"], [159, 2, 1, "", "list_stack"], [159, 2, 1, "", "map"], [159, 2, 1, "", "map_conts"], [159, 3, 1, "", "max_depth"], [159, 2, 1, "", "multi_map"], [159, 2, 1, "", "multi_map_in_static_method"], [159, 2, 1, "", "num_arrays"], [159, 2, 1, "", "overwrite_at_key_chain"], [159, 2, 1, "", "overwrite_at_key_chains"], [159, 2, 1, "", "prune_empty"], [159, 2, 1, "", "prune_key_chain"], [159, 2, 1, "", "prune_key_chains"], [159, 2, 1, "", "prune_key_from_key_chains"], [159, 2, 1, "", "prune_keys"], [159, 2, 1, "", "prune_keys_from_key_chains"], [159, 2, 1, "", "reduce"], [159, 2, 1, "", "remove_key_length_limit"], [159, 2, 1, "", "remove_print_limit"], [159, 2, 1, "", "reshape_like"], [159, 2, 1, "", "restructure"], [159, 2, 1, "", "restructure_key_chains"], [159, 2, 1, "", "set_at_key_chain"], [159, 2, 1, "", "set_at_key_chains"], [159, 2, 1, "", "set_at_keys"], [159, 3, 1, "", "shapes"], [159, 3, 1, "", "shared_shape"], [159, 2, 1, "", "show"], [159, 2, 1, "", "show_sub_container"], [159, 2, 1, "", "shuffle_h5_file"], [159, 2, 1, "", "size_ordered_arrays"], [159, 2, 1, "", "slice_keys"], [159, 2, 1, "", "slice_via_key"], [159, 2, 1, "", "sort_by_key"], [159, 2, 1, "", "split_conts"], [159, 2, 1, "", "structural_diff"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_disk_as_hdf5"], [159, 2, 1, "", "to_disk_as_json"], [159, 2, 1, "", "to_disk_as_pickled"], [159, 2, 1, "", "to_flat_list"], [159, 2, 1, "", "to_iterator"], [159, 2, 1, "", "to_iterator_keys"], [159, 2, 1, "", "to_iterator_values"], [159, 2, 1, "", "to_jsonable"], [159, 2, 1, "", "to_nested_list"], [159, 2, 1, "", "to_raw"], [159, 2, 1, "", "trim_key"], [159, 2, 1, "", "try_kc"], [159, 2, 1, "", "unify"], [159, 2, 1, "", "unstack_conts"], [159, 2, 1, "", "update_config"], [159, 2, 1, "", "with_default_key_color"], [159, 2, 1, "", "with_entries_as_lists"], [159, 2, 1, "", "with_ivy_backend"], [159, 2, 1, "", "with_key_length_limit"], [159, 2, 1, "", "with_print_indent"], [159, 2, 1, "", "with_print_limit"], [159, 2, 1, "", "with_print_line_spacing"]], "ivy.container.conversions": [[163, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[163, 2, 1, "", "static_to_ivy"], [163, 2, 1, "", "static_to_native"], [163, 2, 1, "", "to_ivy"], [163, 2, 1, "", "to_native"]], "ivy.container.creation": [[165, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[165, 2, 1, "", "empty_like"], [165, 2, 1, "", "from_dlpack"], [165, 2, 1, "", "full_like"], [165, 2, 1, "", "meshgrid"], [165, 2, 1, "", "native_array"], [165, 2, 1, "", "one_hot"], [165, 2, 1, "", "ones_like"], [165, 2, 1, "", "static_arange"], [165, 2, 1, "", "static_asarray"], [165, 2, 1, "", "static_empty_like"], [165, 2, 1, "", "static_eye"], [165, 2, 1, "", "static_from_dlpack"], [165, 2, 1, "", "static_full_like"], [165, 2, 1, "", "static_linspace"], [165, 2, 1, "", "static_logspace"], [165, 2, 1, "", "static_meshgrid"], [165, 2, 1, "", "static_native_array"], [165, 2, 1, "", "static_one_hot"], [165, 2, 1, "", "static_ones"], [165, 2, 1, "", "static_ones_like"], [165, 2, 1, "", "static_tril"], [165, 2, 1, "", "static_triu"], [165, 2, 1, "", "static_zeros"], [165, 2, 1, "", "static_zeros_like"], [165, 2, 1, "", "tril"], [165, 2, 1, "", "triu"], [165, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[167, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[167, 2, 1, "", "astype"], [167, 2, 1, "", "broadcast_arrays"], [167, 2, 1, "", "broadcast_to"], [167, 2, 1, "", "can_cast"], [167, 2, 1, "", "dtype"], [167, 2, 1, "", "finfo"], [167, 2, 1, "", "iinfo"], [167, 2, 1, "", "is_bool_dtype"], [167, 2, 1, "", "is_float_dtype"], [167, 2, 1, "", "is_int_dtype"], [167, 2, 1, "", "is_uint_dtype"], [167, 2, 1, "", "result_type"], [167, 2, 1, "", "static_astype"], [167, 2, 1, "", "static_broadcast_arrays"], [167, 2, 1, "", "static_broadcast_to"], [167, 2, 1, "", "static_can_cast"], [167, 2, 1, "", "static_default_float_dtype"], [167, 2, 1, "", "static_dtype"], [167, 2, 1, "", "static_finfo"], [167, 2, 1, "", "static_function_supported_dtypes"], [167, 2, 1, "", "static_function_unsupported_dtypes"], [167, 2, 1, "", "static_iinfo"], [167, 2, 1, "", "static_is_bool_dtype"], [167, 2, 1, "", "static_is_float_dtype"], [167, 2, 1, "", "static_is_int_dtype"], [167, 2, 1, "", "static_is_uint_dtype"], [167, 2, 1, "", "static_result_type"]], "ivy.container.device": [[169, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[169, 2, 1, "", "dev"], [169, 2, 1, "", "static_dev"], [169, 2, 1, "", "static_to_device"], [169, 2, 1, "", "to_device"]], "ivy.container.wrapping": [[293, 4, 1, "", "add_ivy_container_instance_methods"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"assert": [1, 304], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 297, 300, 313, 316, 333], "handler": [19, 316], "choose_random_backend": 20, "clear_backend_stack": 21, "current_backend": 22, "fn_name_from_version_specific_fn_nam": 23, "get_backend": 24, "set_backend": 25, "set_backend_to_specific_vers": 26, "set_jax_backend": 27, "set_numpy_backend": 28, "set_tensorflow_backend": 29, "set_torch_backend": 30, "unset_backend": 31, "background": [32, 1686], "ml": [33, 1698, 1702], "explos": 33, "standard": [34, 314, 1693, 1702], "skeptic": 34, "complimentari": 34, "v": [34, 333], "competit": 34, "do": [34, 312], "work": [34, 38, 1692], "The": [34, 42, 310, 318, 333], "arrai": [34, 44, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 295, 296, 299, 306, 318, 394, 405, 410, 415, 420, 425, 430, 435, 448, 455, 459, 467, 473, 484, 489, 494, 502, 508, 513, 521, 528, 533, 538, 543, 561, 572, 579, 584, 589, 594, 601, 622, 642, 651, 656, 661, 666, 671, 676, 681, 686, 691, 696, 701, 706, 711, 716, 721, 726, 731, 736, 741, 746, 751, 756, 761, 766, 771, 776, 781, 786, 791, 796, 801, 806, 811, 816, 821, 826, 831, 836, 841, 846, 851, 856, 861, 866, 871, 876, 881, 886, 891, 896, 901, 906, 911, 916, 921, 926, 931, 936, 941, 947, 952, 957, 962, 967, 973, 980, 983, 989, 994, 1001, 1004, 1009, 1014, 1019, 1022, 1029, 1034, 1046, 1054, 1060, 1065, 1070, 1076, 1082, 1087, 1092, 1102, 1107, 1122, 1127, 1133, 1139, 1145, 1150, 1161, 1167, 1171, 1177, 1181, 1187, 1191, 1195, 1201, 1208, 1213, 1220, 1225, 1230, 1239, 1244, 1252, 1257, 1264, 1269, 1274, 1279, 1285, 1290, 1295, 1300, 1305, 1310, 1314, 1317, 1322, 1327, 1332, 1341, 1346, 1351, 1356, 1361, 1366, 1371, 1377, 1382, 1387, 1392, 1397, 1402, 1407, 1412, 1417, 1422, 1427, 1433, 1438, 1443, 1448, 1453, 1458, 1463, 1468, 1473, 1478, 1483, 1488, 1494, 1499, 1504, 1509, 1536, 1541, 1546, 1551, 1556, 1562, 1568, 1573, 1578, 1583, 1589, 1595, 1600, 1605, 1610, 1615, 1620, 1625, 1631, 1636, 1641, 1645, 1649, 1653, 1657, 1661, 1666, 1671, 1676, 1681, 1693], "api": [34, 40, 295, 298, 299, 313, 316, 318, 320, 321, 1693, 1700, 1702], "why": [35, 312], "unifi": [35, 318, 1698, 1702], "No": [35, 41], "more": [35, 41, 314], "re": [35, 312], "implement": 35, "infinit": 35, "shelf": 35, "life": 35, "contribut": [36, 1686], "appli": [37, 332], "librari": [37, 332], "introduct": [37, 310, 311], "exampl": [37, 302, 306, 311, 314], "ivi": [37, 40, 41, 42, 296, 299, 302, 304, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 445, 446, 448, 449, 450, 455, 456, 459, 460, 461, 462, 464, 465, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 528, 529, 530, 531, 533, 534, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 551, 552, 556, 557, 558, 561, 562, 563, 564, 566, 567, 569, 570, 572, 573, 574, 575, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 601, 602, 603, 604, 622, 623, 624, 625, 641, 642, 643, 644, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 691, 692, 693, 694, 696, 697, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 836, 837, 838, 839, 841, 842, 843, 844, 846, 847, 848, 849, 851, 852, 853, 854, 856, 857, 858, 859, 861, 862, 863, 864, 866, 867, 868, 869, 871, 872, 873, 874, 876, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 896, 897, 898, 899, 901, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 949, 951, 952, 953, 954, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 973, 974, 975, 976, 980, 981, 983, 984, 985, 986, 989, 990, 991, 992, 994, 995, 996, 997, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1019, 1020, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1046, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1160, 1161, 1162, 1163, 1167, 1168, 1169, 1171, 1172, 1173, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1187, 1188, 1189, 1191, 1192, 1193, 1195, 1196, 1197, 1200, 1201, 1202, 1203, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1239, 1240, 1241, 1242, 1244, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1314, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1536, 1537, 1538, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1559, 1562, 1563, 1564, 1565, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1654, 1655, 1657, 1658, 1659, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1702], "robot": [37, 329, 332], "build": [38, 316], "doc": 38, "docker": [38, 41, 42], "dockerless": 38, "us": [38, 41, 295, 319], "miniconda": [38, 41], "venv": [38, 41], "document": 38, "pipelin": [38, 299, 312, 333], "make_doc": 38, "sh": 38, "entrypoint": 38, "_make_doc": 38, "generate_src_rst_fil": 38, "py": 38, "sphinx": 38, "correct_built_html_fil": 38, "remove_fil": 38, "help": [39, 42], "resourc": 39, "open": 40, "task": 40, "function": [40, 298, 300, 301, 304, 306, 307, 308, 310, 312, 313, 316, 321, 333], "format": [40, 305, 1695, 1702], "checklist": 40, "frontend": [40, 297, 299, 310, 311, 321], "where": [40, 1587, 1589, 1590, 1591], "place": 40, "extens": [40, 42, 62, 172, 331, 345, 1686], "set": [41, 117, 145, 256, 284, 297, 391, 1592], "up": 41, "clone": 41, "pycharm": [41, 42], "virtual": 41, "environ": 41, "interpret": 41, "window": 41, "maco": 41, "ubuntu": 41, "test": [41, 42, 295, 299, 311, 312], "detail": 41, "hypothesi": [41, 311, 312], "log": [41, 820, 821, 822, 823], "free": 41, "github": [41, 299], "codespac": 41, "pre": [41, 305], "commit": [41, 42, 305], "basic": [42, 310], "get": 42, "todo": 42, "list": 42, "issu": 42, "manag": 42, "your": 42, "fork": 42, "who": 42, "To": 42, "ask": 42, "With": 42, "command": 42, "line": 42, "browser": 42, "pull": [42, 299], "request": [42, 299], "small": 42, "often": 42, "interact": 42, "contain": [42, 155, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 298, 319, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 446, 450, 460, 462, 465, 468, 470, 474, 476, 479, 482, 485, 487, 490, 492, 495, 497, 500, 503, 505, 507, 509, 512, 514, 517, 520, 522, 529, 531, 534, 536, 539, 541, 544, 546, 552, 556, 558, 562, 564, 567, 570, 573, 575, 580, 582, 585, 587, 590, 592, 595, 597, 602, 604, 623, 625, 641, 643, 652, 654, 657, 659, 662, 664, 667, 669, 672, 674, 677, 679, 682, 684, 687, 689, 692, 694, 697, 699, 702, 704, 707, 709, 712, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 752, 754, 757, 759, 762, 764, 767, 769, 772, 774, 777, 779, 782, 784, 787, 789, 792, 794, 797, 799, 802, 804, 807, 809, 812, 814, 817, 819, 822, 824, 827, 829, 832, 834, 837, 839, 842, 844, 847, 849, 852, 854, 857, 859, 862, 864, 867, 869, 872, 874, 877, 879, 882, 884, 887, 889, 892, 894, 897, 899, 902, 904, 907, 909, 912, 914, 917, 919, 922, 924, 927, 929, 932, 934, 937, 939, 942, 944, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 974, 976, 984, 986, 990, 992, 995, 997, 1005, 1007, 1010, 1012, 1015, 1017, 1023, 1025, 1030, 1032, 1035, 1037, 1047, 1049, 1055, 1057, 1061, 1063, 1066, 1068, 1071, 1073, 1077, 1079, 1083, 1085, 1088, 1090, 1093, 1095, 1103, 1105, 1108, 1110, 1123, 1125, 1128, 1130, 1132, 1134, 1138, 1140, 1144, 1146, 1149, 1151, 1160, 1162, 1168, 1172, 1178, 1182, 1184, 1188, 1192, 1196, 1200, 1202, 1207, 1209, 1212, 1214, 1221, 1223, 1226, 1228, 1231, 1233, 1235, 1237, 1240, 1242, 1245, 1247, 1253, 1255, 1258, 1260, 1265, 1267, 1270, 1272, 1275, 1277, 1280, 1282, 1286, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1306, 1308, 1311, 1318, 1320, 1323, 1325, 1328, 1330, 1333, 1335, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1369, 1372, 1374, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1436, 1439, 1441, 1444, 1446, 1449, 1451, 1454, 1456, 1459, 1461, 1464, 1466, 1469, 1471, 1474, 1476, 1479, 1481, 1484, 1486, 1489, 1491, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1537, 1542, 1544, 1547, 1549, 1552, 1554, 1557, 1559, 1563, 1565, 1569, 1571, 1574, 1576, 1579, 1581, 1584, 1586, 1588, 1590, 1594, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1616, 1618, 1621, 1623, 1626, 1628, 1632, 1634, 1637, 1639, 1642, 1646, 1650, 1654, 1658, 1662, 1665, 1667, 1670, 1672, 1677, 1679, 1682, 1684], "run": [42, 295, 312], "local": 42, "most": 42, "out": [42, 306, 309], "id": [42, 295], "data": [43, 56, 91, 166, 230, 300, 310, 312, 319, 333, 351, 524], "class": [43, 304, 310, 318, 1704], "activ": [45, 63, 156, 173, 346, 403, 1705], "arraywithactiv": 46, "convers": [49, 87, 162, 226], "args_to_ivi": 50, "args_to_n": 51, "to_ivi": 52, "to_n": 53, "creation": [54, 89, 164, 228, 349, 442], "arraywithcr": 55, "type": [56, 91, 166, 230, 300, 307, 310, 333, 351, 524], "arraywithdatatyp": 57, "devic": [58, 93, 168, 232, 301, 306, 310, 352, 615], "arraywithdevic": 59, "elementwis": [60, 95, 170, 234, 353, 649], "arraywithelementwis": 61, "arraywithactivationsextens": 64, "method": [65, 175, 298, 310, 311, 318, 319], "diagflat": [66, 176, 373], "dirichlet": [67, 177, 389], "exp2": [68, 178, 354], "flatten": [69, 179, 376], "flipud": [70, 180, 377], "float_pow": [71, 181, 355], "fmax": [72, 182, 356], "fmod": [73, 183, 357], "heavisid": [74, 186, 378], "hstack": [75, 187, 379], "lcm": [76, 190, 358], "max_pool1d": [77, 191, 368], "max_pool2d": [78, 192, 369], "median": [79, 193, 400], "moveaxi": [80, 194, 380], "msort": [81, 195, 393], "pad": [82, 196, 370], "rot90": [83, 197, 383], "sinc": [84, 198, 359], "trapz": [85, 360], "vstack": [86, 225, 384], "arraywithconversionsextens": 88, "arraywithcreationextens": 90, "arraywithdata_typeextens": 92, "arraywithdeviceextens": 94, "arraywithelementwiseextens": 96, "gener": [97, 125, 236, 264, 312, 314, 361, 971], "arraywithgeneralextens": 98, "gradient": [99, 127, 238, 266, 362, 1165], "arraywithgradientsextens": 100, "imag": [101, 129, 240, 268], "arraywithimageextens": 102, "layer": [103, 131, 242, 270, 363, 1217, 1720], "arraywithlayersextens": 104, "linear": [105, 133, 244, 272, 372, 1263, 1264, 1265, 1266, 1283, 1730], "algebra": [105, 133, 244, 272, 372, 1283], "arraywithlinalgextens": 106, "loss": [107, 135, 246, 274, 374, 1415], "arraywithlossesextens": 108, "manipul": [109, 137, 248, 276, 375, 1431], "arraywithmanipulationextens": 110, "norm": [111, 139, 250, 278, 387, 1534, 1734], "arraywithnormsextens": 112, "random": [113, 141, 252, 280, 388, 1539], "arraywithrandomextens": 114, "search": [115, 143, 254, 282, 390, 1566], "arraywithsearchingextens": 116, "arraywithsetextens": 118, "sort": [119, 147, 258, 286, 392, 1613, 1624, 1625, 1626, 1627], "arraywithsortingextens": 120, "statist": [121, 149, 260, 288, 399, 1629], "arraywithstatisticalextens": 122, "util": [123, 151, 262, 290, 401, 1674], "arraywithutilityextens": 124, "arraywithgener": 126, "arraywithgradi": 128, "arraywithimag": 130, "arraywithlay": 132, "arraywithlinearalgebra": 134, "arraywithloss": 136, "arraywithmanipul": 138, "arraywithnorm": 140, "arraywithrandom": 142, "arraywithsearch": 144, "arraywithset": 146, "arraywithsort": 148, "arraywithstatist": 150, "arraywithutil": 152, "wrap": [153, 292, 308], "add_ivy_array_instance_method": 154, "containerwithactiv": 157, "base": 158, "containerbas": 159, "containerwithconvers": 163, "containerwithcr": 165, "containerwithdatatyp": 167, "containerwithdevic": 169, "containerwithelementwis": 171, "containerwithactivationextens": 174, "hamming_window": [184, 364], "hann_window": [185, 365], "kaiser_bessel_derived_window": [188, 366], "kaiser_window": [189, 367], "static_diagflat": 199, "static_dirichlet": 200, "static_exp2": 201, "static_flatten": 202, "static_flipud": 203, "static_float_pow": 204, "static_fmax": 205, "static_fmod": 206, "static_hamming_window": 207, "static_hann_window": 208, "static_heavisid": 209, "static_hstack": 210, "static_kaiser_bessel_derived_window": 211, "static_kaiser_window": 212, "static_lcm": 213, "static_max_pool1d": 214, "static_max_pool2d": 215, "static_median": 216, "static_moveaxi": 217, "static_msort": 218, "static_pad": 219, "static_rot90": 220, "static_sinc": 221, "static_triu_indic": 222, "static_vstack": 223, "triu_indic": [224, 350], "containerwithconversionextens": 227, "containerwithcreationextens": 229, "containerwithdata_typeextens": 231, "containerwithdeviceextens": 233, "containerwithelementwiseextens": 235, "containerwithgeneralextens": 237, "containerwithgradientsextens": 239, "containerwithimageextens": 241, "containerwithlayersextens": 243, "containerwithlinalgextens": 245, "containerwithlossesextens": 247, "containerwithmanipulationextens": 249, "containerwithnormsextens": 251, "containerwithrandomextens": 253, "containerwithsearchingextens": 255, "containerwithsetextens": 257, "containerwithsortingextens": 259, "containerwithstatisticalextens": 261, "containerwithutilityextens": 263, "containerwithgener": 265, "containerwithgradi": 267, "containerwithimag": 269, "containerwithlay": 271, "containerwithlinearalgebra": 273, "containerwithloss": 275, "containerwithmanipul": 277, "containerwithnorm": 279, "containerwithrandom": 281, "containerwithsearch": 283, "containerwithset": 285, "containerwithsort": 287, "containerwithstatist": 289, "containerwithutil": 291, "add_ivy_container_instance_method": 293, "deep": 294, "dive": 294, "termin": 295, "skip": 295, "nativ": 296, "handl": [296, 304, 333], "version": [297, 313, 333], "support": [297, 300, 310, 333], "instanc": [298, 310, 311, 318], "static": 298, "special": [298, 310, 311], "nestabl": [298, 306, 307], "continu": 299, "integr": [299, 312], "action": 299, "core": 299, "nn": 299, "state": [299, 320, 333], "ci": 299, "push": 299, "schedul": 299, "cron": 299, "job": 299, "dashboard": 299, "modul": [300, 301, 320, 1732, 1733], "promot": [300, 310], "argument": [300, 301, 306, 309, 310], "other": [300, 301], "unsupport": 300, "bug": 300, "superset": [300, 314], "docstr": [302, 303], "tan": [302, 311, 950, 952, 953, 954], "roll": [302, 1472, 1473, 1474, 1475], "add": [302, 311, 665, 666, 667, 668, 1702], "except": 304, "handle_except": 304, "decor": 304, "lint": 305, "check": [305, 333], "hook": 305, "posit": [306, 890, 891, 892, 893], "keyword": 306, "input": 306, "dtype": [306, 555, 556, 557], "number": 306, "oper": [306, 318, 333], "integ": 306, "sequenc": 306, "primari": 307, "composit": [307, 310], "mix": 307, "standalon": 307, "conveni": 307, "inplac": 309, "updat": 309, "copi": 309, "unus": 310, "miss": 310, "temporari": 310, "rule": 310, "numpi": [310, 1696], "cast": 310, "full": [311, 471], "helper": [311, 312, 313], "import": 312, "strategi": 312, "we": 312, "need": 312, "how": 312, "write": 312, "effect": 312, "bonu": 312, "extend": [312, 314], "featur": 312, "self": 312, "consist": 312, "explicit": 312, "test_array_funct": 312, "fail": 312, "navig": 313, "code": 313, "categor": 313, "submodul": 313, "design": [313, 315, 1686], "pin": 313, "behaviour": 314, "what": [314, 1702], "i": 314, "A": 314, "non": 314, "duplic": 314, "when": 314, "too": 314, "much": 314, "balanc": 314, "effici": 314, "block": 316, "graph": [316, 321, 1697, 1702], "compil": [316, 321, 347, 439, 440, 1694, 1699, 1701, 1702], "framework": [317, 1696, 1699, 1702, 1703, 1704], "monkei": 318, "patch": 318, "construct": 319, "represent": 319, "recurs": 319, "built": 319, "ins": 319, "access": 319, "save": 319, "load": 319, "comparison": 319, "custom": [319, 333], "case": 319, "compartment": 319, "configur": 319, "network": [319, 321], "weight": 319, "initi": [320, 1710, 1714], "optim": [320, 1736, 1740], "transpil": 321, "role": 321, "convert": [321, 1708], "model": [321, 328, 333], "builder": 323, "ecosystem": 324, "gym": [325, 332], "mech": 326, "memori": [327, 332], "vision": [330, 332], "mechan": 332, "faq": 333, "maintain": 333, "dynam": 333, "size": 333, "shape": [333, 1119], "gpu": 333, "deploy": 333, "control": 333, "flow": 333, "auto": 333, "differenti": 333, "replica": 333, "parallel": 333, "altern": 333, "structur": 333, "func": 334, "wrapper": [334, 1702, 1703], "from_zero_dim_arrays_to_float": 335, "handle_nest": 336, "handle_out_argu": 337, "infer_devic": 338, "infer_dtyp": 339, "inputs_to_ivy_arrai": 340, "inputs_to_native_arrai": 341, "integer_arrays_to_float": 342, "outputs_to_ivy_arrai": 343, "to_native_arrays_and_back": 344, "constant": [348, 441, 1711], "vorbis_window": 371, "ndenumer": 381, "ndindex": 382, "meta": [385, 1512], "nest": [386, 1516], "spars": 394, "is_ivy_sparse_arrai": 395, "is_native_sparse_arrai": 396, "native_sparse_arrai": 397, "native_sparse_array_to_indices_values_and_shap": 398, "gelu": [404, 405, 406, 407, 1707], "static_gelu": 408, "leaky_relu": [409, 410, 411, 412], "static_leaky_relu": 413, "log_softmax": [414, 415, 416, 417], "static_log_softmax": 418, "relu": [419, 420, 421, 422], "static_relu": 423, "sigmoid": [424, 425, 426, 427], "static_sigmoid": 428, "softmax": [429, 430, 431, 432], "static_softmax": 433, "softplu": [434, 435, 436, 437], "static_softplu": 438, "nestedsequ": 443, "arang": [444, 445], "static_arang": 446, "asarrai": [447, 448, 449], "static_asarrai": 450, "asarray_handle_nest": 451, "asarray_infer_devic": 452, "asarray_to_native_arrays_and_back": 453, "copy_arrai": [454, 455, 456], "empti": 457, "empty_lik": [458, 459, 460, 461], "static_empty_lik": 462, "ey": [463, 464], "static_ey": 465, "from_dlpack": [466, 467, 468, 469], "static_from_dlpack": 470, "full_lik": [472, 473, 474, 475], "static_full_lik": 476, "linspac": [477, 478], "static_linspac": 479, "logspac": [480, 481], "static_logspac": 482, "meshgrid": [483, 484, 485, 486], "static_meshgrid": 487, "native_arrai": [488, 489, 490, 491], "static_native_arrai": 492, "one_hot": [493, 494, 495, 496], "static_one_hot": 497, "ones": [498, 499], "static_on": 500, "ones_lik": [501, 502, 503, 504], "static_ones_lik": 505, "tril": [506, 508, 509, 510], "static_tril": 507, "triu": [511, 513, 514, 515], "static_triu": 512, "zero": [516, 518, 1719], "static_zero": 517, "zeros_lik": [519, 521, 522, 523], "static_zeros_lik": 520, "as_ivy_dtyp": 525, "as_native_dtyp": 526, "astyp": [527, 528, 529, 530], "static_astyp": 531, "broadcast_arrai": [532, 533, 534, 535], "static_broadcast_arrai": 536, "broadcast_to": [537, 538, 539, 540], "static_broadcast_to": 541, "can_cast": [542, 543, 544, 545], "static_can_cast": 546, "check_float": 547, "closest_valid_dtyp": 548, "default_dtyp": 549, "default_float_dtyp": [550, 551], "static_default_float_dtyp": 552, "default_int_dtyp": 553, "default_uint_dtyp": 554, "static_dtyp": 558, "dtype_bit": 559, "finfo": [560, 561, 562, 563], "static_finfo": 564, "function_supported_dtyp": [565, 566], "static_function_supported_dtyp": 567, "function_unsupported_dtyp": [568, 569], "static_function_unsupported_dtyp": 570, "iinfo": [571, 572, 573, 574], "static_iinfo": 575, "infer_default_dtyp": 576, "invalid_dtyp": 577, "is_bool_dtyp": [578, 579, 580, 581], "static_is_bool_dtyp": 582, "is_float_dtyp": [583, 584, 585, 586], "static_is_float_dtyp": 587, "is_int_dtyp": [588, 589, 590, 591], "static_is_int_dtyp": 592, "is_uint_dtyp": [593, 594, 595, 596], "static_is_uint_dtyp": 597, "promote_typ": 598, "promote_types_of_input": 599, "result_typ": [600, 601, 602, 603], "static_result_typ": 604, "set_default_dtyp": 605, "set_default_float_dtyp": 606, "set_default_int_dtyp": 607, "set_default_uint_dtyp": 608, "type_promote_arrai": 609, "unset_default_dtyp": 610, "unset_default_float_dtyp": 611, "unset_default_int_dtyp": 612, "unset_default_uint_dtyp": 613, "valid_dtyp": 614, "profil": 616, "as_ivy_dev": 617, "as_native_dev": 618, "clear_mem_on_dev": 619, "default_devic": 620, "dev": [621, 622, 623, 624], "static_dev": 625, "dev_util": 626, "function_supported_devic": 627, "function_unsupported_devic": 628, "get_all_ivy_arrays_on_dev": 629, "gpu_is_avail": 630, "num_cpu_cor": 631, "num_gpu": 632, "num_ivy_arrays_on_dev": 633, "percent_used_mem_on_dev": 634, "print_all_ivy_arrays_on_dev": 635, "set_default_devic": 636, "set_split_factor": 637, "split_factor": 638, "split_func_cal": 639, "to_devic": [640, 642, 643, 644], "static_to_devic": 641, "total_mem_on_dev": 645, "tpu_is_avail": 646, "unset_default_devic": 647, "used_mem_on_dev": 648, "ab": [650, 651, 652, 653], "static_ab": 654, "aco": [655, 656, 657, 658], "static_aco": 659, "acosh": [660, 661, 662, 663], "static_acosh": 664, "static_add": 669, "asin": [670, 671, 672, 673], "static_asin": 674, "asinh": [675, 676, 677, 678], "static_asinh": 679, "atan": [680, 681, 682, 683], "static_atan": 684, "atan2": [685, 686, 687, 688], "static_atan2": 689, "atanh": [690, 691, 692, 693], "static_atanh": 694, "bitwise_and": [695, 696, 697, 698], "static_bitwise_and": 699, "bitwise_invert": [700, 701, 702, 703], "static_bitwise_invert": 704, "bitwise_left_shift": [705, 706, 707, 708], "static_bitwise_left_shift": 709, "bitwise_or": [710, 711, 712, 713], "static_bitwise_or": 714, "bitwise_right_shift": [715, 716, 717, 718], "static_bitwise_right_shift": 719, "bitwise_xor": [720, 721, 722, 723], "static_bitwise_xor": 724, "ceil": [725, 726, 727, 728], "static_ceil": 729, "co": [730, 731, 732, 733], "static_co": 734, "cosh": [735, 736, 737, 738], "static_cosh": 739, "deg2rad": [740, 741, 742, 743], "static_deg2rad": 744, "divid": [745, 746, 747, 748], "static_divid": 749, "equal": [750, 751, 752, 753], "static_equ": 754, "erf": [755, 756, 757, 758], "static_erf": 759, "exp": [760, 761, 762, 763], "static_exp": 764, "expm1": [765, 766, 767, 768], "static_expm1": 769, "floor": [770, 771, 772, 773], "static_floor": 774, "floor_divid": [775, 776, 777, 778], "static_floor_divid": 779, "greater": [780, 781, 782, 783], "static_great": 784, "greater_equ": [785, 786, 787, 788], "static_greater_equ": 789, "isfinit": [790, 791, 792, 793], "static_isfinit": 794, "isinf": [795, 796, 797, 798], "static_isinf": 799, "isnan": [800, 801, 802, 803], "static_isnan": 804, "isreal": [805, 806, 807, 808], "static_isr": 809, "less": [810, 811, 812, 813], "static_less": 814, "less_equ": [815, 816, 817, 818], "static_less_equ": 819, "static_log": 824, "log10": [825, 826, 827, 828], "static_log10": 829, "log1p": [830, 831, 832, 833], "static_log1p": 834, "log2": [835, 836, 837, 838], "static_log2": 839, "logaddexp": [840, 841, 842, 843], "static_logaddexp": 844, "logical_and": [845, 846, 847, 848], "static_logical_and": 849, "logical_not": [850, 851, 852, 853], "static_logical_not": 854, "logical_or": [855, 856, 857, 858], "static_logical_or": 859, "logical_xor": [860, 861, 862, 863], "static_logical_xor": 864, "maximum": [865, 866, 867, 868], "static_maximum": 869, "minimum": [870, 871, 872, 873], "static_minimum": 874, "multipli": [875, 876, 877, 878], "static_multipli": 879, "neg": [880, 881, 882, 883], "static_neg": 884, "not_equ": [885, 886, 887, 888], "static_not_equ": 889, "static_posit": 894, "pow": [895, 896, 897, 898], "static_pow": 899, "rad2deg": [900, 901, 902, 903], "static_rad2deg": 904, "reciproc": [905, 906, 907, 908], "static_reciproc": 909, "remaind": [910, 911, 912, 913], "static_remaind": 914, "round": [915, 916, 917, 918], "static_round": 919, "sign": [920, 921, 922, 923], "static_sign": 924, "sin": [925, 926, 927, 928], "static_sin": 929, "sinh": [930, 931, 932, 933], "static_sinh": 934, "sqrt": [935, 936, 937, 938], "static_sqrt": 939, "squar": [940, 941, 942, 943], "static_squar": 944, "subtract": [945, 947, 948, 949], "static_subtract": 946, "static_tan": 951, "tanh": [955, 957, 958, 959], "static_tanh": 956, "trunc": [960, 962, 963, 964], "static_trunc": 961, "trunc_divid": [965, 967, 968, 969], "static_trunc_divid": 966, "all_equ": [972, 973, 974, 975], "static_all_equ": 976, "arg_info": 977, "arg_nam": 978, "array_equ": [979, 980, 981], "assert_supports_inplac": [982, 983, 984, 985], "static_assert_supports_inplac": 986, "cache_fn": 987, "clip_matrix_norm": [988, 989, 990, 991], "static_clip_matrix_norm": 992, "clip_vector_norm": [993, 994, 995, 996], "static_clip_vector_norm": 997, "container_typ": 998, "current_backend_str": 999, "default": [1000, 1001, 1002], "einops_rearrang": [1003, 1004, 1005, 1006], "static_einops_rearrang": 1007, "einops_reduc": [1008, 1009, 1010, 1011], "static_einops_reduc": 1012, "einops_repeat": [1013, 1014, 1015, 1016], "static_einops_repeat": 1017, "exist": [1018, 1019, 1020], "fourier_encod": [1021, 1022, 1023, 1024], "static_fourier_encod": 1025, "function_supported_devices_and_dtyp": 1026, "function_unsupported_devices_and_dtyp": 1027, "gather": [1028, 1029, 1030, 1031], "static_gath": 1032, "gather_nd": [1033, 1034, 1035, 1036], "static_gather_nd": 1037, "get_all_arrays_in_memori": 1038, "get_array_mod": 1039, "get_exception_trace_mod": 1040, "get_item": 1041, "get_min_bas": 1042, "get_min_denomin": 1043, "get_nestable_mod": 1044, "get_num_dim": [1045, 1046, 1047, 1048], "static_get_num_dim": 1049, "get_queue_timeout": 1050, "get_referrers_recurs": 1051, "get_tmp_dir": 1052, "has_nan": [1053, 1054, 1055, 1056], "static_has_nan": 1057, "inplace_arrays_support": 1058, "inplace_decr": [1059, 1060, 1061, 1062], "static_inplace_decr": 1063, "inplace_incr": [1064, 1065, 1066, 1067], "static_inplace_incr": 1068, "inplace_upd": [1069, 1070, 1071, 1072], "static_inplace_upd": 1073, "inplace_variables_support": 1074, "is_arrai": [1075, 1076, 1077, 1078], "static_is_arrai": 1079, "is_frontend_arrai": 1080, "is_ivy_arrai": [1081, 1082, 1083, 1084], "static_is_ivy_arrai": 1085, "is_ivy_contain": [1086, 1087, 1088, 1089], "static_is_ivy_contain": 1090, "is_native_arrai": [1091, 1092, 1093, 1094], "static_is_native_arrai": 1095, "isscalar": 1096, "match_kwarg": 1097, "multiprocess": 1098, "num_arrays_in_memori": 1099, "print_all_arrays_in_memori": 1100, "scatter_flat": [1101, 1102, 1103, 1104], "static_scatter_flat": 1105, "scatter_nd": [1106, 1107, 1108, 1109], "static_scatter_nd": 1110, "set_array_mod": 1111, "set_exception_trace_mod": 1112, "set_min_bas": 1113, "set_min_denomin": 1114, "set_nestable_mod": 1115, "set_queue_timeout": 1116, "set_shape_array_mod": 1117, "set_tmp_dir": 1118, "shape_array_mod": 1120, "stable_divid": [1121, 1122, 1123, 1124], "static_stable_divid": 1125, "stable_pow": [1126, 1127, 1128, 1129], "static_stable_pow": 1130, "supports_inplace_upd": [1131, 1133, 1134, 1135], "static_supports_inplace_upd": 1132, "to_ivy_shap": 1136, "to_list": [1137, 1139, 1140, 1141], "static_to_list": 1138, "to_native_shap": 1142, "to_numpi": [1143, 1145, 1146, 1147], "static_to_numpi": 1144, "to_scalar": [1148, 1150, 1151, 1152], "static_to_scalar": 1149, "try_else_non": 1153, "unset_array_mod": 1154, "unset_exception_trace_mod": 1155, "unset_nestable_mod": 1156, "unset_queue_timeout": 1157, "unset_shape_array_mod": 1158, "value_is_nan": [1159, 1161, 1162, 1163], "static_value_is_nan": 1160, "vmap": 1164, "adam_step": [1166, 1167, 1168, 1169], "adam_upd": [1170, 1171, 1172, 1173], "execute_with_gradi": 1174, "grad": 1175, "gradient_descent_upd": [1176, 1177, 1178, 1179], "is_vari": [1180, 1181, 1182, 1183], "static_is_vari": 1184, "jac": 1185, "lamb_upd": [1186, 1187, 1188, 1189], "lars_upd": [1190, 1191, 1192, 1193], "optimizer_upd": [1194, 1195, 1196, 1197], "set_with_grad": 1198, "stop_gradi": [1199, 1201, 1202, 1203], "static_stop_gradi": 1200, "unset_with_grad": 1204, "value_and_grad": 1205, "variabl": [1206, 1208, 1209, 1210], "static_vari": 1207, "variable_data": [1211, 1213, 1214, 1215], "static_variable_data": 1212, "with_grad": 1216, "conv": 1218, "conv1d": [1219, 1220, 1221, 1222, 1721], "static_conv1d": 1223, "conv1d_transpos": [1224, 1225, 1226, 1227], "static_conv1d_transpos": 1228, "conv2d": [1229, 1230, 1231, 1232, 1723], "static_conv2d": 1233, "conv2d_transpos": [1234, 1235, 1236], "static_conv2d_transpos": 1237, "conv3d": [1238, 1239, 1240, 1241, 1725], "static_conv3d": 1242, "conv3d_transpos": [1243, 1244, 1245, 1246], "static_conv3d_transpos": 1247, "conv_general_dil": 1248, "conv_general_transpos": 1249, "deconv_length": 1250, "depthwise_conv2d": [1251, 1252, 1253, 1254], "static_depthwise_conv2d": 1255, "dropout": [1256, 1257, 1258, 1259, 1728], "static_dropout": 1260, "get_x_data_format": 1261, "handle_pad": 1262, "static_linear": 1267, "lstm_updat": [1268, 1269, 1270, 1271], "static_lstm_upd": 1272, "multi_head_attent": [1273, 1274, 1275, 1276], "static_multi_head_attent": 1277, "scaled_dot_product_attent": [1278, 1279, 1280, 1281], "static_scaled_dot_product_attent": 1282, "choleski": [1284, 1285, 1286, 1287], "static_choleski": 1288, "cross": [1289, 1290, 1291, 1292], "static_cross": 1293, "det": [1294, 1295, 1296, 1297], "static_det": 1298, "diag": [1299, 1300, 1301, 1302], "static_diag": 1303, "diagon": [1304, 1305, 1306, 1307], "static_diagon": 1308, "eigh": [1309, 1310, 1311, 1312], "eigvalsh": [1313, 1314, 1315], "inner": [1316, 1317, 1318, 1319], "static_inn": 1320, "inv": [1321, 1322, 1323, 1324], "static_inv": 1325, "matmul": [1326, 1327, 1328, 1329], "static_matmul": 1330, "matrix_norm": [1331, 1332, 1333, 1334], "static_matrix_norm": 1335, "matrix_pow": [1336, 1337, 1338], "static_matrix_pow": 1339, "matrix_rank": [1340, 1341, 1342, 1343], "static_matrix_rank": 1344, "matrix_transpos": [1345, 1346, 1347, 1348], "static_matrix_transpos": 1349, "outer": [1350, 1351, 1352, 1353], "static_out": 1354, "pinv": [1355, 1356, 1357, 1358], "static_pinv": 1359, "qr": [1360, 1361, 1362, 1363], "static_qr": 1364, "slogdet": [1365, 1366, 1367, 1368], "static_slogdet": 1369, "solv": [1370, 1371, 1372, 1373], "static_solv": 1374, "svd": [1375, 1377, 1378, 1379], "static_svd": 1376, "svdval": [1380, 1382, 1383, 1384], "static_svdv": 1381, "tensordot": [1385, 1387, 1388, 1389], "static_tensordot": 1386, "trace": [1390, 1392, 1393, 1394], "static_trac": 1391, "vander": [1395, 1397, 1398, 1399], "static_vand": 1396, "vecdot": [1400, 1402, 1403, 1404], "static_vecdot": 1401, "vector_norm": [1405, 1407, 1408, 1409], "static_vector_norm": 1406, "vector_to_skew_symmetric_matrix": [1410, 1412, 1413, 1414], "static_vector_to_skew_symmetric_matrix": 1411, "binary_cross_entropi": [1416, 1417, 1418, 1419], "static_binary_cross_entropi": 1420, "cross_entropi": [1421, 1422, 1423, 1424], "static_cross_entropi": 1425, "sparse_cross_entropi": [1426, 1427, 1428, 1429], "static_sparse_cross_entropi": 1430, "clip": [1432, 1433, 1434, 1435], "static_clip": 1436, "concat": [1437, 1438, 1439, 1440], "static_concat": 1441, "constant_pad": [1442, 1443, 1444, 1445], "static_constant_pad": 1446, "expand_dim": [1447, 1448, 1449, 1450], "static_expand_dim": 1451, "flip": [1452, 1453, 1454, 1455], "static_flip": 1456, "permute_dim": [1457, 1458, 1459, 1460], "static_permute_dim": 1461, "repeat": [1462, 1463, 1464, 1465], "static_repeat": 1466, "reshap": [1467, 1468, 1469, 1470], "static_reshap": 1471, "static_rol": 1476, "split": [1477, 1478, 1479, 1480], "static_split": 1481, "squeez": [1482, 1483, 1484, 1485], "static_squeez": 1486, "stack": [1487, 1488, 1489, 1490], "static_stack": 1491, "swapax": [1492, 1494, 1495, 1496], "static_swapax": 1493, "tile": [1497, 1499, 1500, 1501], "static_til": 1498, "unstack": [1502, 1504, 1505, 1506], "static_unstack": 1503, "zero_pad": [1507, 1509, 1510, 1511], "static_zero_pad": 1508, "fomaml_step": 1513, "maml_step": 1514, "reptile_step": 1515, "all_nested_indic": 1517, "copy_nest": 1518, "index_nest": 1519, "insert_into_nest_at_index": 1520, "insert_into_nest_at_indic": 1521, "map": 1522, "map_nest_at_index": 1523, "map_nest_at_indic": 1524, "multi_index_nest": 1525, "nested_ani": 1526, "nested_argwher": 1527, "nested_map": 1528, "nested_multi_map": 1529, "prune_nest_at_index": 1530, "prune_nest_at_indic": 1531, "set_nest_at_index": 1532, "set_nest_at_indic": 1533, "layer_norm": [1535, 1536, 1537, 1538], "multinomi": [1540, 1541, 1542, 1543], "static_multinomi": 1544, "randint": [1545, 1546, 1547, 1548], "static_randint": 1549, "random_norm": [1550, 1551, 1552, 1553], "static_random_norm": 1554, "random_uniform": [1555, 1556, 1557, 1558], "static_random_uniform": 1559, "seed": 1560, "shuffl": [1561, 1562, 1563, 1564], "static_shuffl": 1565, "argmax": [1567, 1568, 1569, 1570], "static_argmax": 1571, "argmin": [1572, 1573, 1574, 1575], "static_argmin": 1576, "argwher": [1577, 1578, 1579, 1580], "static_argwher": 1581, "nonzero": [1582, 1583, 1584, 1585], "static_nonzero": 1586, "static_wher": 1588, "unique_al": [1593, 1595, 1596, 1597], "static_unique_al": 1594, "unique_count": [1598, 1600, 1601, 1602], "static_unique_count": 1599, "unique_invers": [1603, 1605, 1606, 1607], "static_unique_invers": 1604, "unique_valu": [1608, 1610, 1611, 1612], "static_unique_valu": 1609, "argsort": [1614, 1615, 1616, 1617], "static_argsort": 1618, "searchsort": [1619, 1620, 1621, 1622], "static_searchsort": 1623, "static_sort": 1628, "cumprod": [1630, 1631, 1632, 1633], "static_cumprod": 1634, "cumsum": [1635, 1636, 1637, 1638], "static_cumsum": 1639, "einsum": [1640, 1641, 1642, 1643], "max": [1644, 1645, 1646, 1647], "mean": [1648, 1649, 1650, 1651], "min": [1652, 1653, 1654, 1655], "prod": [1656, 1657, 1658, 1659], "std": [1660, 1661, 1662, 1663], "sum": [1664, 1666, 1667, 1668], "static_sum": 1665, "var": [1669, 1671, 1672, 1673], "static_var": 1670, "all": [1675, 1676, 1677, 1678], "static_al": 1679, "ani": [1680, 1681, 1682, 1683], "static_ani": 1684, "glossari": 1685, "content": 1686, "overview": 1686, "quick": 1686, "start": 1686, "citat": 1686, "inspect": 1689, "add_array_spec": 1690, "fn_array_spec": 1691, "relat": 1692, "infrastructur": [1694, 1702], "llvm": 1694, "mlir": 1694, "oneapi": 1694, "exchang": [1695, 1702], "onnx": 1695, "nnef": 1695, "coreml": 1695, "matlab": 1696, "scipi": 1696, "torch": [1696, 1697], "scikit": 1696, "learn": 1696, "theano": 1696, "panda": 1696, "julia": 1696, "apach": [1696, 1699], "spark": 1696, "mllib": 1696, "caff": 1696, "chainer": 1696, "tensorflow": 1696, "1": 1696, "mxnet": 1696, "cntk": 1696, "pytorch": 1696, "flux": 1696, "jax": 1696, "2": 1696, "dex": 1696, "languag": 1696, "tracer": [1697, 1702], "tf": 1697, "jaxpr": 1697, "jit": 1697, "fx": 1697, "compani": [1698, 1702], "quansight": 1698, "modular": 1698, "octoml": 1698, "multi": [1699, 1702], "vendor": [1699, 1700, 1701, 1702], "tvm": 1699, "xla": 1699, "gcc": 1699, "specif": [1700, 1701, 1702], "tensorrt": 1700, "cuda": 1700, "icc": 1701, "icx": 1701, "nvcc": 1701, "doe": 1702, "eagerpi": 1703, "kera": 1703, "thinc": 1703, "tensorli": 1703, "neuropod": 1703, "geglu": 1706, "to_ivy_modul": 1709, "firstlayersiren": 1712, "glorotuniform": 1713, "kaimingnorm": 1715, "Ones": 1716, "siren": 1717, "uniform": 1718, "conv1dtranspos": 1722, "conv2dtranspos": 1724, "conv3dtranspos": 1726, "depthwiseconv2d": 1727, "lstm": 1729, "multiheadattent": 1731, "layernorm": 1735, "adam": 1737, "lamb": 1738, "lar": 1739, "sgd": 1741, "sequenti": [1742, 1743], "verbos": 1745, "cprint": 1746}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})